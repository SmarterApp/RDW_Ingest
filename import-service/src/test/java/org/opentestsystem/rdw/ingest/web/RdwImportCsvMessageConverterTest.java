package org.opentestsystem.rdw.ingest.web;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.ingest.common.model.RdwImportContent;
import org.springframework.mock.http.MockHttpInputMessage;
import org.springframework.mock.http.MockHttpOutputMessage;

import java.io.IOException;
import java.nio.charset.Charset;
import java.time.Instant;
import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;

public class RdwImportCsvMessageConverterTest {

    private RdwImportCsvMessageConverter converter;

    @Before
    public void createConverter() {
        converter = new RdwImportCsvMessageConverter();
    }

    @Test
    public void itSupportsRdwImportReconciliation() {
        assertThat(converter.supports(RdwImportReconciliation.class)).isTrue();
    }

    @Test
    public void itDoesNotReadCsv() throws IOException {
        final MockHttpInputMessage inputMessage = new MockHttpInputMessage("student_id,asmt_guid,date_taken\n".getBytes("UTF-8"));
        assertThat(converter.readInternal(RdwImportReconciliation.class, inputMessage)).isNull();
    }

    @Test
    public void itShouldWriteCsv() throws IOException {
        final String expected = "student_id,asmt_guid,date_taken\n" +
                "1060921618,SBAC-IAB-FIXED-G11E-Editing-ELA-11-2016-2017,20170203\n" +
                "1071550473,SBAC-IAB-FIXED-G11E-Editing-ELA-11-2016-2017,20170320\n";
        final MockHttpOutputMessage outputMessage = new MockHttpOutputMessage();

        converter.writeInternal(createTestData(), outputMessage);

        assertThat(outputMessage.getBodyAsString(Charset.forName("UTF-8"))).isEqualTo(expected);
    }

    private RdwImportReconciliation createTestData() {
        final List<RdwImportContent> content = newArrayList();
        content.add(RdwImportContent.builder()
                .studentId("1060921618")
                .assessmentNaturalId("SBAC-IAB-FIXED-G11E-Editing-ELA-11-2016-2017")
                .completedAt(Instant.parse("2017-02-03T12:34:00Z"))
                .build());
        content.add(RdwImportContent.builder()
                .studentId("1071550473")
                .assessmentNaturalId("SBAC-IAB-FIXED-G11E-Editing-ELA-11-2016-2017")
                .completedAt(Instant.parse("2017-03-20T08:18:00Z"))
                .build());

        return new RdwImportReconciliation(content);
    }
}