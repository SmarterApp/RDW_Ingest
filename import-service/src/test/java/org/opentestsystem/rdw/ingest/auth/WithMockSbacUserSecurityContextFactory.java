package org.opentestsystem.rdw.ingest.auth;

import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.context.SecurityContext;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.test.context.support.WithSecurityContextFactory;
import org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationToken;

import java.util.stream.Collectors;
import java.util.stream.Stream;

public class WithMockSbacUserSecurityContextFactory implements WithSecurityContextFactory<WithMockSbacUser> {
    @Override
    public SecurityContext createSecurityContext(final WithMockSbacUser annotation) {
        final SbacUser user = SbacUser.builder()
                .username(annotation.username())
                .password(annotation.password())
                .authorities(Stream.of(annotation.authorities()).map(SimpleGrantedAuthority::new).collect(Collectors.toList()))
                .tenancyChain(annotation.tenancyChain())
                .uid(annotation.username())
                .sbacUuid(annotation.username())
                .build();

        final SecurityContext context = SecurityContextHolder.createEmptyContext();
        context.setAuthentication(new PreAuthenticatedAuthenticationToken(user, user.getPassword(), user.getAuthorities()));
        return context;
    }
}
