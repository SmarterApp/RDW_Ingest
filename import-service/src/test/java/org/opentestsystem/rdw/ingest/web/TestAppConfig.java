package org.opentestsystem.rdw.ingest.web;

import org.springframework.cloud.autoconfigure.RefreshAutoConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;

import org.opentestsystem.rdw.ingest.repository.DataSourceConfiguration;
import org.opentestsystem.rdw.multitenant.TenantProperties;

import static com.google.common.collect.Lists.newArrayList;

/**
 * This configures an application context that has just enough to test controllers.
 */
@Configuration
@ComponentScan({"org.opentestsystem.rdw.ingest.web", "org.opentestsystem.rdw.ingest.auth"})
@Import({
        DataSourceConfiguration.class,
        RefreshAutoConfiguration.class,
})
@EnableWebMvc
class TestAppConfig {

    static final String AuthHeader = "Authorization";
    static final String ClientToken = "sbac;;";
    static final String AuthHeaderForClient = "Bearer " + ClientToken;
    static final String UserTokenWithAuthority = "sbac;dwtest@example.com;|CA|ASMTDATALOAD|STATE|SBAC||||CA|CA|||||||||";
    static final String AuthHeaderWithAuthority = "Bearer " + UserTokenWithAuthority;

    @Bean
    public TenantProperties tenantProperties() {
        final TenantProperties.Tenant tenant = new TenantProperties.Tenant();
        tenant.setId("CA");
        tenant.setKey("CA");
        tenant.setName("CA");
        final TenantProperties tenantProperties = new TenantProperties();
        tenantProperties.setTenants(newArrayList(tenant));
        return tenantProperties;
    }
}
