package org.opentestsystem.rdw.ingest.service;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.opentestsystem.rdw.common.model.ImportContent;
import org.opentestsystem.rdw.ingest.auth.SbacUserTest;
import org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor;
import org.springframework.http.MediaType;
import org.springframework.messaging.Message;
import org.springframework.messaging.MessageChannel;
import org.springframework.security.authentication.TestingAuthenticationToken;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;

@RunWith(SpringRunner.class)
public class DefaultImportSourceTest {

    private DefaultImportSource importSource;
    private MessageChannel channel;

    @Before
    public void createImportSource() {
        channel = mock(MessageChannel.class);

        importSource = new DefaultImportSource();
        importSource.setOutputChannel(channel);
    }

    @Before
    public void setUser() {
        SecurityContextHolder.getContext()
                .setAuthentication(new TestingAuthenticationToken(SbacUserTest.testUser(), null));
    }

    @Test
    public void submitExamShouldSetHeadersAndSendMessage() {
        final byte[] body = "<TDSReport/>".getBytes();
        final long importId = 123L;

        importSource.submitContent(body, ImportContent.EXAM, "application/xml", importId);

        final ArgumentCaptor<Message> messageArgumentCaptor = ArgumentCaptor.forClass(Message.class);
        verify(channel).send(messageArgumentCaptor.capture());
        final Message message = messageArgumentCaptor.getValue();
        final RdwMessageHeaderAccessor accessor = RdwMessageHeaderAccessor.wrap(message);
        assertThat(message.getPayload()).isEqualTo(body);
        assertThat(accessor.getContentType()).isEqualTo(MediaType.APPLICATION_XML);
        assertThat(accessor.getImportId()).isEqualTo(importId);
    }
}
