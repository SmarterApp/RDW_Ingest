package org.opentestsystem.rdw.ingest.web;

import org.opentestsystem.rdw.common.model.ImportContent;
import org.opentestsystem.rdw.ingest.auth.SbacUserDetails;
import org.opentestsystem.rdw.ingest.common.model.RdwImportQuery;
import org.opentestsystem.rdw.ingest.service.DuplicateContentAction;
import org.opentestsystem.rdw.ingest.service.ImportService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import java.util.List;
import java.util.Map;

import static com.google.common.net.HttpHeaders.CONTENT_TYPE;

/**
 * Controller for student groups end-points
 */
@RestController
@RequestMapping({ "/groups" })
class GroupController extends ScopedImportController {

    @Autowired
    public GroupController(final ImportService service) {
        super(service, ImportContent.GROUPS, DuplicateContentAction.Reprocess);
    }

    @PostMapping("/imports")
    @ResponseStatus(HttpStatus.ACCEPTED)
    public RdwImportResource postImport(@AuthenticationPrincipal final SbacUserDetails sbacUser,
                                        @RequestHeader(value = CONTENT_TYPE, required = false) final String contentType,
                                        @RequestBody final byte[] body,
                                        @RequestParam final Map<String, String> requestParams) {
        // TODO - should we remove this method? if we don't a client could post byte[] content
        // TODO   which won't be processed properly unless we make further changes to the processor
        return super.postImport(sbacUser, contentType, body, requestParams);
    }

    @PostMapping(value = "/imports", consumes = "multipart/form-data")
    @ResponseStatus(HttpStatus.ACCEPTED)
    public RdwImportResource uploadImport(@AuthenticationPrincipal final SbacUserDetails sbacUser,
                                          final MultipartHttpServletRequest request) {
        return super.uploadImport(sbacUser, request, true);
    }

    @GetMapping("/imports")
    public List<RdwImportResource> getImports(final RdwImportQuery query) {
        return super.getImports(query);
    }

    @PostMapping("/imports/resubmit")
    @ResponseStatus(HttpStatus.ACCEPTED)
    public ResponseEntity<Long> resubmitImports(final RdwImportQuery query) {
        return super.resubmitImports(query);
    }
}
