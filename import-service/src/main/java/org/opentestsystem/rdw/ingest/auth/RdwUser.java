package org.opentestsystem.rdw.ingest.auth;

import org.opentestsystem.rdw.utils.TenancyChain;
import org.springframework.ldap.core.DirContextAdapter;
import org.springframework.ldap.core.DirContextOperations;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.ldap.userdetails.LdapUserDetailsImpl;
import org.springframework.security.ldap.userdetails.Person;

import java.util.Collection;

/**
 * Extend ldap user to store tenancy chain.
 */
public class RdwUser extends Person {

    private TenancyChain tenancyChain;

    protected RdwUser() {
    }

    public TenancyChain getTenancyChain() {
        return tenancyChain;
    }

    @Override
    protected void populateContext(final DirContextAdapter adapter) {
        super.populateContext(adapter);
        adapter.setAttributeValue("sbacTenancyChain", tenancyChain.toString());
    }


    public static class Essence extends Person.Essence {
        public Essence() {
            super();
        }

        public Essence(final DirContextOperations ctx) {
            super(ctx);
            setTenancyChain(TenancyChain.fromString(String.join(",", ctx.getStringAttributes("sbacTenancyChain"))));
        }

        public Essence(final RdwUser copyMe) {
            super(copyMe);
            ((RdwUser)instance).tenancyChain = copyMe.tenancyChain;
        }

        public Essence(final String username,
                       final String password,
                       final Collection<? extends GrantedAuthority> authorities,
                       final TenancyChain tenancyChain) {
            super();
            setUsername(username);
            setPassword(password);
            setAuthorities(authorities);
            setTenancyChain(tenancyChain);
        }

        @Override
        protected LdapUserDetailsImpl createTarget() {
            return new RdwUser();
        }

        @Override
        public RdwUser createUserDetails() {
            return (RdwUser) super.createUserDetails();
        }

        TenancyChain getTenancyChain() {
            return ((RdwUser)instance).tenancyChain;
        }

        void setTenancyChain(final TenancyChain chain) {
            ((RdwUser)instance).tenancyChain = chain;
        }
    }
}
