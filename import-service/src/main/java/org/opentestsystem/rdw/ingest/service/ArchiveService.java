package org.opentestsystem.rdw.ingest.service;

import java.util.Properties;

/**
 * A service for reading from and writing to resource in an archive.
 * <p>
 * This is very specific to the needs of the import service: the payloads are expected to
 * be not-large, and there is a hash id that can be used to partition the resources.
 * </p>
 */
public interface ArchiveService {

    /**
     * Write the resource using the given location as the unique id.
     * Store the resource properties if provided. As a convention, property keys look
     * like HTTP headers, for example "content-type".
     *
     * @param location unique (relative) location for content, e.g. "EXAM/4F/0A/4F0A1245"
     * @param content content to write
     * @param properties optional content properties to store
     */
    void writeResource(String location, String content, Properties properties);

    /**
     * Read a resource identified by the unique id.
     *
     * @param location unique (relative) location for content, e.g. "EXAM/4F/0A/4F0A1245"
     * @return content, null if not found
     */
    String readResource(String location);

    /**
     * Read the properties for the given resource location.
     *
     * @param location unique (relative) location for content
     * @return content properties, may be empty, won't be null
     */
    Properties readProperties(String location);
}
