package org.opentestsystem.rdw.ingest.repository;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;
import org.opentestsystem.rdw.ingest.multitenant.TenantConfiguration;
import org.opentestsystem.rdw.multitenant.TenantKeyResolver;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsProperties;
import org.opentestsystem.rdw.multitenant.datasource.DataSourceElementsResolver;
import org.opentestsystem.rdw.multitenant.datasource.TenantDynamicRoutingDataSource;
import org.opentestsystem.rdw.security.repository.JdbcOrganizationRepository;

/**
 * Data source configuration.
 */
@Configuration
@Import({
        JdbcOrganizationRepository.class,   // needed by authority service
        TenantConfiguration.class
})
@EnableTransactionManagement
public class DataSourceConfiguration {

    @Bean
    @ConfigurationProperties("datasources.warehouse_rw")
    @RefreshScope
    public DataSourceElementsProperties dataSourceElementsProperties() {
        return new DataSourceElementsProperties();
    }

    @Bean
    public DataSourceElementsResolver dataSourceElementsResolver(final TenantKeyResolver tenantKeyResolver) {
        return new DataSourceElementsResolver(tenantKeyResolver, dataSourceElementsProperties());
    }

    @Bean
    @RefreshScope
    public DataSource dataSource(final TenantKeyResolver tenantKeyResolver) {
        return new TenantDynamicRoutingDataSource(dataSourceElementsResolver(tenantKeyResolver), tenantKeyResolver);
    }

    // repositories pulled in from common require precise bean name
    @Bean(name = {"queryJdbcTemplate", "warehouseJdbcTemplate"})
    public NamedParameterJdbcTemplate queryJdbcTemplate(final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    @Bean
    public PlatformTransactionManager txManager(final DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }
}
