package org.opentestsystem.rdw.ingest.auth;

import org.opentestsystem.rdw.security.client.permissionservice.PermissionWebServiceClient;
import org.opentestsystem.rdw.security.service.ComponentPermissionService;
import org.opentestsystem.rdw.security.service.PermissionService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.client.RestTemplate;

/**
 * Default security configuration uses the real ForgeRockTokenServices and Authority/Permission services.
 * Note that the (basic) PermissionService will be wrapped by the CachingPermissionService.
 */
@Configuration
@ConditionalOnMissingBean(StubSecurityConfiguration.class)
class SecurityConfiguration {

    @Bean
    @ConfigurationProperties(prefix = "security.oauth2")
    public ForgeRockTokenServices forgeRockTokenServices(final SbacTokenConverter tokenConverter) {
        return new ForgeRockTokenServices(tokenConverter);
    }

    @Bean
    public PermissionService basicPermissionService(final PermissionWebServiceClient client,
                                                    @Value("${security.permission-service.component}") final String component) {
        return new ComponentPermissionService(client, component);
    }

    @Bean
    public PermissionWebServiceClient permissionWebServiceClient(
            @Value("${security.permission-service.endpoint}") final String endpoint) {
        return new PermissionWebServiceClient(new RestTemplate(), endpoint);
    }
}
