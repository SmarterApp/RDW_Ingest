sql:
  import:
    count: >-
      SELECT count(*) from import

    create: >-
      INSERT INTO import (status, content, contentType, digest, batch, creator, created, message)
        VALUES (:status, :content, :contentType, :digest, :batch, :creator, :created, :message)

    delete: >-
      DELETE FROM import WHERE id=:id

    exists: >-
      SELECT (CASE WHEN EXISTS (SELECT 1 FROM import WHERE id=:id) THEN true ELSE false END) exist

    findOne: >-
      SELECT * FROM import WHERE id=:id

    findOneByDigest: >-
      SELECT * FROM import WHERE digest=:digest

    # The repository assumes that the where clause is the same for findBy, exams, and iabExams
    findBy: >-
     SELECT *
     FROM import i
     WHERE (:content IS NULL OR i.content=:content)
       AND (:status IS NULL OR i.status = :status)
       AND (:batch IS NULL OR i.batch = :batch)
       AND (:creator IS NULL OR i.creator = :creator)
       AND (:before IS NULL OR i.created < :before)
       AND (:after IS NULL OR i.created > :after)
     LIMIT 100000

    content:

      # The repository assumes that the where clause is the same for findBy, exams, and iabExams
      exams: >-
        SELECT s.ssid, a.natural_id, e.completed_at
        FROM import i
          JOIN exam e ON e.import_id = i.id
          JOIN exam_student es ON es.id = e.exam_student_id
          JOIN student s ON s.id = es.student_id
          JOIN asmt a ON a.id = e.asmt_id
        WHERE (:content IS NULL OR i.content=:content)
          AND (:status IS NULL OR i.status = :status)
          AND (:batch IS NULL OR i.batch = :batch)
          AND (:creator IS NULL OR i.creator = :creator)
          AND (:before IS NULL OR i.created < :before)
          AND (:after IS NULL OR i.created > :after)
        LIMIT 100000

      # The repository assumes that the where clause is the same for findBy, exams, and iabExams
      iabExams: >-
        SELECT s.ssid, a.natural_id, ie.completed_at
        FROM import i
          JOIN iab_exam ie ON ie.import_id = i.id
          JOIN iab_exam_student ies ON ies.id = ie.iab_exam_student_id
          JOIN student s ON s.id = ies.student_id
          JOIN asmt a ON a.id = ie.asmt_id
        WHERE (:content IS NULL OR i.content=:content)
          AND (:status IS NULL OR i.status = :status)
          AND (:batch IS NULL OR i.batch = :batch)
          AND (:creator IS NULL OR i.creator = :creator)
          AND (:before IS NULL OR i.created < :before)
          AND (:after IS NULL OR i.created > :after)
        LIMIT 100000

  importStatus:
    findAll: >-
      SELECT * FROM import_status