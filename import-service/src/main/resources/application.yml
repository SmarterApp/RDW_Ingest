# this application' security configurer doesn't play nice with the management web security auto configuration
# so disable that and, like the other apps, switch the actuator end-points to a less standard port
# (note that the server.port should still be set to the default 8080)
management:
  port: 8008
  security:
    enabled: false

# spring auto-configured aws defense
cloud:
  aws:
    # there must be a default region when running locally
    region:
      auto: false
      static: us-west-2
    # disable CloudFormation stuff
    stack:
      auto: false
    credentials:
      instance-profile: false

# use LocalArchiveService by default
archive:
  root: file:///tmp/

# cause StubTokenServices to be used
security:
  oauth2:
    token-info-url: local

# default values to give reasonable performance; adjust for tiny/huge configurations
server:
  tomcat:
    max-connections: 0
    max-threads: 10
    accept-count: 20

spring:
  # Force the (rabbit) queues to be created when posting messages so, even if
  # there are no consumers running, the messages will not get lost. Routing is
  # dynamic based on content but there is no way to do that here so we must
  # explicitly declare all possible output channels here (EXAM, PACKAGE, etc.).
  # The group names must be coordinated with the consumer application configs.
  cloud:
    stream:
      bindings:
        CODES:
          producer:
            requiredGroups: default
        EXAM:
          producer:
            requiredGroups: default
        ORGANIZATION:
          producer:
            requiredGroups: default
        PACKAGE:
          producer:
            requiredGroups: default

  datasource:
    url: "\
      jdbc:mysql://${spring.datasource.url-server:localhost:3306}/${spring.datasource.url-schema:warehouse}\
      ?useSSL=${spring.datasource.use-ssl:false}\
      &useLegacyDatetimeCode=${spring.datasource.use-legacy-datetime-code:false}\
      &characterEncoding=${spring.datasource.character-encoding:utf8}\
      "
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    maxActive: 20
    initialSize: 4
    maxWait: 10000

  http:
    multipart:
      max-file-size: 32MB
      max-request-size: 32MB

  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false