package org.opentestsystem.rdw.ingest.common.repository;

import org.opentestsystem.rdw.ingest.common.model.School;

/**
 * Repository for managing {@link School}
 */
public interface SchoolRepository {
    /**
     * Finds a {@link School} by its natural id if one exists.
     * Otherwise creates a new one.
     * If the given object is the same as the persisted one, its import id is not updated.
     *
     * @param school   a school to find or create
     * @param importId an id of the import that is manipulating this entity
     * @return an id of the found or created school
     */
    int upsert(School school, long importId);

    /**
     * Upsert a collection of schools.<br/>
     * Based on natural id it will insert a new school or update an existing one.
     * If the school already exists with the same data no writes will occur.
     * The same logic is applied to the embedded district.
     *
     * @param schools schools to upsert
     * @param importId import id to associate with any change.
     */
    void upsert(Iterable<School> schools, long importId);

    /**
     * Find id of the school by the given natural id
     * @param naturalId the natural id
     * @return the dbid, null if not found
     */
    Integer findIdByNaturalId(String naturalId);
}
