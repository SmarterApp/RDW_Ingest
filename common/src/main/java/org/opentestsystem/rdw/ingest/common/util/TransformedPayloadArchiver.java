package org.opentestsystem.rdw.ingest.common.util;

import org.springframework.util.DigestUtils;
import org.springframework.util.MimeType;

import java.util.Properties;
import org.opentestsystem.rdw.common.model.ImportContent;
import org.opentestsystem.rdw.common.model.LocationStrategy;

/**
 * Archiver for the transformed payload created during the pre-processor phase of one of the ingest processors.
 * The original payload is already archived as part of the import service, and this service will save the transformed
 * under the same name but with "-transform" added to it.
 *
 * If there is no transformation of the payload during pre-processing then no transformed file will be saved.
 */
public class TransformedPayloadArchiver {
    protected static final String ContentTypeProperty = "Content-Type";
    protected static final String ContentLengthProperty = "Content-Length";

    public static void archive(final byte[] originalPayload,
                        final byte[] transformedPayload,
                        final ImportContent content,
                        final MimeType contentType,
                        final ByteArrayContentWriter archiveService) {

        final String digest = DigestUtils.md5DigestAsHex(originalPayload).toUpperCase();

        final String location =
                new LocationStrategy.TransformedContentLocationStrategy(content).location(digest);

        final Properties properties = new Properties();
        properties.put(ContentLengthProperty, transformedPayload.length);
        properties.setProperty(ContentTypeProperty, contentType.toString());

        archiveService.writeResource(location, transformedPayload, properties);
    }
}
