package org.opentestsystem.rdw.ingest.common.status;

/**
 * The base class for all statuses, it includes the status rating and text.
 */
abstract class BaseStatus {
    private String statusText;
    private int statusRating;

    /**
     * @return status text: Ideal, Recovering, Warning, Degraded, Failed
     * @see UnitStatus#getStatusRating()
     */
    public String getStatusText() {
        return statusText;
    }

    void setStatusText(final String statusText) {
        this.statusText = statusText;
    }

    /**
     * @return status rating: 4, 3, 2, 1, 0
     * @see UnitStatus#getStatusText()
     */
    public int getStatusRating() {
        return statusRating;
    }

    void setStatusRating(final int statusRating) {
        this.statusRating = statusRating;
    }


    public static abstract class Builder<S extends BaseStatus, B extends Builder<S, B>> {
        private Rating rating = Rating.Ideal;

        public S build() {
            final S status = createStatus();
            status.setStatusRating(rating.value());
            status.setStatusText(rating.name());
            return status;
        }

        public B rating(final Rating rating) {
            this.rating = rating;
            return (B) this;
        }

        public B worstRating(final Iterable<? extends BaseStatus> statuses) {
            for (final BaseStatus status : statuses) {
                if (status.getStatusRating() < rating.value()) {
                    rating = Rating.valueOf(status.getStatusText());
                }
            }
            return (B) this;
        }

        protected abstract S createStatus();
    }
}
