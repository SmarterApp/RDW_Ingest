package org.opentestsystem.rdw.ingest.common.status;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.google.common.collect.ImmutableMap;

import java.util.Map;

import static com.google.common.collect.Maps.newHashMap;

/**
 * Container for overall system status.<br/>
 * By default, rating will be inherited as the worst rating of any sub.
 */
public class SystemStatus extends UnitStatus {

    private Map<String, Status> subs;

    @JsonAnyGetter  // @JsonUnwrapped doesn't work on maps, @JsonAnyGetter has the desired effect
    public Map<String, Status> getSubs() {
        return subs;
    }

    void setSubs(final Map<String, Status> subs) {
        this.subs = ImmutableMap.copyOf(subs);
    }


    public static Builder builder() {
        return new Builder();
    }

    public static class Builder extends UnitStatus.Builder<SystemStatus, SystemStatus.Builder> {
        private final Map<String, Status> subs = newHashMap();
        private boolean inheritWorstRating = true;

        @Override
        public SystemStatus build() {
            if (inheritWorstRating) {
                worstRating(subs.values());
            }
            final SystemStatus status = super.build();
            status.setSubs(subs);
            return status;
        }

        @Override
        public Builder rating(final Rating rating) {
            inheritWorstRating = false;
            return super.rating(rating);
        }

        public SystemStatus.Builder sub(final String name, final Status status) {
            subs.put(name, status);
            return this;
        }

        @Override
        protected SystemStatus createStatus() {
            return new SystemStatus();
        }
    }
}
