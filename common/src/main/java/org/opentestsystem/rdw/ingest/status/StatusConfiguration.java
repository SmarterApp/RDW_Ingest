package org.opentestsystem.rdw.ingest.status;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

/**
 * {@link Configuration} for setting up default {@link StatusIndicator}s.
 * <p>
 * To add additional status information, simply create a @Bean/@Component that implements {@link StatusIndicator}
 * (extending {@link AbstractStatusIndicator} will take care of basic exception handling). StatusEndpoint will
 * integrate the information based on the request level. Please follow the web diagnostic specifications from
 * SmarterBalanced, http://www.smarterapp.org/documents/DiagnosticApi.html.
 * </p>
 * <p>
 * TODO - think about ProvidersIndicator; should we add additional framework so that we can provide a default
 * TODO   implementation that checks config-server, etc. while allowing extensibility?
 * </p>
 */
@Configuration
public class StatusConfiguration {

    @Bean
    public StatusMvcEndpoint statusMvcEndpoint(final List<StatusIndicator> statusIndicators) {
        return new StatusMvcEndpoint(statusIndicators);
    }

    @Bean
    public LocalSystemStatusIndicator localSystemStatusIndicator() {
        return new LocalSystemStatusIndicator();
    }

    @Bean
    public StatusIndicator configurationStatusIndicator() {
        return new AbstractStatusIndicator() {
            @Override
            protected void doStatusCheck(final Status.Builder builder) {
                builder.detail("environmentSettings", "TBD");
            }

            @Override
            public int level() {
                return 2;
            }

            @Override
            public String name() {
                return "configuration";
            }
        };
    }
}
