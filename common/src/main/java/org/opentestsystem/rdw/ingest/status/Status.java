package org.opentestsystem.rdw.ingest.status;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.google.common.collect.ImmutableMap;

import java.util.Map;

import static com.google.common.collect.Maps.newHashMap;

/**
 * Status contains details about a subsystem, e.g. "database"
 */
public class Status extends BaseStatus {

    private Map<String, Object> details;

    /**
     * @return details
     */
    @JsonAnyGetter  // @JsonUnwrapped doesn't work on maps, @JsonAnyGetter has the desired effect
    public Map<String, Object> getDetails() {
        return details;
    }

    void setDetails(final Map<String, Object> details) {
        this.details = ImmutableMap.copyOf(details);
    }


    public static Status.Builder builder() {
        return new Status.Builder();
    }

    public static class Builder extends BaseStatus.Builder<Status, Status.Builder> {
        private Map<String, Object> details = newHashMap();

        public Status build() {
            final Status status = super.build();
            status.setDetails(details);
            return status;
        }

        public Builder detail(final String name, final Object value) {
            details.put(name, value);
            return this;
        }

        @Override
        protected Status createStatus() {
            return new Status();
        }
    }
}
