package org.opentestsystem.rdw.ingest.common.util;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.ingest.common.util.MathUtils.isClose;
import static org.opentestsystem.rdw.ingest.common.util.MathUtils.isCloseFloat;
import static org.opentestsystem.rdw.ingest.common.util.MathUtils.isCloseSqlFloat;

public class MathUtilsTest {

    @Test
    public void isCloseShouldUseRelativeTolerance() {
        assertThat(isClose(2314.56, 2314.557, 1e-3, 0)).isTrue();
        assertThat(isClose(2314.56, 2314.557, 1e-5, 0)).isTrue();
        assertThat(isClose(2314.56, 2314.557, 1e-7, 0)).isFalse();
    }

    @Test
    public void isCloseShouldUseAbsoluteTolerance() {
        assertThat(isClose(0.01234, 0.012338, 0, 0.0001)).isTrue();
        assertThat(isClose(0.01234, 0.012338, 0, 0.00001)).isTrue();
        assertThat(isClose(0.01234, 0.012338, 0, 0.000001)).isFalse();
    }

    @Test
    public void isCloseFloatShouldWorkOnARangeOfValues() {
        for (double value = Math.sqrt(2.0) * 1000.0; value > 1e-7; value /= 1.17) {
            final float v1 = (float) value;
            final float v2 = (float) (value + value * 1e-7);
            final float v3 = (float) (value + value * 1e-6);
            assertThat(isCloseFloat(v1, v2)).isTrue();
            assertThat(isCloseFloat(v1, v3)).isFalse();
            assertThat(isCloseFloat(v2, v3)).isFalse();
        }
    }

    @Test
    public void isCloseSqlFloatShouldWorkOnScores() {
        // these examples are taken from the bug report
        assertThat(isCloseSqlFloat(2345.1234567, 2345.12)).isTrue();
        assertThat(isCloseSqlFloat(0.1234567, 0.123457)).isTrue();
        assertThat(isCloseSqlFloat(2.1234567, 2.12346)).isTrue();
    }
}
