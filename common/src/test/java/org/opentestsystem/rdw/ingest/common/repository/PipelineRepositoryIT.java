package org.opentestsystem.rdw.ingest.common.repository;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import org.opentestsystem.rdw.ingest.common.test.CachingTest;
import org.opentestsystem.rdw.ingest.common.test.TenantCacheableIT;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@ActiveProfiles("common-test")
@Sql(statements = {
        "INSERT INTO pipeline (id, code, input_type, active_version) VALUES (-99, 'p1', 'application/xml', '1');",
        "INSERT INTO pipeline (id, code, input_type, active_version) VALUES (-98, 'p2', 'application/xml', null);",
})
public class PipelineRepositoryIT {

    @Autowired
    private PipelineRepository repository;

    @Test
    public void itShouldReturnActiveVersion() {
        assertThat(repository.findActiveVersion("p1")).isEqualTo("1");
        assertThat(repository.findActiveVersion("p2")).isNull();
        assertThat(repository.findActiveVersion("p3")).isNull();
    }
}
