package org.opentestsystem.rdw.ingest.common.model;

import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class ImportStatusTest {

    @Test
    public void itShouldHaveAValue() {
        assertThat(ImportStatus.ACCEPTED.getValue()).isEqualTo(0);
        assertThat(ImportStatus.PROCESSED.getValue()).isEqualTo(1);
        assertThat(ImportStatus.INVALID.getValue()).isEqualTo(-1);
        assertThat(ImportStatus.BAD_FORMAT.getValue()).isEqualTo(-2);
        assertThat(ImportStatus.BAD_DATA.getValue()).isEqualTo(-3);
        assertThat(ImportStatus.UNAUTHORIZED.getValue()).isEqualTo(-4);
        assertThat(ImportStatus.UNKNOWN_ASMT.getValue()).isEqualTo(-5);
        assertThat(ImportStatus.UNKNOWN_SCHOOL.getValue()).isEqualTo(-6);
    }

    @Test
    public void itShouldConvertFromValue() {
        assertThat(ImportStatus.fromValue(-1)).isEqualTo(ImportStatus.INVALID);
        assertThat(ImportStatus.fromValue(0)).isEqualTo(ImportStatus.ACCEPTED);
        assertThat(ImportStatus.fromValue(1)).isEqualTo(ImportStatus.PROCESSED);
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldNotConvertFromUnknownValue() {
        ImportStatus.fromValue(-876);
    }

    @Test
    public void itShouldConvertFromString() {
        assertThat(ImportStatus.valueOf("INVALID")).isEqualTo(ImportStatus.INVALID);
        assertThat(ImportStatus.valueOf("ACCEPTED")).isEqualTo(ImportStatus.ACCEPTED);
        assertThat(ImportStatus.valueOf("PROCESSED")).isEqualTo(ImportStatus.PROCESSED);
    }

    @Test(expected = IllegalArgumentException.class)
    public void stringValueIsCaseSensitive() {
        ImportStatus.valueOf("invalid");
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldNotConvertFromUnknownStringValue() {
        ImportStatus.valueOf("fubar");
    }
}
