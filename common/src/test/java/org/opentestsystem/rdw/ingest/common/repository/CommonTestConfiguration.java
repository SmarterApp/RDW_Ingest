package org.opentestsystem.rdw.ingest.common.repository;

import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.cloud.aws.autoconfigure.cache.ElastiCacheAutoConfiguration;
import org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration;
import org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Import;
import org.springframework.context.annotation.Profile;

import javax.sql.DataSource;
import java.util.Optional;
import org.opentestsystem.rdw.multitenant.TenantIdResolver;
import org.opentestsystem.rdw.multitenant.cache.TenantKeyGenerator;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;

/**
 * This module is not a full spring application so have to provide a configuration.
 */
@SpringBootApplication(exclude = {
        // because the word "cache" is mentioned, Spring tries to instantiate aws stuff (?!)
        // these excludes disable some of that so that the tests can run locally
        ElastiCacheAutoConfiguration.class,
        ContextRegionProviderAutoConfiguration.class,
        ContextStackAutoConfiguration.class
})
@EnableCaching
@Import({ YamlPropertiesConfigurator.class })
public class CommonTestConfiguration {

    @Bean
    // We need a data source for the repository IT's of course. But other modules bring in
    // rdw-ingest-common:tests so we need to make this conditional on the common-test profile.
    @Profile("common-test")
    @ConfigurationProperties(prefix = "datasources.warehouse_rw")
    public DataSource dataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    @Bean
    // Similarly we need a KeyGenerator for the cacheable tests.
    @Profile("common-test")
    public TenantKeyGenerator tenantKeyGenerator() {
        return new TenantKeyGenerator(new TenantIdResolver() {
            @Override
            public Optional<String> getTenantId() {
                return Optional.of("CA");
            }
        });
    }
}
