package org.opentestsystem.rdw.ingest.common.model;

import org.junit.Test;

import java.time.Instant;
import java.time.temporal.ChronoUnit;

import static org.assertj.core.api.Assertions.assertThat;

public class RdwImportTest {

    @Test
    public void itShouldRetainBuilderValues() {
        final RdwImport rdwImport = RdwImport.builder()
                .batch("batch")
                .status(ImportStatus.ACCEPTED)
                .content(ImportContent.EXAM)
                .contentType("application/xml")
                .creator("alice")
                .digest("digest")
                .replayId(1234L)
                .message("message")
                .build();
        assertThat(rdwImport.getId()).isNull();
        assertThat(rdwImport.getBatch()).isEqualTo("batch");
        assertThat(rdwImport.getStatus()).isEqualTo(ImportStatus.ACCEPTED);
        assertThat(rdwImport.getContent()).isEqualTo(ImportContent.EXAM);
        assertThat(rdwImport.getContentType()).isEqualTo("application/xml");
        assertThat(rdwImport.getCreator()).isEqualTo("alice");
        assertThat(rdwImport.getDigest()).isEqualTo("digest");
        assertThat(rdwImport.getReplayId()).isEqualTo(1234);
        assertThat(rdwImport.getMessage()).isEqualTo("message");
    }

    @Test
    public void itShouldDefaultACreatedValue() {
        final RdwImport rdwImport = RdwImport.builder().build();
        assertThat(rdwImport.getCreated()).isNotNull();
        assertThat(rdwImport.getUpdated()).isEqualTo(rdwImport.getCreated());
    }

    @Test
    public void itShouldCopy() {
        final RdwImport src = RdwImport.builder()
                .id(123L)
                .batch("batch")
                .status(ImportStatus.ACCEPTED)
                .content(ImportContent.EXAM)
                .contentType("application/xml")
                .creator("alice")
                .created(Instant.now())
                .updated(Instant.now().plus(100, ChronoUnit.SECONDS))
                .replayId(1234L)
                .message("message")
                .build();
        final RdwImport rdwImport = src.copy().batch(null).status(ImportStatus.PROCESSED).build();
        assertThat(rdwImport.getId()).isEqualTo(123);
        assertThat(rdwImport.getBatch()).isNull();
        assertThat(rdwImport.getStatus()).isEqualTo(ImportStatus.PROCESSED);
        assertThat(rdwImport.getContent()).isEqualTo(ImportContent.EXAM);
        assertThat(rdwImport.getContentType()).isEqualTo("application/xml");
        assertThat(rdwImport.getCreator()).isEqualTo("alice");
        assertThat(rdwImport.getCreated()).isEqualTo(src.getCreated());
        assertThat(rdwImport.getUpdated()).isEqualTo(src.getUpdated());
        assertThat(rdwImport.getReplayId()).isEqualTo(1234);
        assertThat(rdwImport.getMessage()).isEqualTo("message");
    }

    @Test
    public void itAllowsIdToBeSet() {
        final RdwImport rdwImport = RdwImport.builder().build();
        assertThat(rdwImport.getId()).isNull();
        rdwImport.setId(123L);
        assertThat(rdwImport.getId()).isEqualTo(123);
    }
}
