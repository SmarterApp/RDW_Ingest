// This pulls in the dependency management which is great.
// But it also defines silly boot tasks which we don't want here.
apply plugin: 'org.springframework.boot'
bootRepackage.enabled = false
bootRun.enabled = false

dependencies {
    // handy for creating metadata with @ConfigurationProperties
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'

    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.opentestsystem.rdw.common:rdw-common-messaging'
    compile 'org.opentestsystem.rdw.common:rdw-common-model'
    compile 'org.opentestsystem.rdw.common:rdw-common-multi-tenant'
    compile 'org.opentestsystem.rdw.common:rdw-common-script'
    compile 'org.opentestsystem.rdw.common:rdw-common-utils'

    // for @NotNull
    compile 'javax.validation:validation-api'

    compile 'com.google.code.gson:gson'

    testCompile 'mysql:mysql-connector-java'
    testCompile 'org.mockito:mockito-inline'  // to mock final classes
    testCompile 'org.springframework:spring-test'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.boot:spring-boot-starter-validation'
}

task testsJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
}
configurations {
    tests {
        extendsFrom testRuntime
    }
}
artifacts {
    tests testsJar
}
