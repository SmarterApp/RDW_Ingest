package org.opentestsystem.rdw.migrate.common;


import java.time.Instant;
import java.util.Objects;

/**
 * POJO for saving migrate state into the repository
 */
public class Migrate {

    private Long id;
    private Instant firstAt;
    private Instant lastAt;
    private int size;
    private boolean migrateCodes;
    private boolean migrateEmbargo;
    private long jobId;
    private MigrateStatus status;

    public MigrateStatus getStatus() {
        return status;
    }

    public Instant getFirstAt() {
        return firstAt;
    }

    public Instant getLastAt() {
        return lastAt;
    }

    public Long getId() {
        return id;
    }

    public long getJobId() {
        return jobId;
    }

    public int getSize() {
        return size;
    }

    public boolean isMigrateCodes() {
        return migrateCodes;
    }

    public boolean isMigrateEmbargo() {
        return migrateEmbargo;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof Migrate)) return false;

        final Migrate that = (Migrate) o;
        return Objects.equals(id, that.id)
                && (migrateCodes == that.migrateCodes)
                && (migrateEmbargo == that.migrateEmbargo)
                && (size == that.size)
                && (jobId == that.jobId)
                && (firstAt.equals(that.firstAt))
                && (lastAt.equals(that.lastAt))
                && (status.equals(that.status));
    }

    @Override
    public int hashCode() {
        return Objects.hash(Migrate.class, id, firstAt, lastAt, jobId, status, size, migrateCodes, migrateEmbargo);
    }

    public Builder copy() {
        return new Builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long id;
        private Instant firstAt;
        private Instant lastAt;
        private int size;
        private boolean migrateCodes;
        private boolean migrateEmbargo;
        private long jobId;
        private MigrateStatus status;

        public Migrate build() {
            final Migrate migrate = new Migrate();
            migrate.id = id;
            migrate.firstAt = firstAt;
            migrate.lastAt = lastAt;
            migrate.jobId = jobId;
            migrate.status = status;
            migrate.size = size;
            migrate.migrateCodes = migrateCodes;
            migrate.migrateEmbargo = migrateEmbargo;
            return migrate;
        }

        public Builder copy(final Migrate migrate) {
            id = migrate.id;
            firstAt = migrate.firstAt;
            lastAt = migrate.lastAt;
            jobId = migrate.jobId;
            status = migrate.status;
            size = migrate.size;
            migrateCodes = migrate.migrateCodes;
            migrateEmbargo = migrate.migrateEmbargo;
            return this;
        }

        public Builder id(final Long id) {
            this.id = id;
            return this;
        }

        public Builder status(final MigrateStatus status) {
            this.status = status;
            return this;
        }

        public Builder firstAt(final Instant firstAt) {
            this.firstAt = firstAt;
            return this;
        }

        public Builder lastAt(final Instant lastAt) {
            this.lastAt = lastAt;
            return this;
        }

        public Builder jobId(final long jobId) {
            this.jobId = jobId;
            return this;
        }

        public Builder migrateCodes(final boolean migrateCodes) {
            this.migrateCodes = migrateCodes;
            return this;
        }

        public Builder migrateEmbargo(final boolean migrateEmbargo) {
            this.migrateEmbargo = migrateEmbargo;
            return this;
        }

        public Builder size(final int size) {
            this.size = size;
            return this;
        }
    }
}
