package org.opentestsystem.rdw.migrate.common;

import org.springframework.batch.core.configuration.annotation.DefaultBatchConfigurer;
import org.springframework.batch.core.repository.JobRepository;
import org.springframework.batch.core.repository.support.JobRepositoryFactoryBean;

import javax.sql.DataSource;

/**
 * This custom batch configurer is necessary because we need to get in the way
 * of the job repository creation so it doesn't try to discover the database
 * type on startup without a tenant being in context.
 */
public class MigrateBatchConfigurer extends DefaultBatchConfigurer {
    private final DataSource dataSource;

    public MigrateBatchConfigurer(final DataSource dataSource) {
        super(dataSource);
        this.dataSource = dataSource;
    }

    @Override
    protected JobRepository createJobRepository() throws Exception {
        final JobRepositoryFactoryBean factory = new JobRepositoryFactoryBean();
        factory.setDataSource(dataSource);
        factory.setTransactionManager(super.getTransactionManager());
        // all of this is for this line ...
        factory.setDatabaseType("mysql");
        factory.afterPropertiesSet();
        return  factory.getObject();
    }
}
