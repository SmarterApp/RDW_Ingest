package org.opentestsystem.rdw.migrate.common;

import java.time.Instant;

import static com.google.common.base.Preconditions.checkArgument;

/**
 * POJO for returning migrate job state values from repository.
 */
public class MigrateImportValues {
    private Instant firstAt;
    private Instant lastAt;
    private boolean migrateCodes;
    private boolean migrateEmbargo;
    private int importCount;

    public Instant getFirstAt() {
        return firstAt;
    }

    public Instant getLastAt() {
        return lastAt;
    }

    public int getImportCount() {
        return importCount;
    }

    public boolean migrateCodes() {
        return migrateCodes;
    }

    public boolean migrateEmbargo() {
        return migrateEmbargo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Instant firstAt;
        private Instant lastAt;
        private boolean migrateCodes;
        private boolean migrateEmbargo;
        private int importCount;

        public MigrateImportValues build() {
            final MigrateImportValues migrate = new MigrateImportValues();
            if (importCount > 0) {
                checkArgument(firstAt != null, "firstAt may not be null");
                checkArgument(lastAt != null, "lastAt may not be null");
                checkArgument(!firstAt.isAfter(lastAt), "firstAt may not be after lastAt");
            }
            migrate.firstAt = firstAt;
            migrate.lastAt = lastAt;
            migrate.importCount = importCount;
            migrate.migrateCodes = migrateCodes;
            migrate.migrateEmbargo = migrateEmbargo;
            return migrate;
        }

        public Builder firstAt(final Instant firstAt) {
            this.firstAt = firstAt;
            return this;
        }

        public Builder lastAt(final Instant lastAt) {
            this.lastAt = lastAt;
            return this;
        }

        public Builder importCount(final int importCount) {
            this.importCount = importCount;
            return this;
        }

        public Builder migrateCodes(final boolean migrateCodes) {
            this.migrateCodes = migrateCodes;
            return this;
        }

        public Builder migrateEmbargo(final boolean migrateEmbargo) {
            this.migrateEmbargo = migrateEmbargo;
            return this;
        }
    }
}
