package org.opentestsystem.rdw.migrate.common.status;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.common.status.Rating;
import org.opentestsystem.rdw.common.status.Status;
import org.opentestsystem.rdw.migrate.common.MigrateLifecycle;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

public class MigrateJobStatusIndicatorTest {
    private MigrateLifecycle migrateLifecycle;
    private MigrateJobStatusIndicator statusIndicator;

    @Before
    public void setUp() {
        migrateLifecycle = mock(MigrateLifecycle.class);
        statusIndicator = new TestMigrateJobStatusIndicator(migrateLifecycle);
    }

    @Test
    public void itShouldBeAtPingLevel() {
        assertThat(statusIndicator.doLevelCheck(0)).isTrue();
        assertThat(statusIndicator.doLevelCheck(2)).isTrue();
    }

    @Test
    public void itShouldReturnIdealStatus() {
        when(migrateLifecycle.isRunning()).thenReturn(true);
        final Status.Builder builder = Status.builder();
        statusIndicator.doStatusCheck(builder, 2);
        final Status status = builder.build();
        assertThat(status.getStatusRating()).isEqualTo(Rating.Ideal.value());
        assertThat(status.getDetails().get("lifecycle")).isEqualTo("running");
    }

    @Test
    public void itShouldReturnWarningStatus() {
        when(migrateLifecycle.isRunning()).thenReturn(false);
        final Status.Builder builder = Status.builder();
        statusIndicator.doStatusCheck(builder, 2);
        final Status status = builder.build();
        assertThat(status.getStatusRating()).isEqualTo(Rating.Warning.value());
        assertThat(status.getDetails().get("lifecycle")).isEqualTo("paused");
    }

    private static class TestMigrateJobStatusIndicator extends MigrateJobStatusIndicator {
        TestMigrateJobStatusIndicator(final MigrateLifecycle migrateLifecycle) {
            super(migrateLifecycle);
        }

        @Override
        public String name() {
            return "test";
        }
    }
}
