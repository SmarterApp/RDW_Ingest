package org.opentestsystem.rdw.ingest.service;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.ingest.auth.RdwUser;
import org.opentestsystem.rdw.ingest.auth.RdwUserTest;
import org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.cloud.stream.binder.BinderFactory;
import org.springframework.cloud.stream.test.binder.MessageCollector;
import org.springframework.http.MediaType;
import org.springframework.messaging.Message;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
public class DefaultReportingPackageSourceTest {

    @Autowired
    private ReportingPackageSource packageSource;

    @Autowired
    private BinderFactory binderFactory;

    @Autowired
    private MessageCollector messageCollector;

    @Test(expected = NullPointerException.class)
    public void itRequiresAnOutputChannel() {
        new DefaultReportingPackageSource(null);
    }

    @Test
    public void submitPackageShouldSetHeadersAndSendMessage() {
        final RdwUser user = RdwUserTest.testUser();
        final String body = "AssessmentId";
        final long importId = 123L;

        packageSource.submitPackage(body, "text/plain", importId);

        final Message message = messageCollector.forChannel(((DefaultReportingPackageSource)packageSource).getOutput()).poll();
        final RdwMessageHeaderAccessor accessor = RdwMessageHeaderAccessor.wrap(message);
        assertThat(message.getPayload()).isEqualTo(body);
        assertThat(accessor.getContentType()).isEqualTo(MediaType.TEXT_PLAIN);
        assertThat(accessor.getImportId()).isEqualTo(importId);
        assertThat(accessor.getUserLogin()).isEqualTo("system");

    }
}
