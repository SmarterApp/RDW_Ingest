package org.opentestsystem.rdw.ingest.group.service.impl;

import com.google.common.collect.ImmutableMap;
import org.opentestsystem.rdw.ingest.common.repository.SqlListExecutionRepository;
import org.opentestsystem.rdw.ingest.common.util.SqlListBuilder;
import org.opentestsystem.rdw.ingest.group.configuration.GroupProcessingSqlConfiguration;
import org.opentestsystem.rdw.ingest.group.service.ProcessingGroupImportService;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * Default implementation of a ProcessingGroupImportService
 */
@Service
public class DefaultProcessingGroupImportService implements ProcessingGroupImportService {

    private final SqlListExecutionRepository repository;
    private final GroupProcessingSqlConfiguration sqlConfiguration;

    public DefaultProcessingGroupImportService(final SqlListExecutionRepository repository,
                                               final GroupProcessingSqlConfiguration configuration) {
        this.repository = repository;
        this.sqlConfiguration = configuration;
    }

    @Override
    @Transactional
    public void processGroups(final long importId) {
        final SqlListBuilder sqlListBuilder = new SqlListBuilder(sqlConfiguration.getEntities());
        final List<String> sql = sqlListBuilder
                .addNext("import-groups", "assign-school-and-subject")
                .addNext("import-groups", "assign-existing")
                .addNext("import-groups", "insert-new")
                .addNext("import-groups", "update-deleted")
                .addNext("import-groups", "update-modified-group-by-user-or-subject")
                .addNext("import-groups", "update-modified-group-by-student")
                .addNext("import-groups", "assign-new")
                .build();

        repository.execute(sql, ImmutableMap.of("import_id", importId));
    }

    @Override
    @Transactional
    public void processGroupUsers(final long importId) {
        final SqlListBuilder sqlListBuilder = new SqlListBuilder(sqlConfiguration.getEntities());
        final List<String> sql = sqlListBuilder
                .addNext("import-groups", "remove-users")
                .addNext("import-groups", "add-users")
                .build();

        repository.execute(sql, ImmutableMap.of("import_id", importId));
    }

    @Override
    @Transactional
    public void processGroupMembership(final long importId) {
        final SqlListBuilder sqlListBuilder = new SqlListBuilder(sqlConfiguration.getEntities());
        final List<String> sql = sqlListBuilder
                .addNext("import-groups", "remove-students")
                .addNext("import-groups", "add-students")
                .build();

        repository.execute(sql, ImmutableMap.of("import_id", importId));
    }
}
