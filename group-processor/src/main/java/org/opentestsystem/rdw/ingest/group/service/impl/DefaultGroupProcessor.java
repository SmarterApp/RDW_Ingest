package org.opentestsystem.rdw.ingest.group.service.impl;

import org.opentestsystem.rdw.ingest.group.service.GroupProcessor;
import org.opentestsystem.rdw.ingest.group.service.ProcessingReferenceService;
import org.opentestsystem.rdw.ingest.group.service.ProcessingStandardizationService;
import org.opentestsystem.rdw.ingest.group.service.ProcessingUserImportService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class DefaultGroupProcessor implements GroupProcessor {
    private static final Logger logger = LoggerFactory.getLogger(DefaultGroupProcessor.class);

    private final ProcessingStandardizationService standardizationService;
    private final ProcessingReferenceService referenceService;
    private final ProcessingUserImportService userImportService;

    @Autowired
    public DefaultGroupProcessor(final ProcessingStandardizationService standardizationService,
                                 final ProcessingReferenceService referenceService,
                                 final ProcessingUserImportService userImportService) {
        this.standardizationService = standardizationService;
        this.referenceService = referenceService;
        this.userImportService = userImportService;
    }

    /**
     * Processes an upload message
     *
     * @param message A message sent after successful upload from RDW_Admin for a groups CSV
     */
    @Override
    public void process(final String message) {

        // todo: Need to design message that RDW_Admin will publish to queue
        logger.info("Received upload message: " + (message.length() > 80 ? message.substring(0, 80) + "..." : message));

        // TODO once CSV is loaded into DB
//        try {
//            standardizationService.standardizeBatch(batchId);
//            referenceService.lookupBatchReferences(batchId);
//            userImportService.createImports(batchId);
//            userImportService.insertMissingStudents(batchId);
//            userImportService.updateDeletedStudents(batchId);
//            userImportService.triggerImport(batchId);
//        } catch (final Exception e) {
//            logger.error("Problem processing batch: {}", batchId, e);
//        }
    }

}
