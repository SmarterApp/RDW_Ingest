package org.opentestsystem.rdw.ingest.group.service.impl;

import org.junit.Test;
import org.opentestsystem.rdw.ingest.common.repository.SqlListExecutionRepository;
import org.opentestsystem.rdw.ingest.group.RepositoryBackedIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.test.context.jdbc.Sql;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;

@Import(DefaultProcessingStandardizationService.class)
public class DefaultProcessingStandardizationServiceIT extends RepositoryBackedIT {

    @Autowired
    public DefaultProcessingStandardizationService service;

    @Autowired
    public NamedParameterJdbcTemplate template;

    @Test
    @Sql(statements = {
            "INSERT INTO upload_student_group (batch_id, name, school_year, school_natural_id, subject_code, student_ssid, group_user_login) VALUES" +
            "   (33, 'group-a', 2017, 'school1', '', 'student1', '')," +
            "   (33, 'group-b', 2017, 'school1', 'ELA', '', 'user@somewhere.com')"
    })
    public void itShouldSetEmptyStringsToNull() {
        service.standardizeBatch(33);

        final List<Map<String, Object>> rows = template.queryForList(
                "SELECT * from upload_student_group WHERE batch_id=33 ORDER BY name",
                new HashMap<>());

        assertThat(rows.size()).isEqualTo(2);

        final Map<String, Object> row1 = rows.get(0);
        assertThat(row1.get("subject_code")).isNull();
        assertThat(row1.get("student_ssid")).isEqualTo("student1");
        assertThat(row1.get("group_user_login")).isNull();

        final Map<String, Object> row2 = rows.get(1);
        assertThat(row2.get("subject_code")).isEqualTo("ELA");
        assertThat(row2.get("student_ssid")).isNull();
        assertThat(row2.get("group_user_login")).isEqualTo("user@somewhere.com");
    }
}