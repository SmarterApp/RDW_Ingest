package org.opentestsystem.rdw.ingest.migrate;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.rdw.ingest.migrate.service.ExamMigrator;
import org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor;
import org.springframework.http.MediaType;
import org.springframework.messaging.Message;
import org.springframework.messaging.support.GenericMessage;

import java.io.IOException;
import java.io.UnsupportedEncodingException;

import static org.mockito.Matchers.any;
import static org.mockito.Mockito.*;

public class MigrateServiceConfigurationTest {


    private MigrateServiceConfiguration migrator;
    private ExamMigrator examMigrator;
    private Message message;
    private final String textMessage = "Basic text message";

    @Before
    public void createProcessor() throws IOException {
        RdwMessageHeaderAccessor accessor;
        examMigrator = mock(ExamMigrator.class);
        migrator = new MigrateServiceConfiguration(examMigrator);

        accessor = RdwMessageHeaderAccessor.wrap(null);
        accessor.setContentType(MediaType.TEXT_PLAIN_VALUE);

        message = new GenericMessage(textMessage, accessor.getMessageHeaders());
    }

    @Test
    public void itShouldProcessMessageWithTextContent() throws UnsupportedEncodingException {

        migrator.process(message);

        verify(examMigrator, times(1)).process(textMessage);
    }


    @Test
    public void itShouldHandleAnyException() throws UnsupportedEncodingException {

        doThrow(new RuntimeException("any message")).when(examMigrator).process(any(String.class));
        migrator.process(message);

        verify(examMigrator, times(1)).process(textMessage);
    }

}