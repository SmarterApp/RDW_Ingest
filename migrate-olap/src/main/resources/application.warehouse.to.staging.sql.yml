sql:
  warehouseToStage:
  # ------------ Truncate ------------------------------------------------------------------
    truncateStageList:
      - delete from staging_administration_condition
      - delete from staging_completeness
      - delete from staging_ethnicity
      - delete from staging_gender
      - delete from staging_grade
      - delete from staging_student
      - delete from staging_student_ethnicity

    entities:
        # ------------ administration_condition  -------------------------------------------------------------------
        administration_condition:
          sql:
            warehouseRead: >-
                SELECT
                  id,
                  code
                FROM administration_condition
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/administration_condition'
                FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
                COPY staging_administration_condition (id, code)
                  FROM '${archive.root}/${migrate.aws.location}/administration_condition.part_00000'
                CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
                FORMAT AS CSV
                DELIMITER ','

        # ------------ completeness  -------------------------------------------------------------------
        completeness:
          sql:
            warehouseRead: >-
                SELECT
                  id,
                  code
                FROM completeness
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/completeness'
                FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
                COPY staging_completeness (id, code)
                  FROM '${archive.root}/${migrate.aws.location}/completeness.part_00000'
                CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
                FORMAT AS CSV
                DELIMITER ','

        # ------------ ethnicity  -------------------------------------------------------------------
        ethnicity:
          sql:
            warehouseRead: >-
                SELECT
                  id,
                  code
                FROM ethnicity
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/ethnicity'
                FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
                COPY staging_ethnicity (id, code)
                  FROM '${archive.root}/${migrate.aws.location}/ethnicity.part_00000'
                CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
                FORMAT AS CSV
                DELIMITER ','

        # ------------ gender  -------------------------------------------------------------------
        gender:
          sql:
            warehouseRead: >-
                SELECT
                  id,
                  code
                FROM gender
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/gender'
                FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
                COPY staging_gender (id, code)
                  FROM '${archive.root}/${migrate.aws.location}/gender.part_00000'
                CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
                FORMAT AS CSV
                DELIMITER ','

        # ------------ grade  -------------------------------------------------------------
        grade:
          sql:
            warehouseRead: >-
                SELECT
                  id,
                  code,
                  name
                FROM grade
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/grade'
                FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
                COPY staging_grade (id, code, name)
                  FROM '${archive.root}/${migrate.aws.location}/grade.part_00000'
                CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
                FORMAT AS CSV
                DELIMITER ','

        # ------------ student  -------------------------------------------------------------------
        student:
          sql:
            warehouseRead: >-
             SELECT
               id,
               ssid,
               last_or_surname,
               first_name,
               middle_name,
               gender_id,
               deleted,
               ? as migrate_id
             FROM student ws
              WHERE ws.created > ? AND ws.created <= ?
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/student'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_student(
                id,
                ssid,
                last_or_surname,
                first_name,
                middle_name,
                gender_id,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/student.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        student_update:
          sql:
            warehouseRead: >-
             SELECT
               id,
               ssid,
               last_or_surname,
               first_name,
               middle_name,
               gender_id,
               deleted,
               ? as migrate_id
             FROM student ws
              WHERE ws.updated > ? AND ws.updated <= ? AND ws.updated <> ws.created
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/student_update'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_student(
                id,
                ssid,
                last_or_surname,
                first_name,
                middle_name,
                gender_id,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/student_update.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        # ------------ student_ethnicity  -------------------------------------------------------------------
        student_ethnicity:
          sql:
            warehouseRead: >-
              SELECT
                ethnicity_id,
                student_id,
                ? as migrate_id
              FROM student_ethnicity
                JOIN student ws ON ws.id = student_ethnicity.student_id
              WHERE ws.created > ? AND ws.created <= ? AND ws.deleted = 0
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/student_ethnicity'
              FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_student_ethnicity(
               ethnicity_id,
               student_id,
               migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/student_ethnicity.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        student_ethnicity_update:
          sql:
            warehouseRead: >-
              SELECT
                ethnicity_id,
                student_id,
                ? as migrate_id
              FROM student_ethnicity
                JOIN student ws ON ws.id = student_ethnicity.student_id
              WHERE ws.updated > ? AND ws.updated <= ? AND ws.updated <> ws.created
                INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/student_ethnicity_update'
              FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_student_ethnicity(
                ethnicity_id,
                student_id,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/student_ethnicity_update.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

  # ------------ asmt  -------------------------------------------------------------------
        asmt:
          sql:
            warehouseRead: >-
             SELECT
               id,
               grade_id,
               type_id,
               school_year,
               subject_id,
               name,
               deleted,
               ? as migrate_id
             FROM asmt wa
              WHERE wa.type_id = 1 -- ICA only for now
                AND wa.created > ? AND wa.created <= ?
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/asmt'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_asmt(
                id,
                grade_id,
                type_id,
                school_year,
                subject_id,
                name,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/asmt.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        asmt_update:
          sql:
            warehouseRead: >-
             SELECT
               id,
               grade_id,
               school_year,
               subject_id,
               name,
               deleted,
               ? as migrate_id
             FROM asmt wa
              WHERE wa.type_id = 1 AND wa.updated > ? AND wa.updated <= ? AND wa.updated <> wa.created
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/asmt_update'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_asmtt(
                id,
                grade_id,
                school_year,
                subject_id,
                name,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/asmt_update.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

  # ------------ school  -------------------------------------------------------------------
        school:
          sql:
            warehouseRead: >-
             SELECT
               id,
               district_id,
               name,
               deleted,
               ? as migrate_id
             FROM school ws
              WHERE ws.created > ? AND ws.created <= ?
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/school'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_school(
                id,
                district_id,
                name,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/school.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        school_update:
          sql:
            warehouseRead: >-
             SELECT
               id,
               district_id,
               name,
               deleted,
               ? as migrate_id
             FROM school ws
              WHERE ws.updated > ? AND ws.updated <= ? AND ws.updated <> ws.created
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/school_update'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_school(
                id,
                district_id,
                name,
                deleted,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/school_update.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

  # ------------ district  -------------------------------------------------------------------
        district:
          sql:
            warehouseRead: >-
             SELECT
               id,
               name,
               ? as migrate_id
             FROM district wd
              WHERE EXISTS( SELECT id FROM school  WHERE created > ? AND created <= ? AND deleted = 0 AND district_id = wd.id)
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/district'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_district(
                id,
                name,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/district.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

        district_update:
          sql:
            warehouseRead: >-
             SELECT
               id,
               name,
               ? as migrate_id
             FROM district wd
              WHERE EXISTS( SELECT id FROM school WHERE updated > ? AND updated <= ? AND updated <> created AND deleted = 0 AND district_id = wd.id)
             INTO OUTFILE S3 '${archive.root}/${migrate.aws.location}/district_update'
             FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n'

            stagingInsert: >-
              COPY staging_district(
                id,
                name,
                migrate_id)
              FROM '${archive.root}/${migrate.aws.location}/district_update.part_00000'
              CREDENTIALS 'aws_iam_role=${migrate.aws.redshift.role}'
              FORMAT AS CSV
              DELIMITER ','

