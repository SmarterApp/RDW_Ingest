sql:
  migrate:
    entities:
        # ------------ administration_condition  -------------------------------------------------------------------
        administration_condition:
          sql:
            update:  >-
               UPDATE administration_condition
               SET
                 code = sac.code
               FROM
                  staging_administration_condition sac where sac.id = administration_condition.id;

            insert: >-
                INSERT INTO administration_condition (id, code)
                  SELECT
                    sac.id,
                    sac.code
                  FROM staging_administration_condition sac
                    LEFT JOIN administration_condition rac ON rac.id = sac.id
                  WHERE rac.id IS NULL;

            delete: >-
               DELETE FROM administration_condition
               WHERE NOT EXISTS(SELECT sac.id FROM staging_administration_condition sac WHERE sac.id = administration_condition.id);

        # ------------ completeness  -------------------------------------------------------------------
        completeness:
          sql:
            update:  >-
               UPDATE completeness
               SET
                 code = sc.code
               FROM
                  staging_completeness sc where sc.id = completeness.id;

            insert: >-
                INSERT INTO completeness (id, code)
                  SELECT
                    sc.id,
                    sc.code
                  FROM staging_completeness sc
                    LEFT JOIN completeness rc ON rc.id = sc.id
                  WHERE rc.id IS NULL;

            delete: >-
               DELETE FROM completeness
               WHERE NOT EXISTS(SELECT sc.id FROM staging_completeness sc WHERE sc.id = completeness.id);

       # ------------ Ethnicity ------------------------------------------------------------------------
        ethnicity:
          sql:
            update:  >-
               UPDATE ethnicity
               SET
                 code = se.code
               FROM
                  staging_ethnicity se where ethnicity.id = se.id;

            insert: >-
                INSERT INTO ethnicity (id, code)
                  SELECT
                    se.id,
                    se.code
                  FROM staging_ethnicity se
                    LEFT JOIN ethnicity re ON se.id = re.id
                  WHERE re.id IS NULL;

            delete: >-
               DELETE FROM ethnicity
               WHERE NOT EXISTS(SELECT se.id FROM staging_ethnicity se WHERE ethnicity.id = se.id);

        # ------------ gender  -------------------------------------------------------------------
        gender:
          sql:
            update:  >-
               UPDATE gender
               SET
                 code = sg.code
               FROM
                  staging_gender sg where sg.id = gender.id;

            insert: >-
                INSERT INTO gender (id, code)
                  SELECT
                    sg.id,
                    sg.code
                  FROM staging_gender sg
                    LEFT JOIN gender rg ON rg.id = sg.id
                  WHERE rg.id IS NULL;
            delete: >-
               DELETE FROM gender
               WHERE NOT EXISTS(SELECT sg.id FROM staging_gender sg WHERE sg.id = gender.id);

        # ------------ grade  -------------------------------------------------------------------
        grade:
          sql:
            update:  >-
               UPDATE grade
               SET
                 code = sg.code,
                 name = sg.name
               FROM
                  staging_grade sg where sg.id = grade.id;

            insert: >-
                INSERT INTO grade (id, code, name)
                  SELECT
                    sg.id,
                    sg.code,
                    sg.name
                  FROM staging_grade sg
                    LEFT JOIN gender rg ON rg.id = sg.id
                  WHERE rg.id IS NULL;
            delete: >-
               DELETE FROM grade
               WHERE NOT EXISTS(SELECT sg.id FROM staging_grade sg WHERE sg.id = grade.id);

      # ------------ student -----------------------------------------------------------------------
        student:
          sql:
            insert: >-
              INSERT INTO student (id,  gender_id, migrate_id)
                SELECT DISTINCT
                  ss.id,
                  rg.id,
                  ss.migrate_id
                FROM staging_student ss
                  LEFT JOIN student rs ON rs.id = ss.id
                  LEFT JOIN gender rg ON ss.gender_id = rg.id
                WHERE rs.id IS NULL and ss.deleted = 0;

            update: >-
              UPDATE student
              SET
                gender_id  = ss.gender_id,
                migrate_id = ss.migrate_id
              FROM staging_student ss
                JOIN gender rg ON ss.gender_id = rg.id
              WHERE ss.id = student.id;

            delete: >-
              DELETE FROM student
                USING staging_student ss
              WHERE ss.id = student.id AND ss.deleted = 1;

      # ------------ student_ethnicity -----------------------------------------------------------------------
        student_ethnicity:
          sql:
            insert: >-
               INSERT INTO student_ethnicity (student_id, ethnicity_id)
                 SELECT DISTINCT
                   sue.student_id,
                   sue.ethnicity_id
                 FROM staging_student_ethnicity sue
                   LEFT JOIN student_ethnicity rse
                     ON (rse.student_id = sue.student_id AND rse.ethnicity_id = sue.ethnicity_id)
                   JOIN ethnicity re on re.id = sue.ethnicity_id
                 WHERE rse.student_id IS NULL;

            deleteAsPartOfParentUpdate: >-
               DELETE FROM student_ethnicity
                 USING staging_student ss
               WHERE ss.id = student_ethnicity.student_id AND ss.deleted = 0
                     AND NOT EXISTS(SELECT sse.student_id FROM staging_student_ethnicity sse WHERE sse.student_id = student_ethnicity.student_id AND sse.ethnicity_id = student_ethnicity.ethnicity_id)

            delete: >-
              DELETE FROM student_ethnicity
                USING staging_student ss
              WHERE ss.id = student_ethnicity.student_id AND ss.deleted = 1;

      # ------------ asmt -----------------------------------------------------------------------
        asmt:
          sql:
            insert: >-
              INSERT INTO ica_asmt (id, grade_id, school_year, subject_id, name, migrate_id)
                SELECT DISTINCT
                  sa.id,
                  sa.grade_id,
                  sa.school_year,
                  sa.subject_id,
                  sa.name,
                  sa.migrate_id
                FROM staging_asmt sa
                  LEFT JOIN ica_asmt ra ON ra.id = sa.id
                WHERE ra.id IS NULL and sa.deleted = 0 AND sa.type_id = 1;

            update: >-
              UPDATE ica_asmt
              SET
                grade_id  = sa.grade_id,
                school_year = sa.school_year,
                subject_id = sa.subject_id,
                name = sa.name,
                migrate_id = sa.migrate_id
              FROM staging_asmt sa WHERE sa.id = ica_asmt.id AND sa.type_id = 1;

            delete: >-
              DELETE FROM ica_asmt
                USING staging_asmt sa
              WHERE sa.id = ica_asmt.id AND sa.deleted = 1 AND sa.type_id = 1;

      # ------------ school -----------------------------------------------------------------------
        school:
          sql:
            insert: >-
              INSERT INTO school (id, district_id, name, migrate_id)
                SELECT DISTINCT
                  ss.id,
                  ss.district_id,
                  ss.name,
                  ss.migrate_id
                FROM staging_school ss
                  LEFT JOIN school rs ON rs.id = ss.id
                WHERE rs.id IS NULL and ss.deleted = 0;

            update: >-
              UPDATE school
              SET
                district_id  = ss.district_id,
                name  = ss.name,
                migrate_id = ss.migrate_id
              FROM staging_school ss
              WHERE ss.id = school.id;

            delete: >-
              DELETE FROM school
                USING staging_school ss
              WHERE ss.id = school.id AND ss.deleted = 1;

      # ------------ district -----------------------------------------------------------------------
        district:
          sql:
            insert: >-
              INSERT INTO district (id, name)
                SELECT DISTINCT
                  sd.id,
                  sd.name
                FROM staging_district sd
                  LEFT JOIN district rd ON rd.id = sd.id
                WHERE rd.id IS NULL;

            update: >-
              UPDATE district
              SET
                name  = sd.name
              FROM staging_district sd
              WHERE sd.id = district.id;

            delete: >-
              DELETE FROM district
                USING staging_district sd
              WHERE sd.id IN (SELECT district_id from staging_school WHERE deleted = 1)
                  AND NOT EXISTS(SELECT rs.id from school rs WHERE rs.district_id = district.id);

      # ------------ fact_student_ica_exam -----------------------------------------------------------------------
        fact_student_ica_exam:
          sql:
            insert: >-
              INSERT INTO fact_student_ica_exam (
                id,
                school_id,
                student_id,
                asmt_id,
                grade_id,
                asmt_grade_id,
                school_year,
                iep,
                lep,
                section504,
                economic_disadvantage,
                migrant_status,
                completeness_id,
                administration_condition_id,
                scale_score,
                scale_score_std_err,
                performance_level,
                claim1_scale_score,
                claim1_scale_score_std_err,
                claim1_category,
                claim2_scale_score,
                claim2_scale_score_std_err,
                claim2_category,
                claim3_scale_score,
                claim3_scale_score_std_err,
                claim3_category,
                claim4_scale_score,
                claim4_scale_score_std_err,
                claim4_category,
                migrate_id
              )
                SELECT DISTINCT
                  se.id,
                  se.school_id,
                  se.student_id,
                  se.asmt_id,
                  se.grade_id,
                  ra.grade_id,
                  se.school_year,
                  se.iep,
                  se.lep,
                  se.section504,
                  se.economic_disadvantage,
                  se.migrant_status,
                  se.completeness_id,
                  se.administration_condition_id,
                  se.scale_score,
                  se.scale_score_std_err,
                  se.performance_level,
                  claim1.scale_score as claim1_scale_score,
                  claim1.scale_score_std_err as claim1_scale_score_std_err,
                  claim1.category as claim1_category,
                  claim2.scale_score as claim2_scale_score,
                  claim2.scale_score_std_err as claim2_scale_score_std_err,
                  claim2.category as claim2_category,
                  claim3.scale_score as claim3_scale_score,
                  claim3.scale_score_std_err as claim3_scale_score_std_err,
                  claim3.category as claim3_category,
                  claim4.scale_score as claim4_scale_score,
                  claim4.scale_score_std_err as claim4_scale_score_std_err,
                  claim4.category as claim4_category,
                  se.migrate_id
                FROM staging_exam se
                  JOIN ica_asmt ra ON ra.id = se.asmt_id
                  LEFT JOIN fact_student_ica_exam fe on fe.id = se.id
                  LEFT JOIN (
                              SELECT DISTINCT s.exam_id
                                ,s.scale_score
                                ,s.scale_score_std_err
                                ,s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 1
                            ) AS claim1 ON claim1.exam_id = se.id
                  LEFT JOIN (
                              SELECT DISTINCT s.exam_id
                                ,s.scale_score
                                ,s.scale_score_std_err
                                ,s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 2
                            ) AS claim2 ON claim2.exam_id = se.id
                  LEFT JOIN (
                              SELECT DISTINCT s.exam_id
                                ,s.scale_score
                                ,s.scale_score_std_err
                                ,s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 3
                            ) AS claim3 ON claim3.exam_id = se.id
                  LEFT JOIN (
                              SELECT DISTINCT s.exam_id
                                ,s.scale_score
                                ,s.scale_score_std_err
                                ,s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 4
                            ) AS claim4 ON claim4.exam_id = se.id
                WHERE se.type_id = 1 AND se.deleted = 0 AND fe.id IS NULL;

            update: >-
                UPDATE fact_student_ica_exam
                SET
                  school_id                   = se.school_id,
                  student_id                  = se.student_id,
                  asmt_id                     = se.asmt_id,
                  grade_id                    = se.grade_id,
                  asmt_grade_id               = ra.grade_id,
                  school_year                 = se.school_year,
                  iep                         = se.iep,
                  lep                         = se.lep,
                  section504                  = se.section504,
                  economic_disadvantage       = se.economic_disadvantage,
                  migrant_status              = se.migrant_status,
                  completeness_id             = se.completeness_id,
                  administration_condition_id = se.administration_condition_id,
                  scale_score                 = se.scale_score,
                  scale_score_std_err         = se.scale_score_std_err,
                  performance_level           = se.performance_level,
                  claim1_scale_score          = claim1.scale_score,
                  claim1_scale_score_std_err  = claim1.scale_score_std_err,
                  claim1_category             = claim1.category,
                  claim2_scale_score          = claim2.scale_score,
                  claim2_category             = claim2.category,
                  claim3_scale_score          = claim3.scale_score,
                  claim3_scale_score_std_err  = claim3.scale_score_std_err,
                  claim3_category             = claim3.category,
                  claim4_scale_score          = claim4.scale_score,
                  claim4_scale_score_std_err  = claim4.scale_score_std_err,
                  claim4_category             = claim4.category,
                  migrate_id                  = se.migrate_id
                 FROM staging_exam se
                  JOIN ica_asmt ra ON ra.id = se.asmt_id
                  LEFT JOIN fact_student_ica_exam fe ON fe.id = se.id
                  LEFT JOIN (
                              SELECT
                                s.exam_id,
                                s.scale_score,
                                s.scale_score_std_err,
                                s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 1
                            ) AS claim1 ON claim1.exam_id = se.id
                  LEFT JOIN (
                              SELECT
                                s.exam_id,
                                s.scale_score,
                                s.scale_score_std_err,
                                s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 2
                            ) AS claim2 ON claim2.exam_id = se.id
                  LEFT JOIN (
                              SELECT
                                s.exam_id,
                                s.scale_score,
                                s.scale_score_std_err,
                                s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 3
                            ) AS claim3 ON claim3.exam_id = se.id
                  LEFT JOIN (
                              SELECT
                                s.exam_id,
                                s.scale_score,
                                s.scale_score_std_err,
                                s.category
                              FROM staging_exam_claim_score s
                                INNER JOIN exam_claim_score_mapping m ON m.subject_claim_score_id = s.subject_claim_score_id
                                                                         AND m.num = 4
                            ) AS claim4 ON claim4.exam_id = se.id
                WHERE se.id = fact_student_ica_exam.id  AND se.type_id = 1 AND se.deleted = 0;

            delete: >-
              DELETE FROM fact_student_ica_exam
                USING staging_exam se
              WHERE se.id = fact_student_ica_exam.id and se.deleted = 1;