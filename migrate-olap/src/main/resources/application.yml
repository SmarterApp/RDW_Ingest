# this app is expected to run inside the security perimeter so disable security for actuator end-points and,
# since those are the only end-points, switch to a less standard port using the main server.port config
management:
  security:
    enabled: false
  # disable health check for tenant-specific features
  health:
    db:
      enabled: false
server:
  port: 8008
  tomcat:
    max-connections: 2
    max-threads: 2

endpoints:
  # configure actuator endpoints to unmask "key" properties so tenant keys won't be masked. However, we still
  # mask secret keys (i.e. props ending with secretKey, secret-key, or secret_key in lower, upper, or mixed case)
  env:
    keys-to-sanitize: password,secret,token,.*credentials.*,vcap_services,secret[-_]?key
  configprops:
    keys-to-sanitize: password,secret,token,.*credentials.*,vcap_services,secret[-_]?key
  # enable lifecycle endpoints for pausing and resuming migration
  restart:
    enabled: true

# no point in defaulting to anything since the tests have to run against AWS resources
archive:
  uri-root:

migrate:
  aws:
    location: MigrateOlap
    # this is used in placeholders in the migrate SQL
    redshift:
      role: ${rdw.migrate.aws.redshift.role}

  olap-batch:
    size: 10000000
    # every day at 1:00 am
    run-cron: "0 0 1 * * *"

reporting:
  school-year: 2019

spring:
  batch:
    # we create the tables in our flyway scripts so completely disable initialization of them
    initialize-schema: never
    initializer:
      enabled: false
    # don't run any jobs automatically on startup
    job:
      enabled: false

  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

datasources:
  migrate_rw:
    url-parts:
      protocol: "jdbc:mysql:"
      hosts: "${datasources.migrate_rw.url-server:localhost:3306}"
      database: "${datasources.migrate_rw.url-schema:migrate_olap}"
      properties: "useSSL=${datasources.migrate_rw.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.migrate_rw.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.migrate_rw.character-encoding:utf8}\
                   &connectTimeout=${datasources.migrate_rw.connect-timeout:10000}\
                   &socketTimeout=${datasources.migrate_rw.socket-timeout:0}\
                   "
    url: "${datasources.migrate_rw.url-parts.protocol}//${datasources.migrate_rw.url-parts.hosts}/${datasources.migrate_rw.url-parts.database}?${datasources.migrate_rw.url-parts.properties}"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.migrate_rw.initialSize}
    maxIdle: ${datasources.migrate_rw.maxActive}
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

  # http://docs.aws.amazon.com/redshift/latest/mgmt/configure-jdbc-options.html
  # https://jdbc.postgresql.org/documentation/head/connect.html
  # NOTE: nothing in these settings controls the schema; it is controlled by the user's search_path
  olap_rw:
    url-parts:
      protocol: "jdbc:redshift:"
      hosts: "${datasources.olap_rw.url-server:localhost:5432}"
      database: "${datasources.olap_rw.url-db:dev}"
      properties: "ApplicationName=rdw-ingest-migrate-olap\
                   &loginTimeout=${datasources.olap_rw.connect-timeout:10}\
                   &socketTimeout=${datasources.olap_rw.socket-timeout:0}\
                   "
    url: "${datasources.olap_rw.url-parts.protocol}//${datasources.olap_rw.url-parts.hosts}/${datasources.olap_rw.url-parts.database}?${datasources.olap_rw.url-parts.properties}"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 30000
    driverClassName: com.amazon.redshift.jdbc42.Driver

  warehouse_rw:
    url-parts:
      protocol: "jdbc:mysql:"
      hosts: "${datasources.warehouse_rw.url-server:localhost:3306}"
      database: "${datasources.warehouse_rw.url-schema:warehouse}"
      properties: "useSSL=${datasources.warehouse_rw.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.warehouse_rw.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.warehouse_rw.character-encoding:utf8}\
                   &connectTimeout=${datasources.warehouse_rw.connect-timeout:10000}\
                   &socketTimeout=${datasources.warehouse_rw.socket-timeout:0}\
                   "
    url: "${datasources.warehouse_rw.url-parts.protocol}//${datasources.warehouse_rw.url-parts.hosts}/${datasources.warehouse_rw.url-parts.database}?${datasources.warehouse_rw.url-parts.properties}"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.warehouse_rw.initialSize}
    maxIdle: ${datasources.warehouse_rw.maxActive}
    maxWait: 10000
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

logging:
  level:
    org.springframework.transaction: INFO
    org.springframework.jdbc.core.JdbcTemplate: INFO
    org.springframework.jdbc.datasource.DataSourceTransactionManager: INFO
