package org.opentestsystem.rdw.ingest.migrate.olap;

import org.opentestsystem.rdw.migrate.common.TenantAwareMigrateLifecycle;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.context.environment.EnvironmentChangeEvent;
import org.springframework.context.annotation.Import;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;

@Component
@Import({MigrateOlapReportingConfiguration.class})
public class MigrateOlapEnvironmentChangeListener {

    private static final Logger logger = LoggerFactory.getLogger(MigrateOlapEnvironmentChangeListener.class);

    private final TenantAwareMigrateLifecycle jobRunner;

    public MigrateOlapEnvironmentChangeListener(TenantAwareMigrateLifecycle jobRunner) {
        this.jobRunner = jobRunner;
    }

    @EventListener
    public void environmentChangeEventRunMigrate(final EnvironmentChangeEvent environmentChangeEvent) {
        try {
            logger.debug("EnvironmentChangeEvent - {}", environmentChangeEvent);
            if (!jobRunner.isRunning()) {
                logger.info("Ignoring EnvironmentChangeEvent request since migrate is not running");
            } else {
                logger.info("Migrate triggered by EnvironmentChangeEvent for all tenants");
                jobRunner.run();
            }
        } catch (Exception e) {
            //no end user, catch and log
            logger.warn("Unable to process OLAP migration", e);
        }
    }
}
