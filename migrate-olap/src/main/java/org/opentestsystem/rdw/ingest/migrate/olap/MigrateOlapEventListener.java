package org.opentestsystem.rdw.ingest.migrate.olap;

import org.opentestsystem.rdw.migrate.common.MigrateBatchConfigurer;
import org.opentestsystem.rdw.migrate.common.TenantAwareMigrateLifecycle;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent;
import org.springframework.context.annotation.Import;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;

@Component
@Import({MigrateOlapReportingConfiguration.class})
public class MigrateOlapEventListener {

    private static final Logger logger = LoggerFactory.getLogger(MigrateOlapEventListener.class);

    private final TenantAwareMigrateLifecycle jobRunner;

    public MigrateOlapEventListener(TenantAwareMigrateLifecycle jobRunner) {
        this.jobRunner = jobRunner;
    }

    @EventListener
    public void eventRunMigrate(final RefreshScopeRefreshedEvent refreshScopeRefreshedEvent,
                                final MigrateBatchConfigurer configurer) {
        try {
            logger.debug("RefreshScopeRefreshedEvent - {}", refreshScopeRefreshedEvent);
            if (!jobRunner.isRunning()) {
                logger.info("Ignoring RefreshScopeRefreshedEvent request since migrate is not running");
            } else {
                logger.info("Migrate triggered by RefreshScopeRefreshedEvent for all tenants");
                //re-initialize before running this way as workaround for thread Synchronization problems
                configurer.initialize();
                jobRunner.run();
                logger.info("Migrate jobRunner called");
            }
        } catch (Exception e) {
            //no end user, catch and log
            logger.warn("Unable to process OLAP migration", e);
        }
    }
}
