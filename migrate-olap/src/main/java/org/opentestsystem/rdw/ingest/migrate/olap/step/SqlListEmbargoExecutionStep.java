package org.opentestsystem.rdw.ingest.migrate.olap.step;

import org.opentestsystem.rdw.ingest.common.repository.SqlListExecutionRepository;
import org.opentestsystem.rdw.migrate.common.Migrate;
import org.opentestsystem.rdw.migrate.common.step.StepTasklet;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.repeat.RepeatStatus;

import java.util.Map;

/**
 * A step for executing {@link SqlListExecutionRepository#execute(Iterable, Map)} if {@link Migrate#isMigrateEmbargo()} is true.
 */
public class SqlListEmbargoExecutionStep extends StepTasklet {
    private final SqlListExecutionRepository repository;
    private final Iterable<String> sqls;

    /**
     * Constructor
     *
     * @param repository the repository
     * @param sqls       the sqls to be executed by this step
     */
    SqlListEmbargoExecutionStep(final SqlListExecutionRepository repository,
                                final Iterable<String> sqls) {
        this.sqls = sqls;
        this.repository = repository;
    }

    @Override
    public RepeatStatus execute(final StepContribution contribution, final ChunkContext chunkContext) throws Exception {
        if (getJobBatch(chunkContext).isMigrateEmbargo()) {
            repository.execute(sqls);
        }
        return RepeatStatus.FINISHED;
    }
}