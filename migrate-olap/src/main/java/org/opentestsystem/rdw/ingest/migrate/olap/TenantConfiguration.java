package org.opentestsystem.rdw.ingest.migrate.olap;

import org.opentestsystem.rdw.migrate.common.configuration.ReportingSystemPropertiesResolver;
import org.opentestsystem.rdw.migrate.common.configuration.ReportingSystemSettings;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.cloud.context.config.annotation.RefreshScope;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.Optional;
import org.opentestsystem.rdw.multitenant.TenantContextHolder;
import org.opentestsystem.rdw.multitenant.TenantIdResolver;
import org.opentestsystem.rdw.multitenant.TenantKeyResolver;
import org.opentestsystem.rdw.multitenant.TenantProperties;

/**
 * Configuration for tenant resolution
 */
@Configuration
public class TenantConfiguration {

    @Bean
    public TenantIdResolver tenantIdResolver() {
        return () -> Optional.ofNullable(TenantContextHolder.getTenantId());
    }

    @Bean
    @ConfigurationProperties("tenantProperties")
    @RefreshScope
    public TenantProperties tenantProperties() {
        return new TenantProperties();
    }

    @Bean
    public TenantKeyResolver tenantKeyResolver(final TenantProperties tenantProperties,
                                               final TenantIdResolver tenantIdResolver) {
        return new TenantKeyResolver(tenantProperties, tenantIdResolver);
    }

    @Bean
    @ConfigurationProperties("reporting")
    @RefreshScope
    public ReportingSystemSettings reportingSystemSettings() {
        return new ReportingSystemSettings();
    }

    @Bean
    @RefreshScope
    public ReportingSystemPropertiesResolver reportingSystemPropertiesResolver(
            final TenantKeyResolver tenantKeyResolver,
            final ReportingSystemSettings reportingSystemSettings) {
        return new ReportingSystemPropertiesResolver(tenantKeyResolver, reportingSystemSettings);
    }

}
