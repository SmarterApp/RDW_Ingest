package org.opentestsystem.rdw.ingest.migrate.olap.step;

import org.opentestsystem.rdw.archive.ArchiveService;
import org.opentestsystem.rdw.migrate.common.step.StepTasklet;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.repeat.RepeatStatus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.io.File;

@Component
public class CleanupLandingLocation extends StepTasklet {
    private final ArchiveService archiveService;

    @Value("${migrate.aws.location}")
    private String location;

    @Autowired
    public CleanupLandingLocation(final ArchiveService archiveService) {
        this.archiveService = archiveService;
    }

    @Override
    public RepeatStatus execute(final StepContribution contribution, final ChunkContext chunkContext) {
        deleteLocationIfExists();
        archiveService.writeResource(location + File.separator + getJobBatch(chunkContext).getId(), "olap-migrate".getBytes(), null);
        return RepeatStatus.FINISHED;
    }

    private void deleteLocationIfExists() {
        try {
            archiveService.delete(location);
        } catch (final IllegalArgumentException ignore) {
            //location does not exists
        }
    }
}
