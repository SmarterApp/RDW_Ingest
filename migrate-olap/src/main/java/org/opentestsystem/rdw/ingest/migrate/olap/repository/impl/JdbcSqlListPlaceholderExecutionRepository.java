package org.opentestsystem.rdw.ingest.migrate.olap.repository.impl;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.util.PropertyPlaceholderHelper;

import java.util.List;
import java.util.Properties;
import org.opentestsystem.rdw.archive.ArchiveService;
import org.opentestsystem.rdw.ingest.common.repository.JdbcSqlListExecutionRepository;

import static com.google.common.collect.Lists.newArrayList;

/**
 * Base class for sql list execution repositories that need to be aware of migrate location placeholder.
 */
abstract class JdbcSqlListPlaceholderExecutionRepository extends JdbcSqlListExecutionRepository {

    private final PropertyPlaceholderHelper placeholderHelper = new PropertyPlaceholderHelper("$[", "]");
    private final ArchiveService archiveService;

    @Value("${migrate.aws.location}")
    private String location;

    /**
     * Constructor
     *
     * @param jdbcTemplate the warehouse jdbc template
     * @param archiveService used to determine migration location placeholder value
     */
    protected JdbcSqlListPlaceholderExecutionRepository(final NamedParameterJdbcTemplate jdbcTemplate,
                                                        final ArchiveService archiveService) {
        super(jdbcTemplate);
        this.archiveService = archiveService;
    }

    @Override
    protected Iterable<String> checkSql(final Iterable<String> sqls) {
        final Properties properties = new Properties();
        // this should be something like "s3://rdw-ci-archive/CA/MigrateOlap"
        properties.put("migrateLocationPlaceholder", archiveService.getRawUri(location));

        final List<String> replacedSqls = newArrayList();
        for (final String sql : sqls) {
            replacedSqls.add(placeholderHelper.replacePlaceholders(sql, properties));
        }
        return replacedSqls;
    }
}
