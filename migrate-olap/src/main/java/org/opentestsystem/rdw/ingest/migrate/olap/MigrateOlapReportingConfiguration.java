package org.opentestsystem.rdw.ingest.migrate.olap;

import org.opentestsystem.rdw.ingest.migrate.olap.step.CleanupLandingLocation;
import org.opentestsystem.rdw.ingest.migrate.olap.step.OlapReportingMigrateStepsConfig;
import org.opentestsystem.rdw.migrate.common.MigrateJobExecutionListener;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecutionListener;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;

/**
 * MigrateReportingConfiguration.
 * Spring Batch configuration for the migrate to reporting {@link Job}.
 */
@Configuration
@EnableBatchProcessing
@Import(OlapReportingMigrateStepsConfig.class)
public class MigrateOlapReportingConfiguration {

    private final JobBuilderFactory jobBuilderFactory;
    private final StepBuilderFactory stepBuilderFactory;

    @Autowired
    public MigrateOlapReportingConfiguration(final JobBuilderFactory jobBuilderFactory,
                                             final StepBuilderFactory stepBuilderFactory) {

        this.jobBuilderFactory = jobBuilderFactory;
        this.stepBuilderFactory = stepBuilderFactory;
    }

    @Bean
    public JobExecutionListener listener() {
        return new MigrateJobExecutionListener();
    }

    @Bean
    public Job migrateReportingJob(final Step cleanupLandingLocationStep,
                                   final Step truncateBeforeStageStep,
                                   final Step extractCodesStep,
                                   final Step extractEntitiesStep,
                                   final Step loadCodesToStagingStep,
                                   final Step loadEntitiesToStagingStep,
                                   final Step upsertCodesStep,
                                   final Step upsertOrganizationsStep,
                                   final Step upsertAsmtsStep,
                                   final Step upsertFactStudentIcaExamStep,
                                   final Step deleteEntitiesStep,
                                   final Step deleteCodesStep,
                                   final Step upsertStudentsStep,
                                   final Step truncateAfterStageStep) {
        try {

            return jobBuilderFactory.get("Migrate OlAP Reporting Job")
                    .preventRestart()
                    .listener(listener())
                    .start(cleanupLandingLocationStep)
                    .next(truncateBeforeStageStep)
                    .next(extractCodesStep)
                    .next(extractEntitiesStep)
                    .next(loadCodesToStagingStep)
                    .next(loadEntitiesToStagingStep)
                    .next(upsertCodesStep)
                    .next(deleteEntitiesStep)
                    .next(upsertOrganizationsStep)
                    .next(upsertAsmtsStep)
                    .next(upsertStudentsStep)
                    .next(upsertFactStudentIcaExamStep)
                    .next(deleteCodesStep)
                    .next(truncateAfterStageStep)
                    .build();
        } catch (Exception e) {
            return null;
        }
    }

    @Bean
    public Step cleanupLandingLocationStep(final CleanupLandingLocation cleanupLandingLocation) {
        return stepBuilderFactory.get("cleanupLandingZone")
                .tasklet(cleanupLandingLocation).build();
    }
}