package org.opentestsystem.rdw.ingest.migrate.olap.repository.impl;

import org.opentestsystem.rdw.ingest.common.repository.JdbcSqlListExecutionRepository;
import org.opentestsystem.rdw.ingest.migrate.olap.repository.SqlListExecutionWithMigrateRepository;
import org.opentestsystem.rdw.migrate.common.Migrate;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.jdbc.core.PreparedStatementCallback;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import java.sql.Timestamp;

/**
 * Jdbc implementation of {@link SqlListExecutionWithMigrateRepository} on the warehouse datamart
 */
@Repository
class JdbcWarehouseSqlListExecutionRepository extends JdbcSqlListExecutionRepository implements SqlListExecutionWithMigrateRepository {

    /**
     * Constructor
     *
     * @param jdbcTemplate the warehouse jdbc template
     */
    public JdbcWarehouseSqlListExecutionRepository(@Qualifier("warehouseJdbcTemplate") final NamedParameterJdbcTemplate jdbcTemplate) {
        super(jdbcTemplate);
    }

    @Override
    @Transactional
    public void execute(final Iterable<String> sqls, final Migrate migrate) {
        for (final String sql : sqls) {
            getJdbcTemplate().getJdbcOperations().execute(sql, (PreparedStatementCallback<Boolean>) ps -> {
                ps.setLong(1, migrate.getId());
                ps.setTimestamp(2, Timestamp.from(migrate.getFirstAt()));
                ps.setTimestamp(3, Timestamp.from(migrate.getLastAt()));
                return ps.execute();
            });
        }
    }

    @Override
    @Transactional
    public void execute(final Iterable<String> sqls, final Long migrateId) {
        for (final String sql : sqls) {
            getJdbcTemplate().getJdbcOperations().execute(sql, (PreparedStatementCallback<Boolean>) ps -> {
                ps.setLong(1, migrateId);
                return ps.execute();
            });
        }
    }
}