package org.opentestsystem.rdw.ingest.migrate.olap.repository;

import org.springframework.batch.core.configuration.annotation.BatchConfigurer;
import org.springframework.batch.core.configuration.annotation.DefaultBatchConfigurer;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;

/**
 * Configuration for DataSources.
 */
@Configuration
@EnableTransactionManagement
@ComponentScan("org.opentestsystem.rdw.migrate.common")
public class DataSourceConfiguration {

    /**
     * Data source for spring batch and reporting data mart with transaction manager.
     *
     * @return DataSource
     */
    @Primary
    @Bean
    @ConfigurationProperties(prefix = "datasources.migrate_rw")
    public DataSource migrateDataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * Spring Batch needs this if setting the data source.
     * In addition to the primary being set.
     *
     * @return BatchConfigurer
     */
    @Bean
    public BatchConfigurer configurer(@Qualifier("migrateDataSource") final DataSource dataSource) {
        return new DefaultBatchConfigurer(dataSource);
    }

    /**
     * The jdbc template used for reading and writing to the reporting data mart.
     *
     * @return DataSource
     */
    @Bean
    public NamedParameterJdbcTemplate migrateJdbcTemplate(@Qualifier("migrateDataSource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    /**
     * Data source for the data warehouse with no transaction manager.
     *
     * @return DataSource
     */
    @Bean
    @ConfigurationProperties(prefix = "datasources.warehouse_rw")
    public DataSource warehouseDataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * The jdbc template used for reading from the data warehouse.
     *
     * @return DataSource
     */
    @Bean
    public NamedParameterJdbcTemplate warehouseJdbcTemplate(@Qualifier("warehouseDataSource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }

    /**
     * Data source for the olap reporting data mart with no transaction manager.
     *
     * @return DataSource
     */
    @Bean
    @ConfigurationProperties(prefix = "datasources.olap_rw")
    public DataSource olapDataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * The jdbc template used for for the olap reporting data mart.
     *
     * @return DataSource
     */
    @Bean
    public NamedParameterJdbcTemplate olapJdbcTemplate(@Qualifier("olapDataSource") final DataSource dataSource) {
        return new NamedParameterJdbcTemplate(dataSource);
    }
}
