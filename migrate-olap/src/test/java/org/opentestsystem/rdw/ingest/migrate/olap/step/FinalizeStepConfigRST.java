package org.opentestsystem.rdw.ingest.migrate.olap.step;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.opentestsystem.rdw.ingest.common.repository.SqlListExecutionRepository;
import org.opentestsystem.rdw.ingest.migrate.olap.SpringBatchIT.BatchTestConfig;
import org.opentestsystem.rdw.ingest.migrate.olap.repository.SqlListExecutionWithMigrateRepository;
import org.opentestsystem.rdw.migrate.common.config.MigrateStagingToReportingSqlConfiguration;
import org.opentestsystem.rdw.migrate.common.config.MigrateWarehouseToStagingSqlConfiguration;
import org.opentestsystem.rdw.migrate.common.step.SqlListExecutionStep;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.batch.core.step.builder.StepBuilder;
import org.springframework.batch.core.step.builder.TaskletStepBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(SpringRunner.class)
@ContextConfiguration(classes = {BatchTestConfig.class})
@SpringBootTest
@ActiveProfiles("redshift")
public class FinalizeStepConfigRST {
    @Autowired
    MigrateStagingToReportingSqlConfiguration stagingToReportingSqlConfiguration;

    @Autowired
    MigrateWarehouseToStagingSqlConfiguration warehouseToStagingSqlConfiguration;

    private StepBuilderFactory stepBuilderFactory;

    private OlapReportingMigrateStepsConfig configUnderTest;

    @Before
    public void setUp() {
        stepBuilderFactory = mock(StepBuilderFactory.class);

        configUnderTest = new OlapReportingMigrateStepsConfig(stepBuilderFactory,
                warehouseToStagingSqlConfiguration,
                stagingToReportingSqlConfiguration,
                mock(SqlListExecutionRepository.class),
                mock(SqlListExecutionRepository.class),
                mock(SqlListExecutionWithMigrateRepository.class));
    }

    @Test
    public void verifyFinalizeStepConfiguration() {
        final StepBuilder stepBuilder = mock(StepBuilder.class);
        when(stepBuilderFactory.get("finalize")).thenReturn(stepBuilder);
        when(stepBuilder.tasklet(any())).thenReturn(mock(TaskletStepBuilder.class));
        final ArgumentCaptor<SqlListExecutionStep> captor = ArgumentCaptor.forClass(SqlListExecutionStep.class);

        configUnderTest.finalizeStep();
        verify(stepBuilder).tasklet(captor.capture());

        final SqlListExecutionStep argument = captor.getValue();

        assertThat(argument.getSqls()).isEmpty();
    }
}