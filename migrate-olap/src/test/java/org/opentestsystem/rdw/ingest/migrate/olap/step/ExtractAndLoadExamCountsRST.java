package org.opentestsystem.rdw.ingest.migrate.olap.step;

import org.junit.Test;
import org.opentestsystem.rdw.migrate.common.TableTestCountHelper;
import org.springframework.batch.core.ExitStatus;
import org.springframework.batch.core.JobExecution;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.jdbc.SqlConfig;
import org.springframework.test.context.jdbc.SqlGroup;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.ingest.migrate.olap.step.OlapReportingMigrateStepsConfig.copyExamCountStepName;
import static org.opentestsystem.rdw.ingest.migrate.olap.step.OlapReportingMigrateStepsConfig.extractExamCountStepName;
import static org.opentestsystem.rdw.ingest.migrate.olap.step.OlapReportingMigrateStepsConfig.stageExamCountStepName;
import static org.opentestsystem.rdw.migrate.common.TableTestCountHelper.verifyTableCountsAfterTest;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.AFTER_TEST_METHOD;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.BEFORE_TEST_METHOD;

public class ExtractAndLoadExamCountsRST extends ExtractStepRST {

    @SqlGroup({
        @Sql(executionPhase = BEFORE_TEST_METHOD, scripts = {"classpath:OlapEntitiesSetup.sql"}, config = @SqlConfig(dataSource = "olapDataSource")),
        @Sql(executionPhase = AFTER_TEST_METHOD, scripts = {"classpath:OlapAndStagingEntitiesTeardown.sql"}, config = @SqlConfig(dataSource = "olapDataSource")),
        @Sql(executionPhase = AFTER_TEST_METHOD, scripts = {"classpath:WarehouseEntitiesTeardown.sql"}, config = @SqlConfig(dataSource = "warehouseDataSource"))
    })
    @Test
    public void itShouldExtractExamCounts() {

        final List<TableTestCountHelper> stagingTableTestCounts = newArrayList();
        stagingTableTestCounts.add(new TableTestCountHelper(warehouseJdbcTemplate.getJdbcOperations(), "staging_exam_count", 1, "school_year = 1998"));
        stagingTableTestCounts.add(new TableTestCountHelper(warehouseJdbcTemplate.getJdbcOperations(), "staging_exam_count", 1, "school_year = 1999"));

        JobExecution jobExecution = launchStep(extractExamCountStepName);
        assertThat(jobExecution.getExitStatus()).isEqualTo(ExitStatus.COMPLETED);

        jobExecution = launchStep(stageExamCountStepName);
        assertThat(jobExecution.getExitStatus()).isEqualTo(ExitStatus.COMPLETED);

        verifyTableCountsAfterTest(stagingTableTestCounts);

        final List<TableTestCountHelper> tableTestCounts = newArrayList();
        tableTestCounts.add(new TableTestCountHelper(warehouseJdbcTemplate.getJdbcOperations(), "exam_count", 1, "school_year = 1998"));
        tableTestCounts.add(new TableTestCountHelper(warehouseJdbcTemplate.getJdbcOperations(), "exam_count", 1, "school_year = 1999"));

        jobExecution = launchStep(copyExamCountStepName);
        assertThat(jobExecution.getExitStatus()).isEqualTo(ExitStatus.COMPLETED);

        verifyTableCountsAfterTest(tableTestCounts);
    }
}
