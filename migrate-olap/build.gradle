// it shouldn't but, empirically, this service needs a larger heap
createDockerfile {
    environmentVariable("MAX_HEAP_SIZE", "-Xmx512m")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

    // this is for retrying connection to config server
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.retry:spring-retry'

    // cloud stream
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    
    implementation project(':rdw-ingest-common')
    implementation project(':rdw-ingest-migrate-common')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    implementation 'org.opentestsystem.rdw.common:rdw-common-archive'
    implementation 'org.opentestsystem.rdw.common:rdw-common-status'
    implementation 'org.opentestsystem.rdw.common:rdw-common-utils'
    implementation 'mysql:mysql-connector-java'
    implementation 'com.amazon.redshift:redshift-jdbc42-no-awssdk:1.2.8.1005'

    testImplementation project(path: ':rdw-ingest-migrate-common', configuration: 'tests')
}

// Task to run RST (redshift integration tests).
//
// RSTs require AWS databases. The convention is for developers to use the CI instances and either
// use the CI schemas or create personal schemas with a prefix. Using the CI schemas can lead to
// conflicts so let's use developer Bob as our example for running RSTs ...
//
// Note this task does *not* run the schema scripts, it assumes test databases are in good shape.
// If you need to run the schema scripts you'll need to set gradle properties for the data sources, e.g.:
/*
gradle -Pschema_prefix=bob_ \
-Predshift_url=jdbc:redshift://rdw-qa.cibkulpjrgtr.us-west-2.redshift.amazonaws.com:5439/ci \
-Predshift_user=bob -Predshift_password=password \
-Pdatabase_url=jdbc:mysql://rdw-aurora-ci.cugsexobhx8t.us-west-2.rds.amazonaws.com:3306 \
-Pdatabase_user=sbac -Pdatabase_password=password \
cleanAllTest migrateAllTest
 */
//
// To run these tests locally, you must either manually adjust the application-redshift.yml file
// (but don't check in your changes!) or set environment variables. If you are using the default
// CI instances with personal schemas you should set:
//   ARCHIVE_CLOUD_AWS_CREDENTIALS_SECRETKEY
//   DATASOURCES_MIGRATE_RW_URL_SCHEMA
//   DATASOURCES_MIGRATE_RW_PASSWORD
//   DATASOURCES_OLAP_RW_USERNAME
//   DATASOURCES_OLAP_RW_PASSWORD
//   DATASOURCES_WAREHOUSE_RW_URL_SCHEMA
//   DATASOURCES_WAREHOUSE_RW_PASSWORD
// If you are running from the command-line you can use local bash export to do it in one command, e.g.:
/*
(export ARCHIVE_CLOUD_AWS_CREDENTIALS_SECRETKEY=secretkey; \
 export DATASOURCES_MIGRATE_RW_URL_SCHEMA=bob_migrate_olap_test; \
 export DATASOURCES_MIGRATE_RW_PASSWORD=password; \
 export DATASOURCES_OLAP_RW_USERNAME=bob; \
 export DATASOURCES_OLAP_RW_PASSWORD=password; \
 export DATASOURCES_WAREHOUSE_RW_URL_SCHEMA=bob_warehouse_test; \
 export DATASOURCES_WAREHOUSE_RW_PASSWORD=password; \
 gradle rst)
*/
// If you are using different instances the full set of variables can be found in application-redshift.yml.
//
// If you want to run the application from within your IDE, to debug or whatever, you'll need to set all those
// environment variables (and a couple more) OR you can pass them in as program arguments. I guess you could also
// just modify the embedded application.yml. But here are the program arguments, without the more sensitive secrets:
/*
--archive.root=s3://rdw-ci-archive
--archive.cloud.aws.credentials.accessKey=access-key
--archive.cloud.aws.credentials.secretKey=secret-key
--migrate.aws.redshift.role=arn:aws:iam::269146879732:role/rdw-redshift
--datasources.migrate_rw.url-server=rdw-aurora-ci.cugsexobhx8t.us-west-2.rds.amazonaws.com:3306
--datasources.migrate_rw.url-schema=bob_migrate_olap_test
--datasources.migrate_rw.username=sbac
--datasources.migrate_rw.password=password
--datasources.olap_rw.url-server=rdw-qa.cibkulpjrgtr.us-west-2.redshift.amazonaws.com:5439
--datasources.olap_rw.url-db=ci
--datasources.olap_rw.username=bob
--datasources.olap_rw.password=password
--datasources.warehouse_rw.url-server=rdw-aurora-ci.cugsexobhx8t.us-west-2.rds.amazonaws.com:3306
--datasources.warehouse_rw.url-schema=bob_warehouse_test
--datasources.warehouse_rw.username=sbac
--datasources.warehouse_rw.password=password
 */

task RST(type: Test) {
    include '**/*RST.*'
    group = 'Verification'
    description = 'Runs the redshift integration tests (slow!).'
    outputs.upToDateWhen { false }
    doFirst {
        println "Running Redshift System Tests..."
    }
}
