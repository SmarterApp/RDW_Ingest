package org.opentestsystem.rdw.ingest.validator.service;

import org.junit.Before;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;

public class MessageCollectorTest {

    private MessageCollector messageCollector;

    @Before
    public void createMessageCollector() {
        messageCollector = new MessageCollector();
    }

    @Test
    public void itShouldLogSimpleMessage() {
        messageCollector.message("message one");
        assertThat(messageCollector.getMessages()).containsExactly("message one");
    }

    @Test
    public void itShouldFormatLogMessage() {
        messageCollector.message("message one ({0})", 1);
        assertThat(messageCollector.getMessages()).containsExactly("message one (1)");
    }

    @Test
    public void itShouldPushThroughFormattingErrors() {
        messageCollector.message("message {}", 1);
        assertThat(messageCollector.getMessages()).containsExactly("Internal Error: failed to format message", "message {}");
    }

    @Test
    public void itShouldLogMessages() {
        messageCollector.error("eek a {0}!", "mouse");
        messageCollector.warning("mice can bite");
        messageCollector.info("mice are nocturnal");
        assertThat(messageCollector.getMessages()).containsExactly(
            "Error: eek a mouse!",
            "Warning: mice can bite",
            "Info: mice are nocturnal"
        );
    }
}
