package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.opentestsystem.rdw.ingest.processor.model.Accommodation;
import org.opentestsystem.rdw.ingest.processor.repository.AccommodationTranslationRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * DefaultAccommodationTranslationRepository - Operates on the accommodation_translation table and inserts
 * the accommodation codes and their description translations
 */
@Repository
public class DefaultAccommodationTranslationRepository implements AccommodationTranslationRepository {
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.accommodation.create}")
    private String accommodationCreate;

    @Value("${sql.accommodationTranslation.create}")
    private String accommodationTranslationCreate;

    @Autowired
    DefaultAccommodationTranslationRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }
    /**
     * Creates an entry in the accommodation_translation table
     *
     * @param accommodations - Collection of accommodations with translation data to insert in to the database
     * @throws IllegalArgumentException
     */
    @Override
    @Transactional
    public void create(Iterable<Accommodation> accommodations) {

        final KeyHolder assessmentKeyHolder = new GeneratedKeyHolder();

        for (Accommodation acc : accommodations) {
            final SqlParameterSource parameterSource = new MapSqlParameterSource()
                    .addValue("code", acc.code());

            jdbcTemplate.update(accommodationCreate, parameterSource, assessmentKeyHolder);
            final Long id = assessmentKeyHolder.getKey().longValue();

        }
    }
}
