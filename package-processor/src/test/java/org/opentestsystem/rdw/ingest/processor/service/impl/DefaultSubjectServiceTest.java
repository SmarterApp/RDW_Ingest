package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.opentestsystem.rdw.common.model.subject.Subject;
import org.opentestsystem.rdw.ingest.processor.repository.SubjectRepository;

import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultSubjectServiceTest {
    private static final String SubjectCode = "test_sub";

    @Mock
    private SubjectRepository repository;

    private DefaultSubjectService service;

    private final Subject subject = Subject.builder()
            .code(SubjectCode)
            .build();

    @Before
    public void setup() {
        service = new DefaultSubjectService(repository);
    }

    @Test
    public void itShouldUpdateASubject() {
        when(repository.findIdByCode(eq(SubjectCode))).thenReturn(1);

        service.upsert(subject, 123L);
        verify(repository).update(SubjectCode, 123L);
    }

    @Test
    public void itShouldCreateASubject() {
        when(repository.findIdByCode(eq(SubjectCode))).thenReturn(null);

        service.upsert(subject, 123L);
        verify(repository).create(SubjectCode, 123L);
    }
}