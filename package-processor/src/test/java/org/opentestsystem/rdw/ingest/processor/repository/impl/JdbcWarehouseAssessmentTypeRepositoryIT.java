package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import org.opentestsystem.rdw.ingest.processor.repository.AssessmentTypeRepository;

import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcAssessmentTypeRepository.class)
@Sql(statements = {
        "INSERT INTO asmt_type (id, code) VALUES (-99, 'Code1');",
        "INSERT INTO asmt_type (id, code) VALUES (-88, 'Code2');",
        "INSERT INTO asmt_type (id, code) VALUES (-55, 'Code55');"
})
public class JdbcWarehouseAssessmentTypeRepositoryIT extends TenantAwareRepositoryIT {

    @Autowired
    private AssessmentTypeRepository repository;

    @Test
    public void itShouldReturnCode() {
        assertThat(repository.findIdByCode("Code1")).isEqualTo(-99);
        assertThat(repository.findIdByCode("Code2")).isEqualTo(-88);
    }

    @Test
    public void itShouldReturnNullWhenCodeIsUnknown() {
        assertThat(repository.findIdByCode("blah")).isEqualTo(null);
    }

    @Test
    public void itShouldCacheReturnedCode() {
        assertThat(getCachedValue("asmtType", "findIdByCode", "Code55")).isNull();
        assertThat(repository.findIdByCode("Code55")).isEqualTo(-55);
        assertThat(getCachedValue("asmtType", "findIdByCode", "Code55").get()).isEqualTo(-55);
    }
}
