package org.opentestsystem.rdw.ingest.processor.service.impl;

import com.google.common.io.ByteStreams;
import org.junit.Test;
import org.opentestsystem.rdw.ingest.common.model.District;
import org.opentestsystem.rdw.ingest.common.model.School;
import org.opentestsystem.rdw.ingest.common.repository.SchoolRepository;
import org.opentestsystem.rdw.ingest.processor.service.OrganizationProcessor;

import java.io.IOException;
import java.util.Map;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Matchers.any;
import static org.mockito.Matchers.eq;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;

public class OrganizationParserTest {

    @Test
    public void itShouldUpsertSchools() throws IOException {
        final byte[] payload = ByteStreams.toByteArray(this.getClass().getResourceAsStream("/organization.json"));

        final SchoolRepository schoolRepository = mock(SchoolRepository.class);
        final OrganizationProcessor processor = new DefaultOrganizationProcessor(schoolRepository);

        processor.process(payload, 1L);
        verify(schoolRepository, times(4)).upsert(any(School.class), eq(1L));
    }

    @Test
    public void testOrgParser() throws IOException {
        final byte[] payload = ByteStreams.toByteArray(this.getClass().getResourceAsStream("/organization.json"));
        final DefaultOrganizationProcessor.OrgTreeParser parser = new DefaultOrganizationProcessor.OrgTreeParser();
        parser.extractDistrictsAndSchools(payload);

        final Map<String, School> schools = parser.getSchools();
        assertThat(schools).hasSize(5);

        final School ds9001 = schools.get("DS9001");
        assertThat(ds9001.getName()).isEqualTo("District 9 Institution 1");

        final District district9 = ds9001.getDistrict();
        assertThat(district9.getNaturalId()).isEqualTo("DISTRICT9");
        assertThat(district9.getName()).isEqualTo("District 9 - Prawn Town");
        assertThat(district9.getStateCode()).isEqualTo("CA");

        assertThat(schools.get("DS1111").getDistrict()).isNull();
    }
}
