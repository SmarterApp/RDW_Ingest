package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.ingest.common.test.CachingTest;
import org.opentestsystem.rdw.ingest.processor.repository.CommonCoreStandardRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@CachingTest
@ActiveProfiles("test")
@Sql(statements = {
        "INSERT INTO subject (id, name) VALUES (-12, 'name1');",
        "INSERT INTO subject (id, name) VALUES (-13, 'name2');",
        "INSERT INTO common_core_standard (id, natural_id, subject_id, description) VALUES (-99, 'natural-id-999', -12, 'test')",
        "INSERT INTO common_core_standard (id, natural_id, subject_id, description) VALUES (-98, 'natural-id-998', -12, 'test')",
        "INSERT INTO common_core_standard (id, natural_id, subject_id, description) VALUES (-97, 'natural-id-997', -13, 'test')",
        "INSERT INTO common_core_standard (id, natural_id, subject_id, description) VALUES (-96, 'natural-id-996', -13, 'test')",
})
public class JdbcCommonCoreStandardRepositoryIT {

    @Autowired
    private CommonCoreStandardRepository repository;

    @Test
    public void itShouldFindIds() {
        assertThat(repository.findIdsBySubjectNameAndNaturalIds(newArrayList("natural-id-999", "natural-id-998"), -12)).contains(-99, -98);
        assertThat(repository.findIdsBySubjectNameAndNaturalIds(newArrayList("natural-id-999", "natural-id-998"), -12)).contains(-99, -98);

        assertThat(repository.findIdsBySubjectNameAndNaturalIds(newArrayList("natural-id-999", "natural-id-998"), -13)).isEmpty();

        assertThat(repository.findIdsBySubjectNameAndNaturalIds(newArrayList(), -12)).isEmpty();
    }

}