package org.opentestsystem.rdw.ingest.processor.model;

import com.google.common.collect.ImmutableList;
import org.junit.Test;

import org.opentestsystem.rdw.common.model.ScoreType;
import org.opentestsystem.rdw.common.model.subject.ClaimScoring;
import org.opentestsystem.rdw.common.model.subject.PerformanceLevel;
import org.opentestsystem.rdw.common.model.subject.PerformanceLevels;
import org.opentestsystem.rdw.common.model.subject.Scoring;

import static org.assertj.core.api.Assertions.assertThat;

public class WarehouseSubjectWarehouseAssessmentScoringTest {

    @Test(expected = IllegalArgumentException.class)
    public void itRequiresTypeToBeSet() {
        WarehouseSubjectAssessmentScoring.builder().build();
    }

    @Test
    public void itShouldCopyScoring() {
        final Scoring src = ClaimScoring.builder().minScore(1000d).maxScore(2500d)
                .performanceLevels(PerformanceLevels.builder()
                        .standardCutoff(1)
                        .performanceLevels(ImmutableList.of(
                                PerformanceLevel.builder().level(1).build(),
                                PerformanceLevel.builder().level(2).build()))
                        .build())
                .build();
        final WarehouseSubjectAssessmentScoring scoring = WarehouseSubjectAssessmentScoring.builder().copy(src).build();

        assertThat(scoring.getType()).isEqualTo(ScoreType.CLAIM);
        assertThat(scoring.getMinScore()).isEqualTo(1000);
        assertThat(scoring.getMaxScore()).isEqualTo(2500);
        assertThat(scoring.getPerformanceLevelCount()).isEqualTo(2);
        assertThat(scoring.getPerformanceLevelStandardCutoff()).isEqualTo(1);
    }
}
