package org.opentestsystem.rdw.ingest.processor.model;

import org.junit.Test;

/**
 * Unit test for Item class
 */
public class ItemTest {

    @Test(expected = NullPointerException.class)
    public void itShouldNotAllowNullDokParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .targetId(1)
                .allowCalculator(true)
                .difficulty(1.5)
                .maxPoints(1.0)
                .mathPractice(3);

        Item item = builder.build();
    }

    @Test(expected = NullPointerException.class)
    public void itShouldNotAllowNullClaimIdParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .targetId(1)
                .dokId(1)
                .allowCalculator(true)
                .difficulty(1.5)
                .maxPoints(1.0)
                .mathPractice(3);

        Item item = builder.build();
    }

    @Test(expected = NullPointerException.class)
    public void itShouldNotAllowNullTargetIdParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .dokId(1)
                .allowCalculator(true)
                .difficulty(1.5)
                .maxPoints(1.0)
                .mathPractice(3);

        Item item = builder.build();
    }

    @Test(expected = NullPointerException.class)
    public void itShouldNotAllowNullDifficultyParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .dokId(1)
                .targetId(1)
                .allowCalculator(true)
                .mathPractice(3)
                .maxPoints(1.0);

        Item item = builder.build();
    }

    @Test(expected = NullPointerException.class)
    public void itShouldNotAllowNullMaxPointsParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .dokId(1)
                .targetId(1)
                .allowCalculator(true)
                .difficulty(1.5)
                .mathPractice(3);

        Item item = builder.build();
    }

    @Test
    public void itShouldAllowNullMathPracticeParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .dokId(1)
                .targetId(1)
                .allowCalculator(true)
                .difficulty(1.5)
                .maxPoints(2.0);

        final Item item = builder.build();
    }

    @Test
    public void itShouldAllowNullAllowCalculatorParameter() {
        final Item.Builder builder = Item.builder()
                .naturalId("ItemId")
                .claimId(1)
                .dokId(1)
                .targetId(1)
                .mathPractice(1)
                .difficulty(1.5)
                .maxPoints(2.0);

        final Item item = builder.build();
    }


}
