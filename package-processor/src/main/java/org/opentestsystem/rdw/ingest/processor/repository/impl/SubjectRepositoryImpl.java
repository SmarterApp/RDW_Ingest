package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.opentestsystem.rdw.ingest.processor.repository.SubjectRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

/**
 * SubjectRepositoryImpl - provides interaction with the subject table
 */
@Repository
public class SubjectRepositoryImpl implements SubjectRepository {
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.subject.findIdByName}")
    private String findIdByNameSql;

    @Autowired
    SubjectRepositoryImpl(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    /**
     * Finds an id of the subject by its name
     *
     * @param name the name of the subject
     * @return the id
     * @throws IllegalArgumentException if the given name is not found
     */
    @Override
    @Cacheable(value = "subject")
    public Integer findIdByName(final String name) {
        try {
            return jdbcTemplate.queryForObject(findIdByNameSql, new MapSqlParameterSource("name", name), Integer.class);
        } catch(EmptyResultDataAccessException ignore) {
            return null;
        }
    }
}
