package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.ingest.common.model.ImportException;
import org.opentestsystem.rdw.ingest.common.util.DataElementErrorCollector;
import org.opentestsystem.rdw.ingest.processor.model.Assessment;
import org.opentestsystem.rdw.ingest.processor.repository.AssessmentPackageRepository;
import org.opentestsystem.rdw.ingest.processor.service.AssessmentPackageProcessor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

import static org.opentestsystem.rdw.ingest.common.model.ImportStatus.BAD_DATA;

@Service
public class DefaultAssessmentPackageProcessor implements AssessmentPackageProcessor {
    private static final Logger logger = LoggerFactory.getLogger(DefaultAssessmentPackageProcessor.class);
    private final AssessmentPackageRepository packageRepository;
    private final AssessmentParser parser;


    @Autowired
    public DefaultAssessmentPackageProcessor(final AssessmentPackageRepository packageRepository,
                                             final AssessmentParser parser) {
        this.packageRepository = packageRepository;
        this.parser = parser;

    }

    @Override
    public void process(final byte[] assessmentPackage, final long importId) {
        final DataElementErrorCollector elementErrorCollector = new DataElementErrorCollector();

        final List<Assessment> assessments = parser.parse(assessmentPackage, elementErrorCollector);

        //If there are errors in the container, don't insert anything into the database, just bail out
        if (!elementErrorCollector.isEmpty()) throw new ImportException(BAD_DATA, elementErrorCollector.toJson());

        //Insert into database
        packageRepository.createPackage(assessments, importId);

        logger.info(String.format("Processed %d assessments", assessments.size()));
    }

}

