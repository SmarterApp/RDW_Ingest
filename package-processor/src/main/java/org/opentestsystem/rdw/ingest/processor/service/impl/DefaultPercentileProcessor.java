package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.ingest.processor.model.Percentile;
import org.opentestsystem.rdw.ingest.processor.repository.PercentileRepository;
import org.opentestsystem.rdw.ingest.processor.service.PercentileProcessor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
class DefaultPercentileProcessor implements PercentileProcessor {
    private static final Logger logger = LoggerFactory.getLogger(DefaultPercentileProcessor.class);
    private final PercentileRepository repository;
    private final PercentileParser parser;

    @Autowired
    public DefaultPercentileProcessor(final PercentileRepository repository, final PercentileParser parser) {
        this.repository = repository;
        this.parser = parser;
    }

    @Override
    public String process(final byte[] payload, final long importId) {

        final List<Percentile> percentiles = parser.parse(payload);

        repository.save(percentiles, importId);

        long created = percentiles.stream().filter(p -> p.getId() == null).count();
        final String message = "Percentiles created: " + created + " updated: " + (percentiles.size() - created);
        logger.info(message);

        return message;
    }

}