package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.ingest.processor.model.Percentile;
import org.opentestsystem.rdw.ingest.processor.repository.PercentileRepository;
import org.opentestsystem.rdw.ingest.processor.service.PercentileProcessor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
class DefaultPercentileProcessor implements PercentileProcessor {
    private static final Logger logger = LoggerFactory.getLogger(DefaultPercentileProcessor.class);
    private final PercentileRepository repository;
    private final PercentileParser parser;

    @Autowired
    public DefaultPercentileProcessor(final PercentileRepository repository, final PercentileParser parser) {
        this.repository = repository;
        this.parser = parser;
    }

    @Override
    public String process(final byte[] payload, final long importId) {

        final List<Percentile> percentiles = parser.parse(payload);

        final List<Percentile> newPercentiles = new ArrayList<>();
        final List<Percentile> existPercentiles = new ArrayList<>();

        //todo: move create vs update into repo save method
        for (Percentile percentile : percentiles) {
            final Integer existPercentileId = repository.findIdByKey(percentile.getAssessmentId(), percentile.getStartDate(), percentile.getEndDate());
            if (existPercentileId == null) {
                newPercentiles.add(percentile);
            } else {
                existPercentiles.add(percentile);
            }
        }

        if (newPercentiles.size() > 0) repository.create(newPercentiles, importId);
        if (existPercentiles.size() > 0) repository.update(existPercentiles, importId);
        final String message = "Percentiles created: " + newPercentiles.size() + " updated: " + existPercentiles.size();
        logger.info(message);
        return message;
    }

}