package org.opentestsystem.rdw.ingest.processor.repository.impl;

import com.google.common.collect.Iterables;
import org.opentestsystem.rdw.ingest.processor.model.Accommodation;
import org.opentestsystem.rdw.ingest.processor.repository.AccommodationTranslationRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;

import static org.hibernate.validator.internal.util.CollectionHelper.newArrayList;

@Repository
public class JdbcAccommodationTranslationRepository implements AccommodationTranslationRepository {
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.accommodationTranslation.accommodation.create}")
    private String accommodationCreate;

    @Value("${sql.accommodationTranslation.upsert}")
    private String accommodationTranslationUpsert;

    @Autowired
    JdbcAccommodationTranslationRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    @Transactional
    public void upsert(final Iterable<Accommodation> accommodations) {
        if (Iterables.isEmpty(accommodations)) return;

        final ArrayList<MapSqlParameterSource> translationBatchParams = newArrayList();

        for (final Accommodation acc : accommodations) {
            jdbcTemplate.update(accommodationCreate, new MapSqlParameterSource("code", acc.code()));

            for (final String langCode : acc.translations().keySet()) {
                translationBatchParams.add(new MapSqlParameterSource()
                        .addValue("accCode", acc.code())
                        .addValue("languageCode", langCode)
                        .addValue("label", acc.translations().get(langCode))
                );
            }
        }
        jdbcTemplate.batchUpdate(accommodationTranslationUpsert, translationBatchParams.toArray(new MapSqlParameterSource[translationBatchParams.size()]));
    }
}
