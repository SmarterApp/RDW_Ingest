package org.opentestsystem.rdw.ingest.processor.model;

import java.util.HashMap;
import java.util.Map;

/**
 * AccessibilityCode - model of an accessibility code and its language translations to assist in report generation
 */
public class Accommodation {
    private final String code;
    private final Map<Integer, String> translations;

    private Accommodation(Builder builder) {
        this.code = builder.code;
        this.translations = builder.translations;
    }

    public String code() {
        return code;
    }

    public Map<Integer, String> translations() {
        return translations;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        final Accommodation that = (Accommodation) o;

        if (!code.equals(that.code)) return false;
        return translations.equals(that.translations);
    }

    @Override
    public int hashCode() {
        int result = code.hashCode();
        result = 31 * result + translations.hashCode();
        return result;
    }

    /**
     * The Builder for the {@link Accommodation}
     */
    public static class Builder {
        private String code;
        private Map<Integer, String> translations;

        private Builder(){
            translations = new HashMap<>();
        }

        public Accommodation build(){
            return new Accommodation(this);
        }

        public Builder code(final String code) {
            this.code = code;
            return this;
        }

        public Builder addTranslation(final Integer langCode, final String label) {
            this.translations.put(langCode, label);
            return this;
        }
    }
}
