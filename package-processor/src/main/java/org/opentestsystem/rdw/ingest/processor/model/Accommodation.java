package org.opentestsystem.rdw.ingest.processor.model;

import java.util.Map;
import java.util.Objects;

import static com.google.common.collect.Maps.newHashMap;

/**
 * Accommodation representing a code and multiple language translations
 */
public class Accommodation {
    private String code;
    private Map<String, String> translations;

    public String code() {
        return code;
    }

    public Map<String, String> translations() {
        return translations;
    }

    public static Builder builder() {
        return new Builder();
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        final Accommodation that = (Accommodation) o;

        return Objects.equals(code, that.code) && Objects.equals(translations, that.translations);
    }

    @Override
    public int hashCode() {
        return Objects.hash(code, translations == null ? null : translations.hashCode());
    }

    /**
     * The Builder for the {@link Accommodation}
     */
    public static class Builder {
        private String code;
        private Map<String, String> translations = newHashMap();

        public Accommodation build() {
            final Accommodation accommodation = new Accommodation();
            accommodation.code = code;
            accommodation.translations = translations;
            return accommodation;
        }

        public Builder code(final String code) {
            this.code = code;
            return this;
        }

        public Builder addTranslation(final String langCode, final String label) {
            this.translations.put(langCode, label);
            return this;
        }
    }
}
