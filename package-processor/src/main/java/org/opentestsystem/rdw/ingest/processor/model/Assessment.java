package org.opentestsystem.rdw.ingest.processor.model;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;

/**
 * An assessment used to marshal data in to the database
 */
public class Assessment {
    private final String naturalId;
    private final String name;
    private final int gradeId;
    private final String label;
    private final int typeId;
    private final int subjectId;
    private final int schoolYear;
    private final String version;
    private final Double minScore;
    private final Double maxScore;
    private Double cutPoint1;
    private Double cutPoint2;
    private Double cutPoint3;
    private final List<Item> items;

    private Assessment(Builder asmtBuilder) {
        this.naturalId = asmtBuilder.naturalId;
        this.name = asmtBuilder.name;
        this.gradeId = asmtBuilder.gradeId;
        this.typeId = asmtBuilder.typeId;
        this.subjectId = asmtBuilder.subjectId;
        this.schoolYear = asmtBuilder.schoolYear;
        this.label = asmtBuilder.label;
        this.version = asmtBuilder.version;
        this.minScore = asmtBuilder.minScore;
        this.maxScore = asmtBuilder.maxScore;
        this.cutPoint1 = asmtBuilder.cutPoint1;
        this.cutPoint2 = asmtBuilder.cutPoint2;
        this.cutPoint3 = asmtBuilder.cutPoint3;
        this.items = asmtBuilder.items;
    }

    public static Builder builder() {
        return new Builder();
    }

    public String getNaturalId() {
        return naturalId;
    }

    public String getName() {
        return name;
    }

    public int getGradeId() {
        return gradeId;
    }

    public String getLabel() {
        return label;
    }

    public int getTypeId() {
        return typeId;
    }

    public int getSubjectId() {
        return subjectId;
    }

    public int getsSchoolYear() {
        return schoolYear;
    }

    public String getVersion() {
        return version;
    }

    public Double getMinScore() {
        return minScore;
    }

    public Double getMaxScore() {
        return maxScore;
    }

    public Double getCutPoint1() {
        return cutPoint1;
    }

    public Double getCutPoint2() {
        return cutPoint2;
    }

    public Double getCutPoint3() {
        return cutPoint3;
    }

    public List<Item> getItems() {
        return items;
    }


    /**
     * The Builder for the {@link Assessment}
     */
    public static class Builder {
        private String naturalId;
        private String name;
        private String label;
        private Integer schoolYear;
        private String version;
        //The following are validated against translation tables in the database
        private Integer gradeId;
        private Integer typeId;
        private Integer subjectId;
        //Not checked against database, but required to exist
        private Double cutPoint1;
        private Double cutPoint2;
        private Double cutPoint3;
        private Double minScore;
        private Double maxScore;
        private List<Item> items = newArrayList();

        /**
         * Builds an {@link Assessment} object
         *
         * @return the assembled object
         * @throws NullPointerException if there was a problem processing any of the required data elements
         */
        public Assessment build() {
            return new Assessment(this);
        }

        public Builder naturalId(final String naturalId) {
            this.naturalId = naturalId;
            return this;
        }

        public Builder item(final Item item) {
            this.items.add(item);
            return this;
        }

        public Builder gradeId(final Integer gradeId) {
            this.gradeId = gradeId;
            return this;
        }

        public Builder typeId(final Integer typeId) {
            this.typeId = typeId;
            return this;
        }

        public Builder schoolYear(final Integer schoolYear) {
            this.schoolYear = schoolYear;
            return this;
        }

        public Builder subjectId(final Integer subjectId) {
            this.subjectId = subjectId;
            return this;
        }

        public Builder name(final String name) {
            this.name = name;
            return this;
        }

        public Builder cutPoint1(final Double cutPoint1) {
            this.cutPoint1 = cutPoint1;
            return this;
        }

        public Builder cutPoint2(final Double cutPoint2) {
            this.cutPoint2 = cutPoint2;
            return this;
        }

        public Builder cutPoint3(final Double cutPoint3) {
            this.cutPoint3 = cutPoint3;
            return this;
        }

        public Builder label(final String label) {
            this.label = label;
            return this;
        }

        public Builder version(final String version) {
            this.version = version;
            return this;
        }


        public Builder minScore(final Double minScore) {
            this.minScore = minScore;
            return this;
        }

        public Builder maxScore(final Double maxScore) {
            this.maxScore = maxScore;
            return this;
        }

    }
}

