package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.common.model.subject.Subject;
import org.opentestsystem.rdw.common.model.subject.Trait;
import org.opentestsystem.rdw.ingest.processor.repository.TraitRepository;
import org.opentestsystem.rdw.ingest.processor.service.SubjectTraitService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Set;

/**
 * Default implementation of a SubjectTraitService
 */
@Service
class DefaultSubjectTraitService implements SubjectTraitService {

    private final TraitRepository repository;

    @Autowired
    public DefaultSubjectTraitService(final TraitRepository repository) {
        this.repository = repository;
    }

    @Override
    public void upsert(final Subject subject) {
        final String subjectCode = subject.getCode();
        final Set<String> existingTraitCodes = repository.findCodesBySubject(subjectCode);

        if (subject.getTraits() != null) {
            for (final Trait trait : subject.getTraits()) {
                if (existingTraitCodes.remove(trait.getCode())) continue;
                repository.create(subjectCode, trait.getCode(), trait.getPurpose(), trait.getCategory(), trait.getMaxScore());
            }
        }

        for (final String code : existingTraitCodes) {
            if (repository.isReferenced(subjectCode, code)) {
                throw new IllegalArgumentException("Cannot delete trait: " + code + " due to existing exams");
            }
            repository.delete(subjectCode, code);
        }
    }
}
