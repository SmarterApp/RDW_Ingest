package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.opentestsystem.rdw.ingest.processor.repository.GradeRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

/**
 * GradeRepositoryImpl - provides interaction with the grade table
 */
@Repository
public class GradeRepositoryImpl implements GradeRepository {
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.grade.findIdByCode}")
    private String findIdByCodeSql;

    @Autowired
    GradeRepositoryImpl(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    /**
     * Finds an id of the grade by its code
     *
     * @param code the grade code, e.g. KG, 01, 02, etc.
     * @return the id
     * @throws IllegalArgumentException if the given code is not found
     */
    @Override
    @Cacheable(value = "grade")
    public Integer findIdByCode(final String code) {
        try {
            return jdbcTemplate.queryForObject(findIdByCodeSql, new MapSqlParameterSource("code", code), Integer.class);
        } catch (EmptyResultDataAccessException ignore) {
            return null;
        }
    }
}
