package org.opentestsystem.rdw.ingest.processor.repository;

import org.opentestsystem.rdw.ingest.processor.model.WarehouseSubjectAssessmentType;

import java.util.Collection;

/**
 * Implementations of this interface are responsible for persisting
 * {@link WarehouseSubjectAssessmentType} instances.
 */
public interface SubjectAssessmentTypeRepository {

    /**
     * Return the existing subject assessment types for the given subject.
     *
     * @param subjectCode A subject code
     * @return the subject assessment types or empty collection if none exist
     */
    Collection<WarehouseSubjectAssessmentType> findBySubject(String subjectCode);

    /**
     * Create the given subject assessment types in the repository.
     *
     * @param type  The subject assessment type
     * @return The persisted subject assessment type
     */
    WarehouseSubjectAssessmentType create(WarehouseSubjectAssessmentType type);

    /**
     * Update the given subject assessment type in the repository.
     *
     * @param type The subject assessment type
     * @return The persisted subject assessment type
     * @throws IllegalArgumentException if attempting to update a definition that
     *                                  has exams bound to it.
     */
    WarehouseSubjectAssessmentType update(WarehouseSubjectAssessmentType type);

    /**
     * Delete the given subject assessment type from the repository.
     *
     * @param subjectCode           A subject code
     * @param assessmentTypeCode    An assessment type code
     * @throws IllegalArgumentException if attempting to delete a definition that
     *                                  has exams bound to it.
     */
    void delete(String subjectCode, String assessmentTypeCode);

    /**
     * Test if the given subject assessment type has associated assessments.
     *
     * @param type  The subject assessment type
     * @return True if assessments of the given subject and assessment type exist
     */
    boolean hasAssessments(WarehouseSubjectAssessmentType type);

}
