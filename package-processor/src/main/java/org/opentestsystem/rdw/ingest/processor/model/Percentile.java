package org.opentestsystem.rdw.ingest.processor.model;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class Percentile {
    private Integer id;
    private Integer assessmentId;
    private LocalDate startDate;
    private LocalDate endDate;
    private Integer count;
    private Double mean;
    private Double standardDeviation;
    private Double minScore;
    private Double maxScore;
    private List<PercentileScore> percentileScores;

    public Integer getId() {
        return id;
    }

    public Integer getAssessmentId() {
        return assessmentId;
    }

    public LocalDate getStartDate() {
        return startDate;
    }

    public LocalDate getEndDate() {
        return endDate;
    }

    public Integer getCount() {
        return count;
    }

    public Double getMean() {
        return mean;
    }

    public Double getStandardDeviation() {
        return standardDeviation;
    }

    public Double getMinScore() {
        return minScore;
    }

    public Double getMaxScore() {
        return maxScore;
    }

    public List<PercentileScore> getPercentileScores() {
        return percentileScores == null ? new ArrayList<>() : percentileScores;
    }

    public static class Builder {
        private Integer id;
        private Integer assessmentId;
        private LocalDate startDate;
        private LocalDate endDate;
        private Integer count;
        private Double mean;
        private Double standardDeviation;
        private Double minScore;
        private Double maxScore;
        private List<PercentileScore> percentileScores = new ArrayList<>();

        public Builder id(final Integer id) {
            this.id = id;
            return this;
        }

        public Builder assessmentId(final Integer assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }

        public Builder startDate(final LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        public Builder endDate(final LocalDate endDate) {
            this.endDate = endDate;
            return this;
        }

        public Builder count(final Integer count) {
            this.count = count;
            return this;
        }

        public Builder mean(final Double mean) {
            this.mean = mean;
            return this;
        }

        public Builder standardDeviation(final Double standardDeviation) {
            this.standardDeviation = standardDeviation;
            return this;
        }

        public Builder minScore(final Double minScore) {
            this.minScore = minScore;
            return this;
        }

        public Builder maxScore(final Double maxScore) {
            this.maxScore = maxScore;
            return this;
        }

        public Builder percentileScore(final PercentileScore percentileScore) {
            this.percentileScores.add(percentileScore);
            return this;
        }

        public Builder percentileScores(final List<PercentileScore> percentileScores) {
            this.percentileScores = percentileScores;
            return this;
        }

        public Percentile build() {
            Percentile percentile = new Percentile();
            percentile.id = id;
            percentile.assessmentId = assessmentId;
            percentile.startDate = startDate;
            percentile.endDate = endDate;
            percentile.count = count;
            percentile.mean = mean;
            percentile.standardDeviation = standardDeviation;
            percentile.minScore = minScore;
            percentile.maxScore = maxScore;
            percentile.percentileScores = percentileScores;
            return percentile;
        }
    }

}
