package org.opentestsystem.rdw.ingest.processor.model;

import org.opentestsystem.rdw.common.model.subject.SubjectAssessmentType;

import java.util.Objects;

/**
 * This model represents the definition of an AssessmentType's variables
 * within the context of a Subject.
 */
public class WarehouseSubjectAssessmentType {

    private String assessmentTypeCode;
    private String subjectCode;
    private int performanceLevelCount;
    private Integer performanceLevelCutoff;
    private Integer claimScorePerformanceLevelCount;

    public String getAssessmentTypeCode() {
        return assessmentTypeCode;
    }

    public String getSubjectCode() {
        return subjectCode;
    }

    public int getPerformanceLevelCount() {
        return performanceLevelCount;
    }

    public Integer getPerformanceLevelCutoff() {
        return performanceLevelCutoff;
    }

    public Integer getClaimScorePerformanceLevelCount() {
        return claimScorePerformanceLevelCount;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj) return true;
        if (obj.getClass() != WarehouseSubjectAssessmentType.class) return false;

        final WarehouseSubjectAssessmentType other = (WarehouseSubjectAssessmentType) obj;
        return Objects.equals(assessmentTypeCode, other.assessmentTypeCode)
                && Objects.equals(subjectCode, other.subjectCode)
                && Objects.equals(performanceLevelCount, other.performanceLevelCount)
                && Objects.equals(performanceLevelCutoff, other.performanceLevelCutoff)
                && Objects.equals(claimScorePerformanceLevelCount, other.claimScorePerformanceLevelCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                assessmentTypeCode,
                subjectCode,
                performanceLevelCount,
                performanceLevelCutoff,
                claimScorePerformanceLevelCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private String assessmentTypeCode;
        private String subjectCode;
        private int performanceLevelCount;
        private Integer performanceLevelCutoff;
        private Integer claimScorePerformanceLevelCount;

        public WarehouseSubjectAssessmentType build() {
            final WarehouseSubjectAssessmentType type = new WarehouseSubjectAssessmentType();
            type.assessmentTypeCode = assessmentTypeCode;
            type.subjectCode = subjectCode;
            type.performanceLevelCount = performanceLevelCount;
            type.performanceLevelCutoff = performanceLevelCutoff;
            type.claimScorePerformanceLevelCount = claimScorePerformanceLevelCount;

            return type;
        }

        public Builder copy(final WarehouseSubjectAssessmentType type) {
            assessmentTypeCode = type.getAssessmentTypeCode();
            subjectCode = type.getSubjectCode();
            performanceLevelCount = type.getPerformanceLevelCount();
            performanceLevelCutoff = type.getPerformanceLevelCutoff();
            claimScorePerformanceLevelCount = type.getClaimScorePerformanceLevelCount();

            return this;
        }

        public Builder fromSubjectAssessmentType(final SubjectAssessmentType type) {
            this.assessmentTypeCode = type.getCode();
            this.performanceLevelCount = type.getPerformanceLevels().getPerformanceLevels().size();
            this.performanceLevelCutoff = type.getPerformanceLevels().getStandardCutoff();
            if (type.getSubScoring() == null) {
                return this;
            }

            this.claimScorePerformanceLevelCount = type.getSubScoring().getPerformanceLevels().getPerformanceLevels().size();
            return this;
        }

        public Builder assessmentTypeCode(final String assessmentTypeCode) {
            this.assessmentTypeCode = assessmentTypeCode;
            return this;
        }

        public Builder subjectCode(final String subjectCode) {
            this.subjectCode = subjectCode;
            return this;
        }

        public Builder performanceLevelCount(final int performanceLevelCount) {
            this.performanceLevelCount = performanceLevelCount;
            return this;
        }

        public Builder performanceLevelCutoff(final Integer performanceLevelCutoff) {
            this.performanceLevelCutoff = performanceLevelCutoff;
            return this;
        }

        public Builder claimScorePerformanceLevelCount(final Integer claimScorePerformanceLevelCount) {
            this.claimScorePerformanceLevelCount = claimScorePerformanceLevelCount;
            return this;
        }
    }
}
