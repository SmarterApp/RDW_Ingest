package org.opentestsystem.rdw.ingest.processor.repository.impl;

import com.google.common.collect.Iterables;
import org.opentestsystem.rdw.ingest.processor.repository.CommonCoreStandardRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.List;

import static com.google.common.collect.Lists.newArrayList;

@Repository
class JdbcCommonCoreStandardRepository implements CommonCoreStandardRepository {
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.commonCoreStandard.findIdsBySubjectNameAndNaturalIds}")
    private String findIdsBySubjectNameAndNaturalIdsSql;

    @Autowired
    JdbcCommonCoreStandardRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    public List<Integer> findIdsBySubjectNameAndNaturalIds(final Iterable<String> naturalIds, final Integer subjectId) {
        if (Iterables.isEmpty(naturalIds)) return newArrayList();

        return jdbcTemplate.queryForList(findIdsBySubjectNameAndNaturalIdsSql,
                new MapSqlParameterSource()
                        .addValue("naturalIds", naturalIds)
                        .addValue("subjectId", subjectId), Integer.class);

    }
}
