package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.common.model.subject.ItemClaim;
import org.opentestsystem.rdw.common.model.subject.Subject;
import org.opentestsystem.rdw.ingest.processor.repository.ClaimRepository;
import org.opentestsystem.rdw.ingest.processor.service.SubjectClaimService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Set;
import java.util.stream.Collectors;

/**
 * Default implementation of a SubjectClaimService
 */
@Service
class DefaultSubjectClaimService implements SubjectClaimService {

    private final ClaimRepository repository;

    @Autowired
    public DefaultSubjectClaimService(final ClaimRepository repository) {
        this.repository = repository;
    }

    @Override
    public void upsert(final Subject subject) {
        final String subjectCode = subject.getCode();
        final Set<String> existingClaims = repository.findCodesBySubject(subjectCode);

        final Set<String> submittedClaims = subject.getClaims().stream()
                .filter(ItemClaim::isOrganizational)
                .map(ItemClaim::getCode)
                .collect(Collectors.toSet());

        for (final String submitted : submittedClaims) {
            if (existingClaims.remove(submitted)) continue;

            repository.create(subjectCode, submitted);
        }

        for (final String existing : existingClaims) {
            if (repository.isReferenced(subjectCode, existing)) {
                throw new IllegalArgumentException("Cannot delete claim: " + existing + " due to existing assessment items");
            }
            repository.delete(subjectCode, existing);
        }
    }
}
