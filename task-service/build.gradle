dependencies {
    implementation project(':rdw-ingest-common')

    implementation 'org.opentestsystem.rdw.common:rdw-common-archive'
    implementation 'org.opentestsystem.rdw.common:rdw-common-model'
    implementation 'org.opentestsystem.rdw.common:rdw-common-multi-tenant'
    implementation 'org.opentestsystem.rdw.common:rdw-common-status'
    implementation 'org.opentestsystem.rdw.common:rdw-common-utils'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation 'commons-net:commons-net:3.6'  // ftp
    implementation 'mysql:mysql-connector-java'
    implementation 'net.sf.supercsv:super-csv:2.4.0'

    // auth
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security.oauth:spring-security-oauth2'
    testImplementation 'org.springframework.security:spring-security-test'

    // this is for retrying connection to config server
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.retry:spring-retry'

    // cloud stream
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    implementation 'org.springframework.cloud:spring-cloud-stream'

    // fixes java 8 time marshaling
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootRun {
    addResources = true
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}
