apply plugin: 'org.springframework.boot'

dependencies {
    // handy for creating metadata with @ConfigurationProperties
    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'

    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    compile 'org.opentestsystem.rdw.common:rdw-common-utils'

    // csv
    compile 'net.sf.supercsv:super-csv:2.4.0'

    // ftp
    compile 'commons-net:commons-net:3.6'

    // auth
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.security.oauth:spring-security-oauth2'
    testCompile 'org.springframework.security:spring-security-test'

    // this is for retrying connection to config server
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.retry:spring-retry'

    compile 'mysql:mysql-connector-java'

    compile 'org.opentestsystem.rdw.common:rdw-common-archive'
    compile 'org.opentestsystem.rdw.common:rdw-common-status'
    compile project(':rdw-ingest-common')

    // cloud stream
    compile 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    compile 'org.springframework.cloud:spring-cloud-stream'

    testCompile 'org.springframework.boot:spring-boot-starter-test'

    // fixes java 8 time marshaling
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'
}

bootRun {
    addResources = true
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split('\\s+')
    }
}
