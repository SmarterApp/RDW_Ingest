package org.opentestsystem.rdw.ingest.tasking.repository;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.ingest.common.model.ImportContent;
import org.opentestsystem.rdw.ingest.common.model.ImportStatus;
import org.opentestsystem.rdw.ingest.common.model.RdwImportQuery;
import org.opentestsystem.rdw.ingest.tasking.model.ReconciliationReport;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@ActiveProfiles("test")
@Sql(statements = {
        "INSERT INTO district (id, name, natural_id) VALUES (-11, 'Sample District 1', 'District1NaturalId');",

        "INSERT INTO import (id, status, content, contentType, digest) VALUES (-99,1,1,'type','-99'), (-98,1,1,'type','-98'), (-97,0,1,'type','-97')",

        "INSERT INTO school (id, district_id, name, natural_id, import_id, upd_import_id) VALUES (-12, -11, 'Sample School 1', 'School1NaturalId', -99, -99);",

        "INSERT INTO asmt (id, natural_id, grade_id, type_id, subject_id, school_year, import_id, upd_import_id, name, label) VALUES" +
                " (-20, 'ASMT20', 11, 1, 1, 2017, -99, -99, 'name', 'label')",

        "INSERT INTO student (id, ssid, last_or_surname, first_name, gender_id, birthday, import_id, upd_import_id) VALUES" +
                " (-199, '6666666669', 'LastName9', 'FirstName9', 1, '2006-07-09', -99, -99)" +
                ",(-198, '6666666668', 'LastName8', 'FirstName8', 1, '2006-07-08', -98, -98)" +
                ",(-197, '6666666667', 'LastName7', 'FirstName7', 1, '2006-07-07', -97, -97)",

        "INSERT INTO exam_student (id, grade_id, student_id, school_id, iep, lep, section504, economic_disadvantage) VALUES" +
                " (-299, 11, -199, -12, 0, 0, 0, 0)" +
                ",(-298, 11, -198, -12, 0, 0, 0, 0)" +
                ",(-297, 11, -197, -12, 0, 0, 0, 0)",

        "INSERT INTO exam (id, exam_student_id, school_year, asmt_id, completeness_id, administration_condition_id, completed_at, import_id, upd_import_id, session_id) VALUES" +
                " (-399, -299, 2017, -20, 2, 1, '2017-05-12', -99, -99, 'session')" +
                ",(-398, -298, 2017, -20, 2, 1, '2017-05-12', -98, -98, 'session')" +
                ",(-397, -297, 2017, -20, 2, 1, '2017-05-12', -97, -97, 'session')"
})

public class JdbcReportRepositoryIT {

    @Autowired
    private JdbcReportRepository repository;

    @Test
    public void itShouldFindResults() {
        // one of the imports has status ACCEPTED so it should be skipped
        final String expected =
                "student_id,asmt_guid,date_taken\n" +
                "6666666669,ASMT20,20170512\n" +
                "6666666668,ASMT20,20170512\n";

        final RdwImportQuery query = RdwImportQuery.builder().content(ImportContent.EXAM).status(ImportStatus.PROCESSED).build();
        final ReconciliationReport report = repository.getReconciliationReport(query);
        assertThat(report.getData()).isEqualTo(expected.getBytes());
    }

    @Test
    public void itShouldCount() {
        // this won't work if there are pre-existing import records
        assertThat(repository.countExamImports(RdwImportQuery.builder().build())).isEqualTo(3);
    }

    @Test
    public void itShouldBeAvailable() {
        assertThat(repository.isAvailable()).isTrue();
    }
}
