package org.opentestsystem.rdw.ingest.tasking.repository;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.ingest.common.model.RdwImportQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.jdbc.SqlGroup;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;

import java.io.ByteArrayOutputStream;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.BEFORE_TEST_METHOD;

@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@ActiveProfiles("test")
@SqlGroup({
        @Sql(executionPhase = BEFORE_TEST_METHOD, scripts = {"classpath:JdbcReportRepositoryITSetup.sql"})
})
public class JdbcReportRepositoryIT {

    @Autowired
    private JdbcReportRepository repository;

    @Test
    public void itShouldFindResults() {
        final String expected =
                "student_id,asmt_guid,school_year,opp_id,batch,import_id\n" +
                "6666666669,ASMT20,2017,1021,batch1,-99\n" +
                "6666666668,ASMT20,2017,,batch1,-98\n";
        final ByteArrayOutputStream baos = new ByteArrayOutputStream();
        final RdwImportQuery query = RdwImportQuery.builder().batch("batch1").build();
        repository.writeReconciliationReport(query, baos);
        assertThat(baos.toString()).isEqualTo(expected);
    }

    @Test
    public void testExists() {
        assertThat(repository.exists(RdwImportQuery.builder().build())).isTrue();
    }

    @Test
    public void itShouldBeAvailable() {
        assertThat(repository.isAvailable()).isTrue();
    }
}
