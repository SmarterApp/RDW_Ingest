package org.opentestsystem.rdw.ingest.tasking.service.impl;

import org.opentestsystem.rdw.common.status.Rating;
import org.opentestsystem.rdw.common.status.UnitStatus;
import org.opentestsystem.rdw.ingest.common.model.RdwImport;
import org.opentestsystem.rdw.ingest.tasking.UpdateOrganizationsConfiguration;
import org.opentestsystem.rdw.ingest.tasking.service.ImportServiceClient;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.web.client.RestTemplate;

/**
 * An {@link ImportServiceClient} that uses REST API.<br/>
 *
 * This is instantiated explicitly by {@link UpdateOrganizationsConfiguration} so it is not
 * annotated as an autowired service.
 */
public class RestImportServiceClient implements ImportServiceClient {
    private static final Logger logger = LoggerFactory.getLogger(RestImportServiceClient.class);

    private final RestTemplate restTemplate;
    private final ImportServiceClientProperties properties;

    public RestImportServiceClient(final RestTemplate restTemplate,
                                   final ImportServiceClientProperties properties) {
        this.restTemplate = restTemplate;
        this.properties = properties;
    }

    @Override
    public void postOrganizationPayload(final byte[] payload) {
        final HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        final HttpEntity<byte[]> request = new HttpEntity<>(payload, headers);
        final RdwImport rdwImport = restTemplate.postForObject(properties.getOrganizationsImportsUrl(), request, RdwImport.class);
        if (rdwImport.getStatus().getValue() < 0) {
            logger.warn("organization import not accepted, id: {}, status: {}", rdwImport.getId(), rdwImport.getStatus());
        } else {
            logger.info("posted organizations import, id: {}, status: {}", rdwImport.getId(), rdwImport.getStatus());
        }
    }

    /**
     * @param query parameters to pass to the resubmit endpoint
     */
    @Override
    public void postExamsResubmitQuery(final String query) {
        final HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.TEXT_PLAIN);
        final HttpEntity<byte[]> request = new HttpEntity<>(null, headers);
        final RdwImport rdwImport = restTemplate.postForObject(properties.getOrganizationsImportsUrl(), request, RdwImport.class);
    }

    @Override
    public Rating getDiagnosticRating() {
        final UnitStatus status = restTemplate.getForObject(properties.getStatusUrl(), UnitStatus.class);
        return Rating.valueOf(status.getStatusText());
    }
}
