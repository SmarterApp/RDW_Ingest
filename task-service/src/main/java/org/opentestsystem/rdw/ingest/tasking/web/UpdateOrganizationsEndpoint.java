package org.opentestsystem.rdw.ingest.tasking.web;

import org.springframework.boot.actuate.endpoint.AbstractEndpoint;

import org.opentestsystem.rdw.ingest.tasking.service.UpdateOrganizationsService;
import org.opentestsystem.rdw.multitenant.TenantProperties;
import org.opentestsystem.rdw.multitenant.task.ImportServiceClientPropertiesResolver;

import static org.opentestsystem.rdw.ingest.tasking.UpdateOrganizationsTask.doUpdate;

/**
 * End-point for invoking update organizations for one or all tenants.
 */
public class UpdateOrganizationsEndpoint extends AbstractEndpoint<String> {
    private final TenantProperties tenantProperties;
    private final ImportServiceClientPropertiesResolver propertiesResolver;
    private final UpdateOrganizationsService updateOrganizationsService;

    /**
     * @param tenantProperties active tenants in the system
     * @param propertiesResolver used to find the tenants with the task configured
     * @param updateOrganizationsService service to do the work
     */
    public UpdateOrganizationsEndpoint(final TenantProperties tenantProperties,
                                       final ImportServiceClientPropertiesResolver propertiesResolver,
                                       final UpdateOrganizationsService updateOrganizationsService) {
        super("updateOrganizations", true, true);
        this.tenantProperties = tenantProperties;
        this.propertiesResolver = propertiesResolver;
        this.updateOrganizationsService = updateOrganizationsService;
    }

    @Override
    public String invoke() {
        return doUpdate(tenantProperties, propertiesResolver, updateOrganizationsService, null);
    }

    public String update(final String tenantId) {
        return doUpdate(tenantProperties, propertiesResolver, updateOrganizationsService, tenantId);
    }
}
