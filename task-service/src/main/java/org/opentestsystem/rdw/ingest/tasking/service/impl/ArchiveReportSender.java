package org.opentestsystem.rdw.ingest.tasking.service.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.InputStream;
import java.util.Properties;
import org.opentestsystem.rdw.archive.ArchiveService;
import org.opentestsystem.rdw.ingest.tasking.service.ReportSender;

/**
 * A ReportSender that uses the common archive service.
 */
public class ArchiveReportSender implements ReportSender {
    private static final Logger logger = LoggerFactory.getLogger(ArchiveReportSender.class);

    private static final String LocationPrefix = "REPORT" + File.separator;
    private final ArchiveService archiveService;

    public ArchiveReportSender(final ArchiveService archiveService) {
        this.archiveService = archiveService;
    }

    @Override
    public void sendReport(final InputStream is, final long contentLength, final String filename) {
        final Properties properties = new Properties();
        properties.put("Content-Length", contentLength);
        archiveService.writeResource(LocationPrefix + filename, is, properties);
    }

    @Override
    public boolean isAvailable() {
        try {
            archiveService.writeResource(LocationPrefix + "status", "status check".getBytes(), null);
            return true;
        } catch (final Exception e) {
            logger.warn("failed status check", e);
            return false;
        }
    }

    @Override
    public String toString() {
        // the wrapped service could be LocalArchiveService, S3ArchiveService, ArchiveServiceDecorator, etc.
        // so let's use the prefix to figure out if it is S3
        return "ArchiveReportSender{" +
                "archiveService=" + (archiveService.getRawUri("test").toLowerCase().startsWith("s3") ? "S3" : "local") +
                '}';
    }
}
