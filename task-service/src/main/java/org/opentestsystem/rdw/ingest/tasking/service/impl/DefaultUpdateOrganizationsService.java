package org.opentestsystem.rdw.ingest.tasking.service.impl;

import com.google.common.primitives.Bytes;
import org.opentestsystem.rdw.ingest.tasking.UpdateOrganizationsConfiguration;
import org.opentestsystem.rdw.ingest.tasking.repository.OrganizationDataRepository;
import org.opentestsystem.rdw.ingest.tasking.service.ImportServiceClient;
import org.opentestsystem.rdw.ingest.tasking.service.UpdateOrganizationsService;

import static java.nio.charset.StandardCharsets.UTF_8;

/**
 * Default implementation of {@link UpdateOrganizationsService} uses an {@link OrganizationDataRepository}
 * to fetch the data and posts it using an import-service client.
 * <p>
 * For a large state like CA, there are 1000+ districts and 13000+ schools. The JSON payload
 * is about 8MB. The current approach is a compromise: to avoid instantiating a bunch of POJO's,
 * it directly manipulates JSON in memory.
 * </p>
 * This is instantiated explicitly by {@link UpdateOrganizationsConfiguration} so it is not
 * annotated as an autowired service.
 */
public class DefaultUpdateOrganizationsService implements UpdateOrganizationsService {

    private static final byte[] OpenBrace = "{".getBytes(UTF_8);
    private static final byte[] DistrictGroups = " \"groupsofdistricts\": ".getBytes(UTF_8);
    private static final byte[] Districts = ", \"districts\": ".getBytes(UTF_8);
    private static final byte[] SchoolGroups = ", \"groupsofschools\": ".getBytes(UTF_8);
    private static final byte[] Schools = ", \"schools\": ".getBytes(UTF_8);
    private static final byte[] CloseBrace = "}".getBytes(UTF_8);

    private final OrganizationDataRepository organizationRepository;
    private final ImportServiceClient importServiceClient;

    public DefaultUpdateOrganizationsService(final OrganizationDataRepository organizationRepository,
                                             final ImportServiceClient importServiceClient) {
        this.organizationRepository = organizationRepository;
        this.importServiceClient = importServiceClient;
    }

    @Override
    public void doUpdate(final String state) {
        final byte[] payload = Bytes.concat(
                OpenBrace,
                DistrictGroups, organizationRepository.getGroupsOfDistrictsPayload(state),
                Districts, organizationRepository.getDistrictsPayload(state),
                SchoolGroups, organizationRepository.getGroupsOfSchoolsPayload(state),
                Schools, organizationRepository.getSchoolsPayload(state),
                CloseBrace
        );

        importServiceClient.postOrganizationPayload(payload);
    }
}
