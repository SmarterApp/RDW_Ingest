package org.opentestsystem.rdw.ingest.status;

import org.opentestsystem.rdw.ingest.auth.LocalAuthenticationProvider;
import org.opentestsystem.rdw.ingest.auth.OAuth2AuthenticationProvider;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.stereotype.Component;

import static com.google.common.collect.Lists.newArrayList;

/**
 * {@link StatusIndicator} that provides status on providers used by this application.
 */
@Component
public class ProvidersIndicator extends AbstractStatusIndicator {

    private final AuthenticationProvider authenticationProvider;

    @Autowired
    public ProvidersIndicator(final AuthenticationProvider authenticationProvider) {
        this.authenticationProvider = authenticationProvider;
    }

    @Override
    public String name() {
        return "providers";
    }

    @Override
    protected boolean doLevelCheck(final int level) {
        return level >= 5;
    }

    @Override
    protected void doStatusCheck(final Status.Builder builder, final int level) {
        // TODO - set overall Rating based on providers ratings
        // TODO - add RabbitMQ, ConfigServer?
        builder.detail("statuses", newArrayList(getAuthenticationProviderStatus()));
    }

    private UnitStatus getAuthenticationProviderStatus() {
        final UnitStatus.Builder builder = UnitStatus.builder()
                .unit("AuthProvider")
                .level(0);
        if (authenticationProvider instanceof LocalAuthenticationProvider) {
            builder.unit("LocalAuthProvider")
                    .rating(Rating.Ideal);
        } else if (authenticationProvider instanceof OAuth2AuthenticationProvider) {
            builder.unit("ART")
                    .rating(Rating.Ideal);
        } else {
            builder.rating(Rating.Failed);
        }

        return builder.build();
    }
}
