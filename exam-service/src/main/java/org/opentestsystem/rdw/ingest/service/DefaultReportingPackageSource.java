package org.opentestsystem.rdw.ingest.service;

import org.opentestsystem.rdw.ingest.auth.RdwUser;
import org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.cloud.stream.messaging.Source;
import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.stereotype.Service;

import javax.validation.constraints.NotNull;

import static com.google.common.base.Preconditions.checkNotNull;
import static org.opentestsystem.rdw.messaging.RdwMessageHeaderAccessor.wrap;

/**
 * Default implementation of ExamSource
 */
@Service
@EnableBinding(Source.class)
class DefaultReportingPackageSource implements ReportingPackageSource {

    private final MessageChannel output;

    @Autowired
    DefaultReportingPackageSource(@NotNull final MessageChannel output) {
        this.output = checkNotNull(output);
    }

    MessageChannel getOutput() {
        return output;
    }

    @Override
    public void submitPackage(final String body, final String contentType, final Long importId) {
        final RdwMessageHeaderAccessor accessor = wrap(null)
                .setReceivedNow()
                .setContent("reportingPackage")
                .setUserLogin("system")
                .setContentType(contentType)
                .setImportId(importId);
        output.send(MessageBuilder.createMessage(body, accessor.getMessageHeaders()));
    }
}
