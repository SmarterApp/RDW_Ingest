apply plugin: 'org.springframework.boot'

dependencies {
    // handy for creating metadata with @ConfigurationProperties
    optional "org.springframework.boot:spring-boot-configuration-processor"

    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.cloud:spring-cloud-starter-stream-rabbit'
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-stream'
    compile 'org.springframework.retry:spring-retry'

    // this is for retrying connection to config server
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.retry:spring-retry'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.cloud:spring-cloud-stream-test-support'

    compile "com.google.code.gson:gson"
    compile 'org.opentestsystem.rdw.common:rdw-common-messaging'
    compile 'org.opentestsystem.rdw.common:rdw-common-model'
    compile 'org.opentestsystem.rdw.common:rdw-common-status'
    compile 'org.opentestsystem.rdw.common:rdw-common-utils'
    compile 'mysql:mysql-connector-java'

    compile project(':rdw-ingest-common')
    testCompile project(path: ':rdw-ingest-common', configuration: 'tests')
}

//This will allow for running of the multithreaded test application
task runMTTest(type: JavaExec) {
    group = 'Verification'
    description = 'Runs MultiThreadedApplicationTest'
    outputs.upToDateWhen { false }
    doFirst { println "Running multithreaded tests..." }
    classpath = sourceSets.test.runtimeClasspath
    main = 'org.opentestsystem.rdw.ingest.processor.multithreaded.MultiThreadedApplicationTest'
}