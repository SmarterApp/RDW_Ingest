package org.opentestsystem.rdw.ingest.processor.service;


import org.opentestsystem.rdw.common.model.trt.Examinee;
import org.opentestsystem.rdw.ingest.common.model.District;
import org.opentestsystem.rdw.ingest.common.model.ImportException;
import org.opentestsystem.rdw.ingest.common.model.School;
import org.opentestsystem.rdw.ingest.common.util.DataElementErrorCollector;
import org.opentestsystem.rdw.ingest.processor.model.Student;
import org.opentestsystem.rdw.ingest.processor.model.StudentExamAttributes;

/**
 * An interface responsible for parsing and validating {@link Examinee}.
 * It includes data for {@link School}, {@link District}, {@link Student}, and {@link StudentExamAttributes}
 */
public interface ExamineeProcessor {

    /**
     * Parses {@link Student} and group membership
     *
     * @param examinee   the {@link Examinee} to be parsed
     * @param schoolYear the school year
     * @param schoolId   the id of the school
     * @throws ImportException
     */
    Student parseStudent(Examinee examinee, int schoolYear, int schoolId) throws ImportException;

    /**
     * Parses {@link StudentExamAttributes}.
     *
     * @param examinee       the {@link Examinee} to be parseStudent
     * @param schoolId       the id of the school
     * @param errorCollector the {@link DataElementErrorCollector} to store any parsing/validation error
     * @return if no errors, then the parsed {@link StudentExamAttributes}, otherwise null
     */
    StudentExamAttributes parseStudentExamAttributes(Examinee examinee, int schoolId, DataElementErrorCollector errorCollector);

    /**
     * Returns a school id for the {@link Examinee}
     *
     * @param examinee the {@link Examinee} to be parsed
     * @return school id
     * @throws ImportException
     */
    Integer parseSchoolId(Examinee examinee) throws ImportException;
}
