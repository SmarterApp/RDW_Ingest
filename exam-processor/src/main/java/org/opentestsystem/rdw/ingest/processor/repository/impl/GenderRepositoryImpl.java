package org.opentestsystem.rdw.ingest.processor.repository.impl;


import org.opentestsystem.rdw.ingest.processor.repository.GenderRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

@Repository
public class GenderRepositoryImpl implements GenderRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.gender.findIdByName}")
    private String findIdByNameSql;

    @Autowired
    public GenderRepositoryImpl(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    @Cacheable(value = "gender")
    public Integer findIdByName(final String name) {
        try {
            return jdbcTemplate.queryForObject(findIdByNameSql, new MapSqlParameterSource("name", name), Integer.class);
        } catch (final EmptyResultDataAccessException ignore) {
            throw new IllegalArgumentException("unknown gender name [" + name + "]");
        }
    }
}
