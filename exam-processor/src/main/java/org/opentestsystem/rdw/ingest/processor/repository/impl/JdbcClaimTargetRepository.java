package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.opentestsystem.rdw.ingest.processor.model.ClaimTarget;
import org.opentestsystem.rdw.ingest.processor.repository.ClaimTargetRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

@Repository
public class JdbcClaimTargetRepository implements ClaimTargetRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.claimTarget.findAll}")
    private String sqlFindAll;

    @Value("${sql.claimTarget.findBySubjectId}")
    private String sqlFindBySubjectId;

    @Autowired
    public JdbcClaimTargetRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    @Cacheable(value = "claimTargets")
    public List<ClaimTarget> findAll() {
        return jdbcTemplate.query(sqlFindAll, new MapSqlParameterSource(), RowMapper);
    }

    @Override
    @Cacheable(value = "subjectClaimTargets")
    public List<ClaimTarget> findBySubjectId(final int subjectId) {
        return jdbcTemplate.query(sqlFindBySubjectId, new MapSqlParameterSource("subject_id", subjectId), RowMapper);
    }

    private static final RowMapper<ClaimTarget> RowMapper =
            (rs, rowNum) -> new ClaimTarget(rs.getInt("id"), rs.getString("code"));
}
