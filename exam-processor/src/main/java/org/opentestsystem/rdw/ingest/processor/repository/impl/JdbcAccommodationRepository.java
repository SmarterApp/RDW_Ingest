package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.opentestsystem.rdw.ingest.processor.repository.AccommodationRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

/**
 * JdbcAccommodationRepository - repository for dealing with accommodations made available in an exam
 */
@Repository
public class JdbcAccommodationRepository implements AccommodationRepository{
    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.accommodation.findIdByCode}")
    private String findIdByCodeSql;

    @Autowired
    JdbcAccommodationRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }


    /**
     * Finds an id of the accommodation by its code
     *
     * @param code the code of the accommodation
     * @return the id or null if the given code is not found
     */
    @Override
    @Cacheable(value = "accCode")
    public Integer findIdByCode(String code){
        try {
            return jdbcTemplate.queryForObject(findIdByCodeSql, new MapSqlParameterSource("code", code), Integer.class);
        } catch (final EmptyResultDataAccessException ignore) {
            return null;
        }
    }
}
