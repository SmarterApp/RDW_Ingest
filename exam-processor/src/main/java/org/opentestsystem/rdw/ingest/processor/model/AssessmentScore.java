package org.opentestsystem.rdw.ingest.processor.model;

import org.opentestsystem.rdw.common.model.ScoreType;

/**
 * An assessment alt/claim score definition used by the exam processor.
 * <p>
 * The data stored is a bit confusing so an explanation:<ul>
 * <li>The scoreType is always set: OVERALL, ALT, CLAIM.</li>
 * <li>The subjectScoreId is null for OVERALL, set for ALT, CLAIM.</li>
 * <li>The code will be "OVERALL" for OVERALL, configured value for ALT, CLAIM.</li>
 * <li>The min/maxScore may be null: it is likely null for CLAIMS and should be set for ALT/OVERALL.</li>
 * </ul>
 * </p>
 */
public class AssessmentScore {
    private ScoreType scoreType;
    private Integer subjectScoreId;
    private String code;
    private Double minScore;
    private Double maxScore;

    /**
     * @return score type, e.g. CLAIM
     */
    public ScoreType getScoreType() { return scoreType; }

    /**
     * @return subject score id, null for OVERALL score
     */
    public Integer getSubjectScoreId() {
        return subjectScoreId;
    }

    /**
     * @return score code, e.g. "2-W", null for OVERALL score
     */
    public String getCode() {
        return code;
    }

    /**
     * @return minimum score for this assessment score, e.g. 1000.0, may be null for CLAIM
     */
    public Double getMinScore() {
        return minScore;
    }

    /**
     * @return maximum score for this assessment score, e.g. 3500.0, may be null for CLAIM
     */
    public Double getMaxScore() {
        return maxScore;
    }

    /**
     * @return builder for an AssessmentScore
     */
    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private ScoreType scoreType;
        private Integer subjectScoreId;
        private String code;
        private Double minScore;
        private Double maxScore;

        public AssessmentScore build() {
            final AssessmentScore score = new AssessmentScore();
            score.scoreType = scoreType;
            score.subjectScoreId = subjectScoreId;
            score.code = code;
            score.minScore = minScore;
            score.maxScore = maxScore;
            return score;
        }

        public Builder subjectScoreId(final Integer id) {
            this.subjectScoreId = id;
            return this;
        }

        public Builder scoreType(final ScoreType scoreType) {
            this.scoreType = scoreType;
            return this;
        }

        public Builder code(final String code) {
            this.code = code;
            return this;
        }

        public Builder minScore(final Double minScore) {
            this.minScore = minScore;
            return this;
        }

        public Builder maxScore(final Double maxScore) {
            this.maxScore = maxScore;
            return this;
        }
    }
}
