package org.opentestsystem.rdw.ingest.processor.service.impl;

import java.util.List;
import org.opentestsystem.rdw.ingest.processor.model.Claim;
import org.opentestsystem.rdw.ingest.processor.model.IabExam;
import org.opentestsystem.rdw.ingest.processor.model.IabExam.Builder;
import org.opentestsystem.rdw.ingest.processor.service.AnyExamParser;
import org.opentestsystem.rdw.model.Opportunity;
import org.springframework.stereotype.Component;

import static java.lang.Float.parseFloat;
import static java.lang.Integer.parseInt;

@Component
class IabExamParser extends AnyExamParser<IabExam, Builder> {

    @Override
    protected IabExam.Builder buildExam(final Opportunity opportunity, final List<Claim> claims) throws NumberFormatException {
        final IabExam.Builder examBuilder = IabExam.builder();
        opportunity.getScore()
                .stream()
                .filter(score -> IabExamParser.overallScore.equals(score.getMeasureOf()))
                .forEach(score -> {
                    switch (score.getMeasureLabel()) {
                        case scoreMeasureLabel:
                            examBuilder
                                    .withScaleScore(parseFloat(score.getValue()))
                                    .withScaleScoreStdErr(parseFloat(score.getStandardError()));
                            break;
                        case performanceLevelMeasureLabel:
                            examBuilder
                                    .withCategory(parseInt(score.getValue()));
                            break;
                        default:
                            break;
                    }
                });
        return examBuilder;
    }
}