package org.opentestsystem.rdw.ingest.processor.model;

import org.opentestsystem.rdw.common.model.AssessmentType;

import java.time.Instant;
import java.util.List;

import static com.google.common.collect.Lists.newArrayList;

/**
 * An Exam representing an outcome of {@link Student} taking a test.
 * It could be of any {@link AssessmentType}
 */
public class Exam {
    private int typeId;
    private Integer performanceLevel;
    private List<ExamClaim> examClaims;
    private Instant completedAt;
    private long assessmentId;
    private String asmtVersion;
    private int schoolYear;
    private Long opportunity;
    private String oppId;
    private Integer completenessId;
    private Integer administrationConditionId;
    private String sessionId;
    private List<ExamItem> examItems;
    private Double scaleScore;
    private Double scaleScoreStdErr;
    private List<Integer> accommodationIds;
    private StudentExamAttributes studentExamAttributes;
    private Integer studentId;

    public Integer getPerformanceLevel() {
        return performanceLevel;
    }

    /**
     * @return list of claims, may be empty (IAB) but won't be null
     */
    public List<ExamClaim> getExamClaims() {
        return examClaims == null ? newArrayList() : newArrayList(examClaims);
    }

    /**
     * @return a type id of the exam: IAB, ICA or Summative
     */
    public int getTypeId() {
        return typeId;
    }

    /**
     * This is the only setter because it is available after an object is persisted
     */
    public void setStudentId(final int studentId) {
        this.studentId = studentId;
    }

    public int getStudentId() {
        return studentId;
    }

    public StudentExamAttributes getStudentExamAttributes() {
        return studentExamAttributes;
    }

    public Double getScaleScore() {
        return scaleScore;
    }

    public Double getScaleScoreStdErr() {
        return scaleScoreStdErr;
    }

    public Instant getCompletedAt() {
        return completedAt;
    }

    public long getAssessmentId() {
        return assessmentId;
    }

    public String getAsmtVersion() {
        return asmtVersion;
    }

    public int getSchoolYear() {
        return schoolYear;
    }

    public Long getOpportunity() {
        return opportunity;
    }

    /**
     * @return the "oppId" value, this is a natural id from the TRT, not a db id
     */
    public String getOppId() {
        return oppId;
    }

    public Integer getCompletenessId() {
        return completenessId;
    }

    public Integer getAdministrationConditionId() {
        return administrationConditionId;
    }

    public String getSessionId() {
        return sessionId;
    }

    public List<ExamItem> getExamItems() {
        return examItems == null ? newArrayList() : examItems;
    }

    public List<Integer> getAccommodationIds() {
        return accommodationIds == null ? newArrayList() : accommodationIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    /**
     * The builder for the {@link Assessment}
     */
    public static class Builder {
        private int typeId;
        private Integer performanceLevel;
        private List<ExamClaim> examClaims;
        private Instant completedAt;
        private long assessmentId;
        private String asmtVersion;
        private Long opportunity;
        private String oppId;
        private Integer schoolYear;
        private Integer completenessId;
        private Integer administrationConditionId;
        private String sessionId;
        private List<ExamItem> examItems;
        private Double scaleScore;
        private Double scaleScoreStdErr;
        private List<Integer> accommodationIds;
        private StudentExamAttributes studentExamAttributes;

        public Exam build() {
            final Exam exam = new Exam();
            exam.typeId = typeId;
            exam.performanceLevel = performanceLevel;
            exam.examClaims = examClaims;
            exam.administrationConditionId = administrationConditionId;
            exam.completedAt = completedAt;
            exam.assessmentId = assessmentId;
            exam.asmtVersion = asmtVersion;
            exam.opportunity = opportunity;
            exam.oppId = oppId;
            exam.schoolYear = schoolYear;
            exam.completenessId = completenessId;
            exam.administrationConditionId = administrationConditionId;
            exam.sessionId = sessionId;
            exam.scaleScore = scaleScore;
            exam.scaleScoreStdErr = scaleScoreStdErr;
            exam.examItems = examItems;
            exam.accommodationIds = accommodationIds;
            exam.studentExamAttributes = studentExamAttributes;
            return exam;
        }

        public Builder performanceLevel(final Integer performanceLevel) {
            this.performanceLevel = performanceLevel;
            return this;
        }

        public Builder typeId(final int typeId) {
            this.typeId = typeId;
            return this;
        }

        public Builder examClaims(final List<ExamClaim> claims) {
            this.examClaims = claims;
            return this;
        }

        public Builder schoolYear(final Integer schoolYear) {
            this.schoolYear = schoolYear;
            return this;
        }

        public Builder completedAt(final Instant completedAt) {
            this.completedAt = completedAt;
            return this;
        }

        public Builder assessmentId(final long assessmentId) {
            this.assessmentId = assessmentId;
            return this;
        }

        public Builder asmtVersion(final String asmtVersion) {
            this.asmtVersion = asmtVersion;
            return this;
        }

        public Builder opportunity(final Long opportunity) {
            this.opportunity = opportunity;
            return this;
        }

        public Builder oppId(final String oppId) {
            this.oppId = oppId;
            return this;
        }

        public Builder completenessId(final Integer completenessId) {
            this.completenessId = completenessId;
            return this;
        }

        public Builder scaleScore(final Double scaleScore) {
            this.scaleScore = scaleScore;
            return this;
        }

        public Builder scaleScoreStdErr(final Double scaleScoreStdErr) {
            this.scaleScoreStdErr = scaleScoreStdErr;
            return this;
        }

        public Builder administrationConditionId(final Integer administrationConditionId) {
            this.administrationConditionId = administrationConditionId;
            return this;
        }

        public Builder sessionId(final String sessionId) {
            this.sessionId = sessionId;
            return this;
        }

        public Builder examItems(final List<ExamItem> examItems) {
            this.examItems = examItems;
            return this;
        }

        public Builder accommodationIds(final Iterable<Integer> accommodationIds) {
            this.accommodationIds = newArrayList(accommodationIds);
            return this;
        }

        public Builder studentExamAttributes(final StudentExamAttributes studentExamAttributes) {
            this.studentExamAttributes = studentExamAttributes;
            return this;
        }
    }
}
