package org.opentestsystem.rdw.ingest.processor.model;

import config.DataElementsConfiguration;

import java.util.Arrays;
import java.util.Set;

import static java.util.stream.Collectors.toSet;

/**
 * Represents data elements processed during exam (aka TRT) ingest.
 * <p>
 * Non-configurable elements have hardcoded validation rules and cannot be changed without changing the code.
 * <p>
 * A configurable field could be configured as required via {@link DataElementsConfiguration}.
 * If a configurable field is required it must be either missing or have either an empty or a valid value.
 */
public enum DataElement {
    // exam data elements
    SchoolId("SchoolId", false),
    FirstName("FirstName", true),
    LastOrSurname("LastOrSurname", true),
    MiddleName("MiddleName", true),
    StudentIdentifier("StudentIdentifier", false),
    Birthdate("Birthdate", true),
    Sex("Sex", true),
    FirstEntryDateIntoUSSchool("FirstEntryDateIntoUSSchool", true),
    LEPStatus("LEPStatus", true),
    LimitedEnglishProficiencyEntryDate("LimitedEnglishProficiencyEntryDate", true),
    LEPExitDate("LEPExitDate", true),
    EnglishLanguageProficiencyLevel("EnglishLanguageProficiencyLevel", true),
    TitleIIILanguageInstructionProgramType("TitleIIILanguageInstructionProgramType", true),
    EnglishLanguageAcquisitionStatus("EnglishLanguageAcquisitionStatus", true),
    EnglishLanguageAcquisitionStatusStartDate("EnglishLanguageAcquisitionStatusStartDate", true),
    IDEAIndicator("IDEAIndicator", true),
    Section504Status("Section504Status", true),
    EconomicDisadvantageStatus("EconomicDisadvantageStatus", true),
    MigrantStatus("MigrantStatus", true),
    LanguageCode("LanguageCode", true),
    PrimaryDisabilityType("PrimaryDisabilityType", true),
    GradeLevelWhenAssessed("GradeLevelWhenAssessed", false),
    StudentGroupName("StudentGroupName", true),
    // note this that is an 'umbrella' data element that represents all possible Race/Ethnicity elements further configured in the db
    Ethnicity("Ethnicity", true);


    private final String value;
    private final boolean configurable;

    DataElement(final String value, final boolean configurable) {
        this.value = value;
        this.configurable = configurable;
    }

    public static Set<DataElement> getAllConfigurable() {
        return Arrays.stream(values())
                .filter(dataElement -> (dataElement.configurable))
                .collect(toSet());
    }
}