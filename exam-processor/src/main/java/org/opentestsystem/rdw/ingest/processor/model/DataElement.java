package org.opentestsystem.rdw.ingest.processor.model;

import config.DataElementsConfiguration;

import java.util.Arrays;
import java.util.Set;

import static java.util.stream.Collectors.toSet;

/**
 * Represents data elements processed during exam (aka TRT) ingest.
 * <p>
 * A mandatory flag defines fields that are hardcoded as required and cannot be changed without changing the code.
 * <p>
 * Any non-mandatory fields could be configured as required via {@link DataElementsConfiguration}.
 * If a non-mandatory field is configured as required it must be either missing or have either an empty or a valid value.
 */
public enum DataElement {
    // exam data elements
    SchoolId("SchoolId", true),
    FirstName("FirstName", false),
    LastOrSurname("LastOrSurname", false),
    MiddleName("MiddleName", false),
    StudentIdentifier("StudentIdentifier", true),
    Birthdate("Birthdate", false),
    Sex("Sex", false),
    FirstEntryDateIntoUSSchool("FirstEntryDateIntoUSSchool", false),
    LEPStatus("LEPStatus", false),
    LimitedEnglishProficiencyEntryDate("LimitedEnglishProficiencyEntryDate", false),
    LEPExitDate("LEPExitDate", false),
    EnglishLanguageProficiencyLevel("EnglishLanguageProficiencyLevel", false),
    TitleIIILanguageInstructionProgramType("TitleIIILanguageInstructionProgramType", false),
    EnglishLanguageAcquisitionStatus("EnglishLanguageAcquisitionStatus", false),
    EnglishLanguageAcquisitionStatusStartDate("EnglishLanguageAcquisitionStatusStartDate", false),
    IDEAIndicator("IDEAIndicator", false),
    Section504Status("Section504Status", false),
    EconomicDisadvantageStatus("EconomicDisadvantageStatus", false),
    MigrantStatus("MigrantStatus", false),
    LanguageCode("LanguageCode", false),
    PrimaryDisabilityType("PrimaryDisabilityType", false),
    GradeLevelWhenAssessed("GradeLevelWhenAssessed", true),
    StudentGroupName("StudentGroupName", false),
    // note this that is an 'umbrella' data element that represents all possible Race/Ethnicity elements further configured in the db
    Ethnicity("Ethnicity", false),

    //these need to match to the ethnicity codes in the db
    HispanicOrLatinoEthnicity("HispanicOrLatinoEthnicity", false),
    AmericanIndianOrAlaskaNative("AmericanIndianOrAlaskaNative", false),
    Asian("Asian", false),
    BlackOrAfricanAmerican("BlackOrAfricanAmerican", false),
    White("White", false),
    NativeHawaiianOrOtherPacificIslander("NativeHawaiianOrOtherPacificIslander", false),
    DemographicRaceTwoOrMoreRaces("DemographicRaceTwoOrMoreRaces", false),
    Filipino("Filipino", false);


    private final String value;
    private final boolean isMandatory;

    DataElement(final String value, final boolean isMandatory) {
        this.value = value;
        this.isMandatory = isMandatory;
    }

    public static Set<DataElement> getAllConfigurable() {
        return Arrays.stream(values())
                .filter(dataElement -> (!dataElement.isMandatory))
                .collect(toSet());
    }
}