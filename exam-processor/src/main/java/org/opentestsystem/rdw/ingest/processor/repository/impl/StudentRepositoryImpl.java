package org.opentestsystem.rdw.ingest.processor.repository.impl;

import javax.validation.constraints.NotNull;
import org.opentestsystem.rdw.ingest.processor.model.Student;
import org.opentestsystem.rdw.ingest.processor.repository.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

@Repository
class StudentRepositoryImpl implements StudentRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    private final String findIdBySsidSql;
    private final String createSql;

    @Autowired
    public StudentRepositoryImpl(final NamedParameterJdbcTemplate jdbcTemplate,
                                 @NotNull @Value("${student.findIdBySsid.sql}") final String findIdBySsidSql,
                                 @NotNull @Value("${student.create.sql}") final String createSql) {
        this.jdbcTemplate = jdbcTemplate;
        this.createSql = createSql;
        this.findIdBySsidSql = findIdBySsidSql;
    }

    //TODO: this is wrong - need to change it to update the student
    //    https://ypereirareis.github.io/blog/2016/03/22/mysql-insert-ignore-alternatives/
    //    http://stackoverflow.com/questions/21409354/insert-ignore-vs-select-and-insert
    @Override
    public long findOrCreateBySsid(final Student student) {
        final KeyHolder keyHolder = new GeneratedKeyHolder();
        final SqlParameterSource parameterSource = new MapSqlParameterSource()
                .addValue("ssid", student.getSsid())
                .addValue("last_or_surname", student.getLastOrSurname())
                .addValue("first_name", student.getFirstName())
                .addValue("middle_name", student.getMiddleName())
                .addValue("gender_id", student.getGenderId())
                .addValue("ethnicity_id", student.getEthnicityId())
                .addValue("first_entry_into_us_school_at", student.getFirsEntryIntoUSSchoolAt())
                .addValue("lep_entry_at", student.getLepEntryAt())
                .addValue("lep_exit_at", student.getLepExitAt())
                .addValue("birthday", student.getBirthday());


        jdbcTemplate.update(createSql, parameterSource, keyHolder);

        final Number id = keyHolder.getKey();
        if (id != null) return id.intValue();
        return jdbcTemplate.queryForObject(findIdBySsidSql, new MapSqlParameterSource("ssid", student.getSsid()), Long.class);
    }
}
