package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.ingest.processor.model.Assessment;
import org.opentestsystem.rdw.ingest.processor.model.School;
import org.opentestsystem.rdw.ingest.processor.service.AssessmentService;
import org.opentestsystem.rdw.ingest.processor.service.ExamineeParser;
import org.opentestsystem.rdw.ingest.processor.service.ParsedExaminee;
import org.opentestsystem.rdw.ingest.processor.service.StudentExamProcessor;
import org.opentestsystem.rdw.ingest.processor.service.ParsedExamineeProcessor;
import org.opentestsystem.rdw.ingest.processor.service.TDSReportProcessor;
import org.opentestsystem.rdw.model.TDSReport;
import org.opentestsystem.rdw.utils.TenancyChain;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class DefaultTDSReportProcessor implements TDSReportProcessor {

    private final ExamineeParser examineeParser;
    private final StudentExamProcessor studentExamProcessor;
    private final AssessmentService assessmentService;
    private final ParsedExamineeProcessor studentProcessor;

    @Autowired
    public DefaultTDSReportProcessor(final ExamineeParser examineeParser,
                                     final StudentExamProcessor studentExamProcessor,
                                     final AssessmentService assessmentService,
                                     final ParsedExamineeProcessor studentProcessor) {

        this.examineeParser = examineeParser;
        this.studentExamProcessor = studentExamProcessor;
        this.assessmentService = assessmentService;
        this.studentProcessor = studentProcessor;

    }

    @Override
    public void process(final TDSReport report, final TenancyChain tenancyChain) {
        final ParsedExaminee parsedExaminee = examineeParser.parse(report.getExaminee());
        final School school = parsedExaminee.getSchool();
        //TODO: authorize(); need to had TenancyChain methods to support this,
        //TODO: tenancyChain.hasRoleForState("ASMTDATALOAD", "AP") won't be good enough

        final Assessment assessment = assessmentService.findOneByNaturalId(report.getTest());
        //TODO: need to handle not found assessment


        studentExamProcessor.process(report.getTest(), report.getOpportunity(), studentProcessor.process(parsedExaminee), assessment);
        //TODO: need to do post-processing: provenance and status update-?
    }
}
