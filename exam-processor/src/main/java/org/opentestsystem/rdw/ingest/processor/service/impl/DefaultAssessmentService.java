package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.common.model.trt.Test;
import org.opentestsystem.rdw.ingest.common.model.ImportException;
import org.opentestsystem.rdw.common.model.ImportStatus;
import org.opentestsystem.rdw.ingest.common.util.DataElementError;
import org.opentestsystem.rdw.ingest.common.util.DataElementErrorCollector;
import org.opentestsystem.rdw.ingest.common.util.ParserHelper;
import org.opentestsystem.rdw.ingest.processor.model.Assessment;
import org.opentestsystem.rdw.ingest.processor.repository.AssessmentRepository;
import org.opentestsystem.rdw.ingest.processor.service.AssessmentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import static org.opentestsystem.rdw.ingest.common.util.ParserHelper.toGrade;

@Service
class DefaultAssessmentService implements AssessmentService {
    private final AssessmentRepository assessmentRepository;

    @Autowired
    DefaultAssessmentService(final AssessmentRepository assessmentRepository) {
        this.assessmentRepository = assessmentRepository;
    }

    @Override
    public Assessment findOneForTest(final Test test) {

        // TRT has an assessment name and id flipped, so this is intentional
        final String assessmentNaturalId = test.getName();
        final Assessment assessment = assessmentRepository.findOneByNaturalId(assessmentNaturalId);

        if (assessment == null) throw new ImportException(ImportStatus.UNKNOWN_ASMT, "Unable to find an assessment by natural id [" + assessmentNaturalId + "]");

        final DataElementErrorCollector errorCollector = new DataElementErrorCollector();
        final ParserHelper parserHelper = new ParserHelper(errorCollector);
        if (!assessment.getSubjectCode().equalsIgnoreCase(test.getSubject()))
            errorCollector.add(new DataElementError("Assessment natural id [" + assessmentNaturalId + "], Test subject", test.getSubject(), "exam subject does not match asmt subject"));

        if (!assessment.getGradeCode().equalsIgnoreCase(parserHelper.validate("grade", test.getGrade(), toGrade)))
            errorCollector.add(new DataElementError("Assessment natural id [" + assessmentNaturalId + "], Test grade", test.getGrade(), "exam grade does not match asmt grade"));

        if (errorCollector.isEmpty()) return assessment;

        throw new ImportException(ImportStatus.BAD_DATA, errorCollector.toJson());
    }
}
