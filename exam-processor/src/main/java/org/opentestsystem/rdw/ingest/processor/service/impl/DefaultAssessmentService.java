package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.opentestsystem.rdw.ingest.processor.model.Assessment;
import org.opentestsystem.rdw.ingest.processor.repository.AssessmentRepository;
import org.opentestsystem.rdw.ingest.processor.repository.StubbedOutAssessmentRepository;
import org.opentestsystem.rdw.ingest.processor.repository.SubjectRepository;
import org.opentestsystem.rdw.ingest.processor.service.AssessmentService;
import org.opentestsystem.rdw.model.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
class DefaultAssessmentService implements AssessmentService {
    private final AssessmentRepository assessmentRepository;
    //TODO: remove the stubbed out repository dependency once we can ingest assessment packages
    private final StubbedOutAssessmentRepository stubbedOutAssessmentRepository;
    private final SubjectRepository subjectRepository;

    @Autowired
    DefaultAssessmentService(final AssessmentRepository assessmentRepository, final SubjectRepository subjectRepository, final StubbedOutAssessmentRepository stubbedOutAssessmentRepository) {
        this.assessmentRepository = assessmentRepository;
        this.subjectRepository = subjectRepository;
        this.stubbedOutAssessmentRepository = stubbedOutAssessmentRepository;
    }

    @Override
    public Assessment findOneByNaturalId(final Test test) {
        final Assessment assessment = assessmentRepository.findOneByNaturalId(test.getName());
        //TODO: this needs to be removed once we have assessments ingest working
        if (assessment != null) return assessment;

        final boolean iab = test.getTestId().contains("IAB");
        return stubbedOutAssessmentRepository.create(Assessment.builder()
                .academicYear((int) test.getAcademicYear())
                .gradeId(3)
                .naturalId(test.getName())
                .subjectId(subjectRepository.findIdByName(test.getSubject()))
                .typeId(iab ? 2 : 1)
                .build());
    }
}
