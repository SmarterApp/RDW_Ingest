package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import org.opentestsystem.rdw.ingest.common.multitenant.TenantCacheable;
import org.opentestsystem.rdw.ingest.processor.repository.MilitaryConnectedRepository;

@Repository
class JdbcMilitaryConnectedRepository implements MilitaryConnectedRepository {

    private final NamedParameterJdbcTemplate jdbcTemplate;

    @Value("${sql.militaryConnected.findIdByCode}")
    private String findIdByCodeSql;

    @Autowired
    JdbcMilitaryConnectedRepository(final NamedParameterJdbcTemplate jdbcTemplate) {
        this.jdbcTemplate = jdbcTemplate;
    }

    @Override
    @TenantCacheable(value = "militaryConnected")
    public Integer findIdByCode(final String code) {
        try {
            return jdbcTemplate.queryForObject(findIdByCodeSql, new MapSqlParameterSource("code", code), Integer.class);
        } catch (final EmptyResultDataAccessException ignore) {
            throw new IllegalArgumentException("unknown military connected code [" + code + "]");
        }
    }
}
