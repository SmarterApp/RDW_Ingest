package org.opentestsystem.rdw.ingest.processor.service;


import java.text.ParseException;
import org.opentestsystem.rdw.ingest.model.ImportException;
import org.opentestsystem.rdw.ingest.model.ImportStatus;
import org.opentestsystem.rdw.ingest.processor.model.AnyExam;
import org.opentestsystem.rdw.ingest.processor.model.Assessment;
import org.opentestsystem.rdw.ingest.processor.model.StudentExamAttributes;
import org.opentestsystem.rdw.ingest.processor.repository.AnyExamRepository;
import org.opentestsystem.rdw.model.Opportunity;
import org.opentestsystem.rdw.model.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * A generic class for processing all exam related data
 */
public abstract class AnyExamProcessor<E extends AnyExam, B extends AnyExam.Builder<B, E>, R extends AnyExamRepository<E>> {

    private static final Logger logger = LoggerFactory.getLogger(AnyExamProcessor.class);
    private final R repository;
    private final AnyExamParser<E, B> parser;

    /**
     * Constructor
     *
     * @param repository the {@link AnyExamRepository}
     * @param parser     the {@link AnyExamParser}
     */
    public AnyExamProcessor(final R repository, final AnyExamParser<E, B> parser) {
        this.repository = repository;
        this.parser = parser;
    }

    /**
     * @return a list of exam types supported
     */
    public abstract String[] getTypes();


    /**
     * Process the exam
     */
    public void process(final Test report, final Opportunity opportunity, final StudentExamAttributes studentExamAttributes, final Assessment assessment) throws ImportException {
        //todo: handle validation here; Ex. number of claims, score values (min/mx) and so on
        try {
            repository.create(parser.parse(report, opportunity, studentExamAttributes, assessment));
        } catch (final ParseException e) {
            throw new ImportException(ImportStatus.BAD_DATA, e.getMessage());
        }
    }

}
