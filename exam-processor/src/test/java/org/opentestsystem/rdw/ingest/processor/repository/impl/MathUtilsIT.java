package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.ingest.common.util.MathUtils;
import org.opentestsystem.rdw.ingest.processor.RepositoryBackedIT;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.jdbc.Sql;

import java.util.List;

import static org.assertj.core.api.Assertions.assertThat;

public class MathUtilsIT extends RepositoryBackedIT {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Test
    @Sql(executionPhase = Sql.ExecutionPhase.BEFORE_TEST_METHOD, statements = {
            "CREATE TABLE testFloat ( scoref float, scored double );",
            "INSERT INTO testFloat (scoref, scored) VALUES (2345.1234567, 2345.1234567), (.1234567, .1234567), (2.1234567, 2.1234567)"
    })
    @Sql(executionPhase = Sql.ExecutionPhase.AFTER_TEST_METHOD, statements = {
            "DROP TABLE testFloat"
    })
    public void isCloseFloat() {
        final List<Float> values = jdbcTemplate.queryForList("SELECT scoref FROM testFloat", Float.class);
        assertThat(MathUtils.isCloseSqlFloat(2345.1234567, values.get(0))).isTrue();
        assertThat(MathUtils.isCloseSqlFloat(.1234567, values.get(1))).isTrue();
        assertThat(MathUtils.isCloseSqlFloat(2.1234567, values.get(2))).isTrue();
    }
}
