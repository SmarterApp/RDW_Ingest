package org.opentestsystem.rdw.ingest.processor.utils;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.ingest.processor.utils.ParseUtil.toBoolean;
import static org.opentestsystem.rdw.ingest.processor.utils.ParseUtil.toDate;

public class ParseUtilTest {

    @Test
    public void ItShouldParseToBoolean() throws ParseException {
        assertThat(toBoolean("yes", "field")).isEqualTo(true);
        assertThat(toBoolean("YES", "field")).isEqualTo(true);
        assertThat(toBoolean("Yes", "field")).isEqualTo(true);
        assertThat(toBoolean("Y", "field")).isEqualTo(true);
        assertThat(toBoolean("y", "field")).isEqualTo(true);


        assertThat(toBoolean("No", "field")).isEqualTo(false);
        assertThat(toBoolean("NO", "field")).isEqualTo(false);
        assertThat(toBoolean("no", "field")).isEqualTo(false);
        assertThat(toBoolean("n", "field")).isEqualTo(false);
        assertThat(toBoolean("N", "field")).isEqualTo(false);

        assertThat(toBoolean("", "field")).isNull();
        assertThat(toBoolean(null, "field")).isNull();
    }

    @Test(expected = ParseException.class)
    public void ItShouldThrowUnsupportedValueForBoolean() throws ParseException {
        toBoolean("something", "field");
    }

    @Test
    public void ItShouldParseToDate() throws ParseException {
        assertThat(toDate("2000-01-07", "field")).isEqualTo(new SimpleDateFormat("yyyyy-mm-dd").parse("2000-01-07"));
    }

    @Test(expected = ParseException.class)
    public void ItShouldThrowUnsupportedValueForDate() throws ParseException {
        toBoolean("07-01-2000", "field");
    }
}