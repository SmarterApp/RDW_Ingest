package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import org.opentestsystem.rdw.ingest.processor.repository.ElasRepository;

import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcElasRepository.class)
@Sql(statements = {
        "INSERT INTO elas (id, code) VALUES (-99, 'E99');",
        "INSERT INTO elas (id, code) VALUES (-88, 'E88');",
        "INSERT INTO elas (id, code) VALUES (-55, 'E55');"
})
public class ElasRepositoryIT extends TenantAwareIT {

    @Autowired
    private ElasRepository repository;

    @Test
    public void itShouldReturnId() {
        assertThat(repository.findIdByCode("E99")).isEqualTo(-99);
        assertThat(repository.findIdByCode("E88")).isEqualTo(-88);
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldThrowExceptionWhenNameIsUnknown() {
        repository.findIdByCode("something");
    }

    @Test
    public void itShouldCacheReturnedId() {
        assertThat(getCachedValue("elas", "findIdByCode", "E55")).isNull();
        assertThat(repository.findIdByCode("E55")).isEqualTo(-55);
        assertThat(getCachedValue("elas", "findIdByCode", "E55").get()).isEqualTo(-55);
    }
}
