package org.opentestsystem.rdw.ingest.processor.multithreaded;

import com.google.common.collect.Lists;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import static com.google.common.collect.Lists.newArrayList;

/**
 * A base class for running multi-threaded testing involving jdbc
 */
public abstract class MultiThreadedTest {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    protected volatile boolean passed = true;

    /**
     * The test itself. Each test must provide its own implementation
     *
     * @return newly created {@link Runnable} to test
     */
    protected abstract Runnable newRunnable();

    /**
     * A hook to prepare the test data if needed
     */
    protected void setUp() {
        //override with anything that is needed for the test
    }

    /**
     * A multithreaded test runner
     *
     * @return a flag indicating a pass or fail
     */
    public boolean run(final int threadCount) throws InterruptedException {
        setUp();

        final ExecutorService pool = Executors.newFixedThreadPool(threadCount);
        final Runnable test = newRunnable();
        final List<Callable<Object>> tasks = newArrayList();
        for (int i = 0; i < threadCount; i++) {
            tasks.add(Executors.callable(test));
        }
        pool.invokeAll(tasks);

        cleanUp();
        return passed;
    }

    private void cleanUp() {
        final List<String> sqls = newArrayList(
                "DELETE FROM district",
                "DELETE FROM school",
                "DELETE FROM student",
                "DELETE FROM student_ethnicity",
                "DELETE FROM student_group",
                "DELETE FROM student_group_membership",
                "DELETE FROM user_student_group",
                "DELETE FROM asmt",
                "DELETE FROM asmt_score",
                "DELETE FROM item",
                "DELETE FROM item_common_core_standard",
                "DELETE FROM item_other_target",
                "DELETE FROM exam_student",
                "DELETE FROM exam",
                "DELETE FROM exam_item",
                "DELETE FROM exam_available_accommodation",
                "DELETE FROM exam_claim_score"
        );
        for (final String sql : Lists.reverse(sqls)) {
            jdbcTemplate.execute(sql);
        }
    }
}