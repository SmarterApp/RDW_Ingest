package org.opentestsystem.rdw.ingest.processor.multithreaded;

import com.google.common.collect.Lists;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;

import java.util.List;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import static com.google.common.collect.Lists.newArrayList;

/**
 * A base class for running multi-threaded testing involving jdbc
 */
public abstract class MultiThreadedTest {
    private final static int TEST_THREAD_COUNT = 5;

    @Autowired
    private JdbcTemplate jdbcTemplate;

    protected volatile Boolean passed = true;

    /**
     * The test itself. Each test must provide its own implementation
     *
     * @param pool the {@link ExecutorService}
     * @return newly created {@link Runnable} to test
     */
    protected abstract Runnable newRunnable(ExecutorService pool);

    /**
     * A hook to prepare the test data if needed
     */
    protected void setUp() {
        //override with anything that is needed for the test
    }

    /**
     * A multithreaded test runner
     *
     * @return a flag indicating a pass or fail
     */
    public boolean run() {
        cleanUp();
        setUp();

        final ExecutorService pool = Executors.newWorkStealingPool(TEST_THREAD_COUNT);
        final Runnable r = newRunnable(pool);

        for (int i = 0; i < TEST_THREAD_COUNT; i++) {
            pool.submit(r);
        }
        while (!pool.isTerminated()) {
            //stay alive
        }

        cleanUp();
        return passed;
    }

    private void cleanUp() {
        final List<String> sqls = newArrayList(
                "TRUNCATE TABLE school",
                "TRUNCATE TABLE district",
                "TRUNCATE TABLE student",
                "TRUNCATE TABLE student_ethnicity",
                "TRUNCATE TABLE student_group",
                "TRUNCATE TABLE student_group_membership",
                "TRUNCATE TABLE user_student_group",
                "TRUNCATE TABLE asmt",
                "TRUNCATE TABLE asmt_score",
                "TRUNCATE TABLE item",
                "TRUNCATE TABLE item_common_core_standard",
                "TRUNCATE TABLE item_other_target",
                "TRUNCATE TABLE exam_student",
                "TRUNCATE TABLE exam",
                "TRUNCATE TABLE exam_item",
                "TRUNCATE TABLE exam_available_accommodation",
                "TRUNCATE TABLE exam_claim_score"
        );
        jdbcTemplate.execute("SET FOREIGN_KEY_CHECKS = 0");
        for (final String sql : Lists.reverse(sqls)) {
            jdbcTemplate.execute(sql);
        }
        jdbcTemplate.execute("SET FOREIGN_KEY_CHECKS = 1");
    }
}