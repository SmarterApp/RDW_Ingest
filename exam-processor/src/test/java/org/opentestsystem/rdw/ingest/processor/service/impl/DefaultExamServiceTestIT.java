package org.opentestsystem.rdw.ingest.processor.service.impl;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.opentestsystem.rdw.ingest.processor.ExamProcessorApplication;
import org.opentestsystem.rdw.ingest.processor.service.ExamService;
import org.opentestsystem.rdw.model.TDSReport;
import org.opentestsystem.rdw.model.XmlUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.transaction.annotation.Transactional;


@RunWith(SpringRunner.class)
@SpringBootTest
@Transactional
@ContextConfiguration(classes = {ExamProcessorApplication.class})
public class DefaultExamServiceTestIT {
    @Autowired
    private ExamService service;

    @Test
    public void itShouldProcessMessageWithXmlContent() {
        for (final String sample : new String[]{
                "TDSReport.iab.sample.xml",
                "TDSReport.ica.sample.xml",
                "SBAC-IAB-FIXED-G4M-G-MATH-4.xml",
                "SBAC-IAB-FIXED-G6E-LangVocab-ELA-6.xml",
                "SBAC-IAB-FIXED-G6E-ReadLit-ELA-6.xml",
                "SBAC-IAB-FIXED-G6M-EE.xml",
                "SBAC-ICA-FIXED-G4M-COMBINED-2017.xml",
                "SBAC-ICA-FIXED-G6E-COMBINED-2017.xml",
                "SBAC-ICA-FIXED-G6M-COMBINED-2017.xml"
        }) {
            final TDSReport tdsReport = XmlUtils.tdsReportFromXml(this.getClass().getResourceAsStream("/" + sample));

            service.process(tdsReport);

            //TODO: add verification here
        }
    }
}