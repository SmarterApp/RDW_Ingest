package org.opentestsystem.rdw.ingest.processor.multithreaded;

import org.opentestsystem.rdw.ingest.processor.repository.SchoolRepository;
import org.opentestsystem.rdw.ingest.processor.model.StudentGroup;
import org.opentestsystem.rdw.ingest.processor.repository.StudentGroupRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.time.Instant;

@Component
public class MultiThreadedStudentGroupUpsert extends MultiThreadedTest {
    private static final Logger logger = LoggerFactory.getLogger(MultiThreadedStudentGroupUpsert.class);

    @Autowired
    private StudentGroupRepository repository;

    @Autowired
    private SchoolRepository schoolRepository;

    private StudentGroup group;

    @Override
    protected void setUp() {
        final int schoolId = createSchool();

        group = StudentGroup.builder()
                .name("test")
                .schoolId(schoolId)
                .schoolYear(2017)
                .active(true)
                .creator("test")
                .created(Instant.now())
                .build();
    }

    @Override
    protected Runnable newRunnable() {
        return () -> {
            try {
                repository.upsert(group, 1);
            } catch (final Exception ex) {
                logger.info("Exception:" + ex.getMessage());
                passed = false;
            }
        };
    }
}
