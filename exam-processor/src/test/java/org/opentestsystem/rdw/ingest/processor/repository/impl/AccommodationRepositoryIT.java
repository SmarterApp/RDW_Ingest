package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.opentestsystem.rdw.ingest.processor.repository.AccommodationRepository;

import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcAccommodationRepository.class)
@Sql(statements = {
        "INSERT INTO accommodation (id, code) VALUES (-99, 'a1');",
        "INSERT INTO accommodation (id, code) VALUES (-88, 'a2');",
        "INSERT INTO accommodation (id, code) VALUES (-55, 'a5');"
})
public class AccommodationRepositoryIT extends TenantAwareIT {

    @Autowired
    private AccommodationRepository repository;

    @Test
    public void itShouldReturnId() {
        assertThat(repository.findIdByCode("a1")).isEqualTo(-99);
        assertThat(repository.findIdByCode("a2")).isEqualTo(-88);
    }

    @Test
    public void itShouldReturnIds() {
        final List<String> codes = new ArrayList<>(Arrays.asList("a1", "a2"));
        assertThat(repository.findIdsByCodes(codes)).isEqualTo(Arrays.asList(-99,-88));
    }

    @Test
    public void itShouldReturnNullWhenCodeIsUnknown() {
        assertThat(repository.findIdByCode("zz")).isEqualTo(null);
    }

    @Test
    public void itShouldCacheReturnedId() {
        assertThat(getCachedValue("accCode", "findIdByCode", "a5")).isNull();
        assertThat(repository.findIdByCode("a5")).isEqualTo(-55);
        assertThat(getCachedValue("accCode", "findIdByCode", "a5").get()).isEqualTo(-55);
    }
}
