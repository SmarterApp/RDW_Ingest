package org.opentestsystem.rdw.ingest.processor.repository.impl;

import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.test.context.jdbc.Sql;

import org.opentestsystem.rdw.ingest.processor.repository.AssessmentTypeRepository;

import static org.assertj.core.api.Assertions.assertThat;

@Import(JdbcAssessmentTypeRepository.class)
@Sql(statements = {
        "INSERT INTO asmt_type (id, code) VALUES (-99, 'Code1');",
        "INSERT INTO asmt_type (id, code) VALUES (-88, 'Code2');",
        "INSERT INTO asmt_type (id, code) VALUES (-55, 'Code55');"
})
public class AssessmentTypeRepositoryIT extends TenantAwareIT {

    @Autowired
    private AssessmentTypeRepository repository;

    @Test
    public void itShouldReturnCode() {
        assertThat(repository.findCodeById(-99)).isEqualTo("Code1");
        assertThat(repository.findCodeById(-88)).isEqualTo("Code2");
    }

    @Test(expected = IllegalArgumentException.class)
    public void itShouldThrowExceptionWhenCodeIsUnknown() {
        repository.findCodeById(-77);
    }

    @Test
    public void itShouldCacheReturnedCode() {
        assertThat(getCachedValue("assessmentType", "findCodeById", -55)).isNull();
        assertThat(repository.findCodeById(-55)).isEqualTo("Code55");
        assertThat(getCachedValue("assessmentType", "findCodeById", -55).get()).isEqualTo("Code55");
    }
}
