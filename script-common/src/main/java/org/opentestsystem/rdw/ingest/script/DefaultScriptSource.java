package org.opentestsystem.rdw.ingest.script;

import com.google.common.base.Charsets;
import org.apache.commons.io.IOUtils;

import java.io.IOException;

import static java.util.Collections.emptyList;
import static java.util.Collections.emptyMap;
import static java.util.Collections.singletonList;

/**
 * TODO: This is a stub. It must be replaced with a real implementation that loads scripts from an s3 bucket,
 * a private GitHub repo, or other source.
 */
public class DefaultScriptSource implements ScriptSource {
    @Override
    public String loadScriptBaseClass() {
        return loadFromResourceFile("/scripts/DSLScriptBase.groovy");
    }

    @Override
    public PipelineDefinition loadPipelineDefinition(final String pipelineName, final String pipelineVersion) {
        return PipelineDefinition.builder()
                .name(pipelineName)
                .version(pipelineVersion)
                .options(singletonList("xml"))
                .nodeDefinitions(emptyList())
                .build();
    }

    @Override
    public ScriptInfo loadScript(final VersionedResource nodeDefinition) {
        return new ScriptInfo("return 0", emptyMap());
    }

    /**
     * Helper to avoid checked exception propagation.
     *
     * @param name resource filename
     * @return stringified copy of resource
     */
    private String loadFromResourceFile(final String name) {
        try {
            return IOUtils.toString(this.getClass().getResourceAsStream(name), Charsets.UTF_8);
        } catch (final IOException e) {
            throw new RuntimeException("Failed to load " + name, e);
        }
    }
}
