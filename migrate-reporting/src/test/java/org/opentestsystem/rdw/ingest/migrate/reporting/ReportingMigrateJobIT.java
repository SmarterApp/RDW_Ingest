package org.opentestsystem.rdw.ingest.migrate.reporting;

import org.junit.Test;
import org.springframework.batch.core.ExitStatus;
import org.springframework.batch.core.JobExecution;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.jdbc.SqlGroup;

import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.AFTER_TEST_METHOD;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.BEFORE_TEST_METHOD;

public class ReportingMigrateJobIT extends SpringBatchIT {

    @Test
    @SqlGroup({
            @Sql(executionPhase = BEFORE_TEST_METHOD, statements = "INSERT INTO `warehouse-test`.import (id, status, content, contentType, digest) VALUES (-99, 0, 1, 'type', 'digest')"),
            @Sql(executionPhase = AFTER_TEST_METHOD, statements = "DELETE FROM `warehouse-test`.import where id = -99")
    })
    public void testJobWithCodes() throws Exception {
        final JobExecution jobExecution = getJobLauncherTestUtils().launchJob();

        assertThat(jobExecution.getExitStatus().getExitCode()).isEqualTo(ExitStatus.COMPLETED.getExitCode());
    }


    @Test
    public void testJobWithoutCodes() throws Exception {
        final JobExecution jobExecution = getJobLauncherTestUtils().launchJob();

        assertThat(jobExecution.getExitStatus().getExitCode()).isEqualTo(ExitStatus.COMPLETED.getExitCode());
    }
}