package org.opentestsystem.rdw.ingest.migrate.reporting.step;

import org.junit.Test;
import org.opentestsystem.rdw.ingest.common.model.ImportContent;
import org.opentestsystem.rdw.ingest.migrate.reporting.MigrateBatch;
import org.opentestsystem.rdw.ingest.migrate.reporting.SpringBatchStepIT;
import org.springframework.batch.core.ExitStatus;
import org.springframework.batch.core.JobExecution;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.jdbc.Sql;
import org.springframework.test.context.jdbc.SqlGroup;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.opentestsystem.rdw.ingest.migrate.reporting.MigrateReportingConfiguration.stepUpsertCodesName;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.AFTER_TEST_METHOD;
import static org.springframework.test.context.jdbc.Sql.ExecutionPhase.BEFORE_TEST_METHOD;
import static org.springframework.test.jdbc.JdbcTestUtils.countRowsInTable;

public class UpsertCodesIT extends SpringBatchStepIT {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @SqlGroup({
            @Sql(executionPhase = BEFORE_TEST_METHOD, scripts = {"classpath:MigrateCodesFromStagingSetup.sql"}),
            @Sql(executionPhase = AFTER_TEST_METHOD, scripts = {"classpath:MigrateCodesFromStagingTierDown.sql"})
    })
    @Test
    public void testStep() {
        final int completenessCountBefore = countRowsInTable(jdbcTemplate, "`reporting-test`.completeness");

        getStepExecutionContext().put("batch", new MigrateBatch(1, 1, newArrayList(ImportContent.CODES)));

        final JobExecution jobExecution = launchStep(stepUpsertCodesName);
        assertThat(jobExecution.getExitStatus()).isEqualTo(ExitStatus.COMPLETED);

        assertThat(countRowsInTable(jdbcTemplate, "`reporting-test`.completeness")).isEqualTo(completenessCountBefore + 3);
    }
}