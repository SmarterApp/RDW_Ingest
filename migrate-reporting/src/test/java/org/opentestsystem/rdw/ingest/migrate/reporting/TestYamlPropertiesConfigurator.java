package org.opentestsystem.rdw.ingest.migrate.reporting;

import org.springframework.beans.factory.config.YamlPropertiesFactoryBean;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;
import org.springframework.core.io.Resource;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

/**
 * A {@link Configuration} class for loading SQL YML files as property source.
 * In the integration tests we need to append "-test" to the schema names.
 */
@Profile("test")
@Configuration
public class TestYamlPropertiesConfigurator {

    @Bean
    public static PropertySourcesPlaceholderConfigurer properties(final ApplicationContext applicationContext) {
        final List<Properties> props = new ArrayList<>();
        try {
            final YamlPropertiesFactoryBean yaml = new YamlPropertiesFactoryBean();
            for (final Resource res : applicationContext.getResources("classpath*:**.sql.yml")) {
                yaml.setResources(res);

                final Properties properties = new Properties();
                for (final Object prop : yaml.getObject().keySet()) {
                    final String key = (String) prop;
                    properties.put(key, yaml.getObject().getProperty(key)
                            .replace("staging.", "`staging-test`.")
                            .replace("reporting.", "`reporting-test`.")
                            .replace("warehouse.", "`warehouse-test`."));
                }
                props.add(properties);
            }
        } catch (final IOException e) {
            throw new RuntimeException(e);
        }

        final PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer = new PropertySourcesPlaceholderConfigurer();

        propertySourcesPlaceholderConfigurer.setPropertiesArray(props.toArray(new Properties[props.size()]));
        return propertySourcesPlaceholderConfigurer;
    }
}
