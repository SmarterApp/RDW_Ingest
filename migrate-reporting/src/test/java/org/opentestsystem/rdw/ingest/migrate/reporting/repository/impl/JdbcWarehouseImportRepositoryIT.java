package org.opentestsystem.rdw.ingest.migrate.reporting.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.ingest.migrate.reporting.RepositoryIT;
import org.opentestsystem.rdw.ingest.migrate.reporting.repository.WarehouseImportRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.jdbc.Sql;

import java.util.Optional;

import static org.assertj.core.api.Assertions.assertThat;

@Sql(scripts = {"classpath:MigrateImportFromWarehouseSetup.sql"})
public class JdbcWarehouseImportRepositoryIT extends RepositoryIT {

    @Autowired
    private WarehouseImportRepository repository;

    @Test
    public void itShouldFindMaxImportId() {
        final Long defaultMaxImportId = -991L;
        final Optional<Long> max = repository.findMaxImportId();
        assertThat(max)
                .isPresent()
                .hasValue(defaultMaxImportId);
    }

    @Sql(statements = "DELETE FROM warehouse_test.import")
    @Test
    public void itShouldFindNothingForMaxImportId() {
        final Optional<Long> max = repository.findMaxImportId();
        assertThat(max).isEmpty();
    }

    @Test
    public void itShouldFindMinImportId() {
        final Long defaultMinImportId = -1010L;
        final Optional<Long> min = repository.findMinImportId();
        assertThat(min)
                .isPresent()
                .hasValue(defaultMinImportId);
    }

    @Sql(statements = "DELETE FROM warehouse_test.import")
    @Test
    public void itShouldFindNothingForMinImportId() {
        final Optional<Long> min = repository.findMinImportId();
        assertThat(min).isEmpty();
    }
}