package org.opentestsystem.rdw.ingest.migrate.reporting.repository.impl;

import org.junit.Test;
import org.opentestsystem.rdw.ingest.migrate.reporting.MigrateWarehouseToStagingSqlConfiguration;
import org.opentestsystem.rdw.ingest.migrate.reporting.RepositoryIT;
import org.opentestsystem.rdw.ingest.migrate.reporting.repository.SqlCopyWarehouseToStagingRepository;
import org.opentestsystem.rdw.ingest.migrate.reporting.step.SqlCopyStatements;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Import;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.test.context.jdbc.Sql;

import java.time.Instant;
import java.util.List;

import static com.google.common.collect.Lists.newArrayList;
import static org.assertj.core.api.Assertions.assertThat;
import static org.springframework.test.jdbc.JdbcTestUtils.countRowsInTable;
import static org.springframework.test.jdbc.JdbcTestUtils.countRowsInTableWhere;


@Import({MigrateWarehouseToStagingSqlConfiguration.class})
public class JdbcSqlCopyWarehouseToStagingRepositoryIT extends RepositoryIT {

    @Autowired
    private MigrateWarehouseToStagingSqlConfiguration sqlConfig;

    @Autowired
    private SqlCopyWarehouseToStagingRepository repository;

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Test
    @Sql(statements = {
            "INSERT INTO warehouse_test.import (id, status, content, contentType, digest) VALUES ( -99, 0, 1, 'type', 'digest')",
            "INSERT INTO warehouse_test.district (id, name, natural_id) VALUES (-22, 'Sample District 1', 'DistrictNaturalId');",
            "INSERT INTO warehouse_test.school (id, district_id, name, natural_id, import_id, update_import_id, created, updated) VALUES " +
                    "(-27, -22, 'Sample School 1', 'SchoolNaturalId', 1, 1, '2017-07-18 19:45:33.966000', '2017-07-18 19:46:33.966000');"
    })
    public void itShouldCopyt() {

        assertThat(countRowsInTableWhere(jdbcTemplate, "warehouse_test.district", "id=-22")).isEqualTo(1);
        assertThat(countRowsInTable(jdbcTemplate, "staging_test.staging_district")).isEqualTo(0);

        List<SqlCopyStatements> copyStatementsList = newArrayList();
        copyStatementsList.add(new SqlCopyStatements(sqlConfig.getEntities().get("district").getSql().get("warehouseRead"),
                sqlConfig.getEntities().get("district").getSql().get("stagingInsert")));

        repository.execute(copyStatementsList, Instant.parse("2017-07-18T19:45:33.966Z"), Instant.parse("2017-07-18T19:45:33.966Z"), 1);

        assertThat(countRowsInTableWhere(jdbcTemplate, "staging_test.staging_district", "id=-22")).isEqualTo(1);
    }
}