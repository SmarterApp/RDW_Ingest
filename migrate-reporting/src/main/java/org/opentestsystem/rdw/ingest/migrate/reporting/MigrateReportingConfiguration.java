package org.opentestsystem.rdw.ingest.migrate.reporting;

import org.opentestsystem.rdw.ingest.migrate.reporting.listener.MigrateJobCompletionListener;
import org.opentestsystem.rdw.ingest.migrate.reporting.step.Warehouse;
import org.opentestsystem.rdw.ingest.migrate.reporting.step.WarehouseCheck;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecutionListener;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.batch.core.launch.support.RunIdIncrementer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;

/**
 * MigrateReportingConfiguration.
 * Spring Batch configuration for the migrate to reporting {@link Job}.
 */
@Import(StagingToReportingStepsConfig.class)
@Configuration
public class MigrateReportingConfiguration {

    private final JobBuilderFactory jobBuilderFactory;
    private final StepBuilderFactory stepBuilderFactory;

    public static final String stepReportingName = "stepReporting";
    public static final String stepWarehouseName = "stepWarehouse";
    public static final String stepWarehouseCheckName = "stepWarehouseCheck";


    @Autowired
    public MigrateReportingConfiguration(final JobBuilderFactory jobBuilderFactory,
                                         final StepBuilderFactory stepBuilderFactory) {

        this.jobBuilderFactory = jobBuilderFactory;
        this.stepBuilderFactory = stepBuilderFactory;
    }

    @Bean
    public JobExecutionListener listener() {
        return new MigrateJobCompletionListener();
    }

    @Bean
    public Job migrateReportingJob(@Qualifier("warehouseStep") final Step warehouse,
                                   @Qualifier("warehouseCheckStep") final Step warehouseCheck,
                                   @Qualifier("upsertCodesStep") final Step upsertCodes,
                                   @Qualifier("deleteEntitiesStep") final Step deleteEntitiesStep,
                                   @Qualifier("deleteCodesStep") final Step deleteCodes,
                                   @Qualifier("upsertOrganizationStep") final Step upsertOrganizationStep) {
        try {

            return jobBuilderFactory.get("Migrate Reporting Job")
                    .incrementer(new RunIdIncrementer())
                    .listener(listener())
                    .start(warehouse)
                    .next(warehouseCheck)
                    .next(upsertCodes)
                    .next(deleteEntitiesStep)
                    .next(upsertOrganizationStep)
                    .next(deleteCodes)
                    .build();
        } catch (Exception e) {
            return null;
        }
    }

    @Bean
    public Step warehouseStep(final Warehouse warehouse) {
        return stepBuilderFactory.get(stepWarehouseName)
                .tasklet(warehouse).build();
    }

    @Bean
    public Step warehouseCheckStep(final WarehouseCheck warehouseCheck) {
        return stepBuilderFactory.get(stepWarehouseCheckName)
                .tasklet(warehouseCheck).build();
    }
}
