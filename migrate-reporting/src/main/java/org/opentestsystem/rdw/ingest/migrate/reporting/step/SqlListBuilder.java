package org.opentestsystem.rdw.ingest.migrate.reporting.step;

import org.opentestsystem.rdw.ingest.migrate.reporting.MigrateStagingToWarehouseSqlConfiguration.EntitySqls;

import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Map;

import static com.google.common.collect.Lists.newArrayList;

/**
 * Builder for SQLs from {@link EntitySqls}
 */
class SqlListBuilder {

    private final Map<String, EntitySqls> entities;
    private final List<String> sqls = newArrayList();

    /**
     * Constructor
     *
     * @param entities the entities (by name) with the supported {@link EntitySqls}
     */
    public SqlListBuilder(final Map<String, EntitySqls> entities) {
        this.entities = entities;
    }

    public List<String> build() {
        return sqls;
    }

    /**
     * Adds a next SQL statement based on the entity name and sql action name
     *
     * @param entityName the entity name
     * @param sqlName    the sql action name
     * @return itself for chaining
     */
    public SqlListBuilder addNext(@NotNull final String entityName, @NotNull final String sqlName) {

        if (!entities.containsKey(entityName)) throw new IllegalArgumentException("unknown entity [" + entityName + "], check sql configuration");

        final Map<String, String> entitySqls = entities.get(entityName).getSql();
        if (!entitySqls.containsKey(sqlName)) throw new IllegalArgumentException("unknown sql name [" + sqlName + "] for entity [" + entityName + "], check sql configuration");

        sqls.add(entitySqls.get(sqlName));
        return this;
    }
}
