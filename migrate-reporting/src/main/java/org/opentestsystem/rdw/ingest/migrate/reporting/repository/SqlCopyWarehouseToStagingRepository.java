package org.opentestsystem.rdw.ingest.migrate.reporting.repository;

import org.opentestsystem.rdw.ingest.migrate.reporting.step.SqlCopyStatements;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;

import java.time.Instant;
import java.util.List;

/**
 * Repository for copying data from warehouse datamart to the staging tables in the reporting datamart
 */
public interface SqlCopyWarehouseToStagingRepository {

    /**
     * Executes {@link SqlCopyStatements#getWarehouseRead()} and passes the result into {@link SqlCopyStatements#getStagingInsert()}
     * Adds the given parameters to the SQLs in the {@link SqlCopyStatements}
     *
     * @param copyStatementsList the list of {@link SqlCopyStatements}
     * @param firstAt            the lower end of the timestamps range to add to the warehouse read parameters
     * @param lastAt             the upper end of the timestamps range to add to the warehouse read parameters
     * @param migrateId          the migrate id to add to the reporting write parameters
     */
    void execute(List<SqlCopyStatements> copyStatementsList, Instant firstAt, Instant lastAt, long migrateId);

    /**
     * Executes {@link SqlCopyStatements#getWarehouseRead()} and passes the result into {@link SqlCopyStatements#getStagingInsert()}}
     *
     * @param copyStatementsList the list of {@link SqlCopyStatements}
     */
    void execute(List<SqlCopyStatements> copyStatementsList);

    /**
     * Executes {@link SqlCopyStatements#getWarehouseRead()} and passes the result into {@link SqlCopyStatements#getStagingInsert()}.
     * Adds the given parameters to the read query. This method gives the most flexibility but
     * should be used only if the other methods don't do what is needed.
     *
     * @param copyStatementsList the list of {@link SqlCopyStatements}
     * @param migrateId          the migrate id to add to the reporting write parameters, may be null
     * @param queryParams        query params, may be empty but not null
     */
    void execute(List<SqlCopyStatements> copyStatementsList, final Long migrateId, final MapSqlParameterSource queryParams);
}
