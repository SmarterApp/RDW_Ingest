package org.opentestsystem.rdw.ingest.migrate.reporting;

import org.opentestsystem.rdw.ingest.migrate.reporting.repository.SqlListExecutionRepository;
import org.opentestsystem.rdw.ingest.migrate.reporting.step.SqlListExecutionStep;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import static com.google.common.collect.Lists.newArrayList;
import static org.opentestsystem.rdw.ingest.common.model.ImportContent.CODES;

/**
 * Configuration for batch steps responsible for moving the data from staging to reporting
 */
@Configuration
public class StagingToWarehouseStepsConfig {
    private final StepBuilderFactory stepBuilderFactory;
    private final SqlListExecutionRepository sqlListExecutionRepository;
    private final MigrateStagingToWarehouseSqlConfiguration stagingToWarehouseSqlConfiguration;

    public static final String stepUpsertCodesName = "stepUpsertCodes";
    public static final String stepDeleteCodesName = "stepDeleteCodes";

    @Autowired
    public StagingToWarehouseStepsConfig(final StepBuilderFactory stepBuilderFactory,
                                         final MigrateStagingToWarehouseSqlConfiguration stagingToWarehouseSqlConfiguration,
                                         final SqlListExecutionRepository sqlListExecutionRepository) {

        this.stepBuilderFactory = stepBuilderFactory;
        this.stagingToWarehouseSqlConfiguration = stagingToWarehouseSqlConfiguration;
        this.sqlListExecutionRepository = sqlListExecutionRepository;
    }

    // Code entities, in the order to be migrated due to the dependencies noted below
    public static final String[] codesEntities =
            {"grade", "completeness", "administration_condition", "ethnicity", "gender", "accommodation",
                    "claim", "depth_of_knowledge", "math_practice", "item_trait_score",
                    "target", //depends on claim
                    "item_difficulty_cuts" //depends on grade
            };

    @Bean
    public Step upsertCodesStep() {
        final SqlListBuilder sqlsBuilder = new SqlListBuilder(stagingToWarehouseSqlConfiguration.getEntities());
        for (final String entity : codesEntities) {
            sqlsBuilder.addNext(entity, "update").addNext(entity, "insert");
        }
        return stepBuilderFactory.get(stepUpsertCodesName)
                .tasklet(new SqlListExecutionStep(newArrayList(CODES),
                        sqlListExecutionRepository,
                        sqlsBuilder.build())).build();
    }

    @Bean
    public Step deleteCodesStep() {
        //delete has to be in the reverse order from the insert
        final SqlListBuilder sqlsBuilder = new SqlListBuilder(stagingToWarehouseSqlConfiguration.getEntities());
        for (int i = codesEntities.length - 1; i >= 0; i--) {
            sqlsBuilder.addNext(codesEntities[i], "delete");
        }
        return stepBuilderFactory.get(stepDeleteCodesName)
                .tasklet(new SqlListExecutionStep(newArrayList(CODES),
                        sqlListExecutionRepository,
                        sqlsBuilder.build())).build();
    }
}
