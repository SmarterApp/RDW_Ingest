package org.opentestsystem.rdw.ingest.migrate.reporting.configuration;

import org.springframework.boot.autoconfigure.jdbc.DataSourceBuilder;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.transaction.PlatformTransactionManager;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import javax.sql.DataSource;

/**
 * Configuration for DataSources.
 */
@Configuration
@EnableTransactionManagement
public class DataSourceConfiguration {

    @Bean(name = "warehouseDatasource")
    @ConfigurationProperties(prefix = "spring.warehouse_datasource")
    public DataSource warehouseDataSource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    /**
     * The datasource used for connecting to the warehouse database.
     *
     * @return DataSource
     */
    @Bean(name = "warehouseJdbcTemplate")
    public NamedParameterJdbcTemplate warehouseJdbcTemplate() {
        return new NamedParameterJdbcTemplate(warehouseDataSource());
    }

    @Bean
    public PlatformTransactionManager warehouseTransactionManager() {
        return new DataSourceTransactionManager(warehouseDataSource());
    }

    /**
     * The datasource used for connecting to the reporting database.
     *
     * @return DataSource
     */
    @Bean(name = "reportingDatasource")
    @ConfigurationProperties(prefix = "spring.reporting_datasource")
    public DataSource reportingDatasource() {
        return DataSourceBuilder
                .create()
                .build();
    }

    @Bean(name = "reportingJdbcTemplate")
    public NamedParameterJdbcTemplate reportingJdbcTemplate() {
        return new NamedParameterJdbcTemplate(reportingDatasource());
    }

    @Bean
    public PlatformTransactionManager reportingTransactionManager() {
        return new DataSourceTransactionManager(reportingDatasource());
    }

}