package org.opentestsystem.rdw.ingest.migrate.reporting.step;

import org.opentestsystem.rdw.ingest.migrate.reporting.Migrate;
import org.opentestsystem.rdw.ingest.migrate.reporting.repository.SqlCopyWarehouseToStagingRepository;
import org.springframework.batch.core.StepContribution;
import org.springframework.batch.core.scope.context.ChunkContext;
import org.springframework.batch.repeat.RepeatStatus;

import java.util.List;

/**
 * A generic step for executing {@link SqlCopyExecutionStep#sqlCopyStatements} in the given order
 */
class SqlCopyExecutionStep extends StepTasklet {

    private final SqlCopyWarehouseToStagingRepository repository;
    private final List<SqlCopyStatements> sqlCopyStatements;

    /**
     * Constructor
     *
     * @param repository        the repository
     * @param sqlCopyStatements the sqls to be executed by this step
     */
    public SqlCopyExecutionStep(final SqlCopyWarehouseToStagingRepository repository,
                                final List<SqlCopyStatements> sqlCopyStatements) {
        this.sqlCopyStatements = sqlCopyStatements;
        this.repository = repository;
    }

    @Override
    public RepeatStatus execute(final StepContribution contribution, final ChunkContext chunkContext) throws Exception {
        final Migrate migrate = getJobBatch(chunkContext);
        repository.execute(sqlCopyStatements, migrate.getFirstAt(), migrate.getLastAt(), migrate.getId());
        return RepeatStatus.FINISHED;
    }
}
