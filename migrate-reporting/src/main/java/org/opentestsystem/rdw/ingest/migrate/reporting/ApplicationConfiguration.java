package org.opentestsystem.rdw.ingest.migrate.reporting;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.launch.JobLauncher;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.actuate.endpoint.ConfigurationPropertiesReportEndpoint;
import org.springframework.cloud.stream.annotation.EnableBinding;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Import;
import org.springframework.scheduling.annotation.EnableScheduling;

import org.opentestsystem.rdw.common.status.StatusConfiguration;
import org.opentestsystem.rdw.migrate.common.MigrateJobProcessor;
import org.opentestsystem.rdw.migrate.common.TenantAwareMigrateJobHandler;
import org.opentestsystem.rdw.migrate.common.config.MigrateStagingToReportingSqlConfiguration;
import org.opentestsystem.rdw.migrate.common.config.MigrateWarehouseToStagingSqlConfiguration;
import org.opentestsystem.rdw.migrate.common.repository.MigrateRepository;
import org.opentestsystem.rdw.migrate.common.repository.WarehouseImportRepository;
import org.opentestsystem.rdw.multitenant.TenantIdResolver;
import org.opentestsystem.rdw.multitenant.configprops.ConfigpropsProcessor;
import org.opentestsystem.rdw.multitenant.configprops.ConfigpropsUpdatePublisher;
import org.opentestsystem.rdw.utils.YamlPropertiesConfigurator;

@Configuration
@Import({
        YamlPropertiesConfigurator.class,
        StatusConfiguration.class,
        MigrateWarehouseToStagingSqlConfiguration.class,
        MigrateStagingToReportingSqlConfiguration.class
})
@EnableBinding({MigrateJobProcessor.class, ConfigpropsProcessor.class})
@EnableScheduling
public class ApplicationConfiguration {

    @Bean
    public ConfigpropsUpdatePublisher configpropsUpdatePublisher(final @Value("${spring.application.name}") String serviceName,
                                                                 final ConfigpropsProcessor configpropsProcessor,
                                                                 final ConfigurationPropertiesReportEndpoint configurationPropertiesReportEndpoint,
                                                                 final ObjectMapper objectMapper) {
        return new ConfigpropsUpdatePublisher(serviceName,
                configpropsProcessor,
                configurationPropertiesReportEndpoint,
                objectMapper);
    }

    @Bean
    public TenantAwareMigrateJobHandler tenantAwareMigrateJobHandler(
            final MigrateRepository migrateRepository,
            final WarehouseImportRepository importRepository,
            final TenantIdResolver tenantIdResolver,
            final JobLauncher jobLauncher,
            final Job job,
            @Value("${migrate.batch.size}") final int batchSize,
            final MigrateJobProcessor migrateJobProcessor) {

        return new TenantAwareMigrateJobHandler(
                migrateRepository,
                importRepository,
                tenantIdResolver,
                jobLauncher,
                job,
                batchSize,
                migrateJobProcessor);
    }
}
