package org.opentestsystem.rdw.ingest.migrate.reporting.repository.impl;

import org.opentestsystem.rdw.ingest.migrate.reporting.repository.MigrateImportRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.dao.IncorrectResultSizeDataAccessException;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.stereotype.Repository;

import java.util.Optional;

@Repository
public class JdbcMigrateImportRepository implements MigrateImportRepository {

    private NamedParameterJdbcTemplate warehouseJdbcTemplate;
    private NamedParameterJdbcTemplate reportingJdbcTemplate;

    @Autowired
    public JdbcMigrateImportRepository(final NamedParameterJdbcTemplate warehouseJdbcTemplate,
                                       final NamedParameterJdbcTemplate reportingJdbcTemplate) {

        this.warehouseJdbcTemplate = warehouseJdbcTemplate;
        this.reportingJdbcTemplate = reportingJdbcTemplate;

    }

    @Value("${sql.stage.entities.import.sql.findMaxImportId}")
    private String findMaxImportId;

    @Value("${sql.stage.entities.import.sql.findMinImportId}")
    private String findMinImportId;

    @Value("${sql.stage.entities.import.sql.findLastMigratedImportId}")
    private String findLastMigratedImportId;


    @Override
    public Optional<Long> findMaxImportId() {

        try {
            return Optional.ofNullable(warehouseJdbcTemplate.getJdbcOperations().queryForObject(findMaxImportId, Long.class));
        } catch (IncorrectResultSizeDataAccessException ex) {
            return Optional.empty();
        }
    }

    @Override
    public Optional<Long> findMinImportId() {

        try {
            return Optional.ofNullable(warehouseJdbcTemplate.getJdbcOperations().queryForObject(findMinImportId, Long.class));
        } catch (IncorrectResultSizeDataAccessException ex) {
            return Optional.empty();
        }
    }

    @Override
    public Optional<Long> findLastMigratedImportId() {

        try {
            return Optional.ofNullable(reportingJdbcTemplate.getJdbcOperations().queryForObject(findLastMigratedImportId, Long.class));
        } catch (IncorrectResultSizeDataAccessException ex) {
            return Optional.empty();
        }
    }


}
