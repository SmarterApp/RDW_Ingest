package org.opentestsystem.rdw.ingest.migrate.reporting;


import org.opentestsystem.rdw.migrate.common.MigrateJobRunner;
import org.opentestsystem.rdw.migrate.common.repository.MigrateRepository;
import org.opentestsystem.rdw.migrate.common.repository.WarehouseImportRepository;
import org.springframework.batch.core.Job;
import org.springframework.batch.core.launch.JobLauncher;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Import;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

/**
 * Scheduled execution of the {@link MigrateReportingConfiguration#jobBuilderFactory}'s job.
 * It skips job execution while paused or disabled. It is paused using Spring's Lifecycle
 * start/stop (which can be set using the pause/resume actuator end-points). It is disabled
 * if there are any unresolved migrations in the database. An unresolved migration is any
 * that has a status of FAILED or STARTED. To enable, any such migrate records should be set
 * to ABANDONED with a message.
 */
@EnableScheduling
@EnableAsync
@Component
@Import({MigrateReportingConfiguration.class})
class MigrateReportingJobRunner extends MigrateJobRunner {

    @Autowired
    public MigrateReportingJobRunner(final MigrateRepository migrateRepository,
                                     final WarehouseImportRepository importRepository,
                                     final JobLauncher jobLauncher,
                                     final Job job,
                                     @Value("${migrate.batch.size}") final int batchSize) {
        super(migrateRepository, importRepository, jobLauncher, job, batchSize);
    }

    @Scheduled(fixedDelayString = "${migrate.batch.delay}")
    @Override
    public void run() {
        super.run();
    }
}