package org.opentestsystem.rdw.ingest.migrate.reporting;


import java.util.Objects;

/**
 * A migrate
 */
public class Migrate {

    private Long id;
    private long firstImportId;
    private long lastImportId;
    private long jobId;
    private MigrateStatus status;

    public MigrateStatus getStatus() {
        return status;
    }

    public long getFirstImportId() {
        return firstImportId;
    }

    public long getLastImportId() {
        return lastImportId;
    }

    public Long getId() {
        return id;
    }

    public long getJobId() {
        return jobId;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) return true;
        if (!(o instanceof Migrate)) return false;

        final Migrate that = (Migrate) o;
        return Objects.equals(id, that.id)
                && (jobId == that.jobId)
                && (firstImportId == that.firstImportId)
                && (lastImportId == that.lastImportId)
                && (status.equals(that.status));
    }

    @Override
    public int hashCode() {
        return Objects.hash(Migrate.class, id, firstImportId, lastImportId, jobId, status);
    }

    public Builder copy() {
        return new Builder().copy(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static class Builder {
        private Long id;
        private long firstImportId;
        private long lastImportId;
        private long jobId;
        private MigrateStatus status;

        public Migrate build() {
            final Migrate migrate = new Migrate();
            migrate.id = id;
            migrate.firstImportId = firstImportId;
            migrate.lastImportId = lastImportId;
            migrate.jobId = jobId;
            migrate.status = status;
            return migrate;
        }

        public Builder copy(final Migrate migrate) {
            id = migrate.id;
            firstImportId = migrate.firstImportId;
            lastImportId = migrate.lastImportId;
            jobId = migrate.jobId;
            status = migrate.status;
            return this;
        }

        public Builder id(final Long id) {
            this.id = id;
            return this;
        }

        public Builder status(final MigrateStatus status) {
            this.status = status;
            return this;
        }

        public Builder firstImportId(final long firstImportId) {
            this.firstImportId = firstImportId;
            return this;
        }

        public Builder lastImportId(final long lastImportId) {
            this.lastImportId = lastImportId;
            return this;
        }

        public Builder jobId(final long jobId) {
            this.jobId = jobId;
            return this;
        }
    }
}
