sql:
  # ------------ original format ------------------------------------------------------------------
  # todo: refactor names
  warehouseToStage:
    findMaxExamImportId: >-
      SELECT MAX(i.id)
        FROM warehouse.import i
          JOIN warehouse.import_content ic ON i.content = ic.id
        WHERE ic.name = 'EXAM'
    findWarehouseSubjects: >-
      SELECT ws.id, ws.code FROM warehouse.subject ws ORDER BY ws.id ASC
    findReportingSubjects: >-
      SELECT rs.id, rs.code FROM reporting.subject rs ORDER BY rs.id ASC
    findWarehouseAsmtTypes: >-
      SELECT wat.id, wat.code, wat.name FROM warehouse.asmt_type wat ORDER BY wat.id ASC
    findReportingAsmtTypes: >-
      SELECT rat.id, rat.code, rat.name FROM reporting.asmt_type rat ORDER by rat.id ASC
    findWarehouseSubjectClaimScores: >-
      SELECT wscs.id, wscs.subject_id, wscs.asmt_type_id, wscs.code, wscs.name
        FROM warehouse.subject_claim_score wscs ORDER BY wscs.id ASC
    findReportingSubjectClaimScores: >-
      SELECT rscs.id, rscs.subject_id, rscs.asmt_type_id, rscs.code, rscs.name
        FROM reporting.subject_claim_score rscs ORDER BY rscs.id ASC

    # Will use the complete list as warehouse to stage is completed.
    truncateStageList:
      - TRUNCATE TABLE staging.staging_grade
      - TRUNCATE TABLE staging.staging_completeness
      - TRUNCATE TABLE staging.staging_administration_condition
      - TRUNCATE TABLE staging.staging_ethnicity
      - TRUNCATE TABLE staging.staging_gender
      - TRUNCATE TABLE staging.staging_accommodation
      - TRUNCATE TABLE staging.staging_claim
      - TRUNCATE TABLE staging.staging_target
      - TRUNCATE TABLE staging.staging_common_core_standard
      - TRUNCATE TABLE staging.staging_depth_of_knowledge
      - TRUNCATE TABLE staging.staging_math_practice
      - TRUNCATE TABLE staging.staging_item_trait_score
      - TRUNCATE TABLE staging.staging_item_difficulty_cuts
      - TRUNCATE TABLE staging.staging_language
      - TRUNCATE TABLE staging.staging_accommodation_translation

    entities:
        # ------------ grade  -------------------------------------------------------------------
        grade:
          sql:
            warehouseRead: >-
              SELECT id, code, name from warehouse.grade

            stagingInsert: >-
              INSERT INTO staging.staging_grade (id, code, name) VALUES
                (:id, :code, :name)

        # ------------ completeness  -------------------------------------------------------------
        completeness:
          sql:
            warehouseRead: >-
              SELECT id, code from warehouse.completeness

            stagingInsert: >-
              INSERT INTO staging.staging_completeness (id, code) VALUES
                (:id, :code)

        # ------------ administration_condition  -------------------------------------------------------------
        administration_condition:
          sql:
            warehouseRead: >-
              SELECT id, code from warehouse.administration_condition

            stagingInsert: >-
              INSERT INTO staging.staging_administration_condition (id, code) VALUES
                (:id, :code)

        # ------------ ethnicity  -------------------------------------------------------------
        ethnicity:
          sql:
            warehouseRead: >-
             SELECT id, code from warehouse.ethnicity

            stagingInsert: >-
              INSERT INTO staging.staging_ethnicity (id, code) VALUES
                (:id, :code)

        # ------------ gender  -------------------------------------------------------------
        gender:
          sql:
            warehouseRead: >-
             SELECT id, code from warehouse.gender

            stagingInsert: >-
              INSERT INTO staging.staging_gender (id, code) VALUES
                (:id, :code)

        # ------------ accommodation  -------------------------------------------------------------
        accommodation:
          sql:
            warehouseRead: >-
             SELECT id, code from warehouse.accommodation

            stagingInsert: >-
              INSERT INTO staging.staging_accommodation (id, code) VALUES
                (:id, :code)

        # ------------ claim  -------------------------------------------------------------
        claim:
          sql:
            warehouseRead: >-
             SELECT id, subject_id, code, name, description from warehouse.claim

            stagingInsert: >-
              INSERT INTO staging.staging_claim (id, subject_id, code, name, description) VALUES
                (:id, :subject_id, :code, :name, :description)

        # ------------ target  -------------------------------------------------------------
        target:
          sql:
            warehouseRead: >-
             SELECT id, claim_id, code, description from warehouse.target

            stagingInsert: >-
              INSERT INTO staging.staging_target (id, claim_id, code, description) VALUES
                (:id, :claim_id, :code, :description)


        # ------------ common_core_standard  -------------------------------------------------------------
        common_core_standard:
          sql:
            warehouseRead: >-
             SELECT id, natural_id, subject_id, description from warehouse.common_core_standard

            stagingInsert: >-
              INSERT INTO staging.staging_common_core_standard (id, natural_id, subject_id, description) VALUES
                (:id, :natural_id, :subject_id, :description)


        # ------------ depth_of_knowledge  -------------------------------------------------------------
        depth_of_knowledge:
          sql:
            warehouseRead: >-
             SELECT id, level, subject_id, description, reference from warehouse.depth_of_knowledge

            stagingInsert: >-
              INSERT INTO staging.staging_depth_of_knowledge (id, level, subject_id, description, reference) VALUES
                (:id, :level, :subject_id, :description, :reference)

        # ------------ math_practice  -------------------------------------------------------------
        math_practice:
          sql:
            warehouseRead: >-
              SELECT practice, description from warehouse.math_practice

            stagingInsert: >-
              INSERT INTO staging.staging_math_practice (practice, description) VALUES
                (:practice, :description)

        # ------------ item_trait_score  -------------------------------------------------------------
        item_trait_score:
          sql:
            warehouseRead: >-
              SELECT id, dimension from warehouse.item_trait_score

            stagingInsert: >-
              INSERT INTO staging.staging_item_trait_score (id, dimension) VALUES
                (:id, :dimension)

        # ------------ item_difficulty_cuts  -------------------------------------------------------------
        item_difficulty_cuts:
          sql:
            warehouseRead: >-
              SELECT id, asmt_type_id, subject_id,grade_id, moderate_low_end, difficult_low_end from warehouse.item_difficulty_cuts

            stagingInsert: >-
              INSERT INTO staging.staging_item_difficulty_cuts (id, asmt_type_id, subject_id, grade_id, moderate_low_end, difficult_low_end) VALUES
                (:id, :asmt_type_id, :subject_id, :grade_id, :moderate_low_end, :difficult_low_end)

        # ------------ language  -------------------------------------------------------------
        language:
          sql:
            warehouseRead: >-
              SELECT id, code from warehouse.language

            stagingInsert: >-
              INSERT INTO staging.staging_language (id, code) VALUES
                (:id, :code)

        # ------------ accommodation_translation  -------------------------------------------------------------
        accommodation_translation:
          sql:
            warehouseRead: >-
              SELECT accommodation_id, language_id, label from warehouse.accommodation_translation

            stagingInsert: >-
              INSERT INTO staging.staging_accommodation_translation (accommodation_id, language_id, label) VALUES
                (:accommodation_id, :language_id, :label)

        # ------------ district  -------------------------------------------------------------------
        district:
          sql:
            warehouseRead: >-
              SELECT
                  wd.id,
                  wd.natural_id,
                  wd.name
                FROM warehouse.district wd
                WHERE EXISTS(
                    SELECT id from warehouse.school ws
                    WHERE district_id = wd.id
                          AND ws.deleted = 0
                          AND ( (import_id >= :start_import_id AND import_id <= :end_import_id) OR
                                (update_import_id >= :start_import_id AND update_import_id <= :end_import_id) )
                )

            stagingInsert: >-
              INSERT INTO staging.staging_district (id, natural_id, name, migrate_id) VALUES
                (:id, :natural_id, :name, :migrate_id)
