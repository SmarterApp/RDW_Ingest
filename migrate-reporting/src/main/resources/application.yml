management:
  # this app is expected to run inside the security perimeter so disable security for actuator end-points and,
  # since those are the only end-points, switch to a less standard port using the main server.port config
  security:
    enabled: false
server:
  port: 8008
  tomcat:
    max-connections: 2
    max-threads: 2

# enable lifecycle endpoints for pausing and resuming migration
endpoints:
  restart:
    enabled: true

# A batch size of 2000 offers good performance with reasonable resource utilization (-Xmx512m). A larger batch
# size (e.g. 4000) may improve overall performance but the resource limits need to be raised (e.g. -Xmx768m).
migrate:
  batch:
    size: 2000
    delay: 60000

reporting:
  school-year: 2019

spring:
  batch:
    job:
      enabled: false

  jackson:
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

datasources:
  reporting_rw:
    url-parts:
      protocol: "jdbc:mysql:"
      hosts: "${datasources.reporting_rw.url-server:localhost:3306}"
      database: "${datasources.reporting_rw.url-schema:reporting}"
      properties: "useSSL=${datasources.reporting_rw.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.reporting_rw.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.reporting_rw.character-encoding:utf8}\
                   &rewriteBatchedStatements=${datasources.reporting_rw.rewrite-batched-statements:true}\
                   &connectTimeout=${datasources.reporting_rw.connect-timeout:10000}\
                   &socketTimeout=${datasources.reporting_rw.socket-timeout:130000}\
                   "
    url: "${datasources.warehouse_rw.url-parts.protocol}//${datasources.warehouse_rw.url-parts.hosts}/${datasources.warehouse_rw.url-parts.database}?${datasources.warehouse_rw.url-parts.properties}"
    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.reporting_rw.query-timeout:120})"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.reporting_rw.initialSize}
    maxIdle: ${datasources.reporting_rw.maxActive}
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

  warehouse_rw:
    url-parts:
      protocol: "jdbc:mysql:"
      hosts: "${datasources.warehouse_rw.url-server:localhost:3306}"
      database: "${datasources.warehouse_rw.url-schema:warehouse}"
      properties: "useSSL=${datasources.warehouse_rw.use-ssl:false}\
                   &useLegacyDatetimeCode=${datasources.warehouse_rw.use-legacy-datetime-code:false}\
                   &characterEncoding=${datasources.warehouse_rw.character-encoding:utf8}\
                   &connectTimeout=${datasources.warehouse_rw.connect-timeout:10000}\
                   &socketTimeout=${datasources.warehouse_rw.socket-timeout:130000}\
                   "
    url: "${datasources.warehouse_rw.url-parts.protocol}//${datasources.warehouse_rw.url-parts.hosts}/${datasources.warehouse_rw.url-parts.database}?${datasources.warehouse_rw.url-parts.properties}"
    jdbcInterceptors: "QueryTimeoutInterceptor(queryTimeout=${datasources.warehouse_rw.query-timeout:120})"
    username: root
    password:
    testWhileIdle: true
    validationQuery: SELECT 1
    validationQueryTimeout: 10000
    driverClassName: com.mysql.jdbc.Driver
    initialize: false
    initialSize: 4
    maxActive: 10
    minIdle: ${datasources.warehouse_rw.initialSize}
    maxIdle: ${datasources.warehouse_rw.maxActive}
    maxWait: 10000
    removeAbandoned: false
    removeAbandonedTimeout: 60
    logAbandoned: false

logging:
  level:
    org.springframework.transaction: INFO
    org.springframework.jdbc.core.JdbcTemplate: INFO
    org.springframework.jdbc.datasource.DataSourceTransactionManager: INFO

tenantProperties:
  tenants:
    CA:
      id: CA
      key: CA
      name: California
    NV:
      id: NV
      key: NV
      name: Nevada
